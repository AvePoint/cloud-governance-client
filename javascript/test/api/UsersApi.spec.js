/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudGovernanceApi);
  }
}(this, function(expect, CloudGovernanceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudGovernanceApi.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('checkUserExistsInAOS', function() {
      it('should call checkUserExistsInAOS successfully', function(done) {
        //uncomment below and update the code to test checkUserExistsInAOS
        //instance.checkUserExistsInAOS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAzureAdUserPropertyValue', function() {
      it('should call getAzureAdUserPropertyValue successfully', function(done) {
        //uncomment below and update the code to test getAzureAdUserPropertyValue
        //instance.getAzureAdUserPropertyValue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUpsUserPropertyValue', function() {
      it('should call getUpsUserPropertyValue successfully', function(done) {
        //uncomment below and update the code to test getUpsUserPropertyValue
        //instance.getUpsUserPropertyValue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserBasicProperties', function() {
      it('should call getUserBasicProperties successfully', function(done) {
        //uncomment below and update the code to test getUserBasicProperties
        //instance.getUserBasicProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserBasicPropertyValue', function() {
      it('should call getUserBasicPropertyValue successfully', function(done) {
        //uncomment below and update the code to test getUserBasicPropertyValue
        //instance.getUserBasicPropertyValue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserPhoto', function() {
      it('should call getUserPhoto successfully', function(done) {
        //uncomment below and update the code to test getUserPhoto
        //instance.getUserPhoto(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserRelationship', function() {
      it('should call getUserRelationship successfully', function(done) {
        //uncomment below and update the code to test getUserRelationship
        //instance.getUserRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsersFromSharePoint', function() {
      it('should call getUsersFromSharePoint successfully', function(done) {
        //uncomment below and update the code to test getUsersFromSharePoint
        //instance.getUsersFromSharePoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resolveUsers', function() {
      it('should call resolveUsers successfully', function(done) {
        //uncomment below and update the code to test resolveUsers
        //instance.resolveUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resolveUsersWithExternalSharingOption', function() {
      it('should call resolveUsersWithExternalSharingOption successfully', function(done) {
        //uncomment below and update the code to test resolveUsersWithExternalSharingOption
        //instance.resolveUsersWithExternalSharingOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchUsers', function() {
      it('should call searchUsers successfully', function(done) {
        //uncomment below and update the code to test searchUsers
        //instance.searchUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchUsersWithExternalSharingOption', function() {
      it('should call searchUsersWithExternalSharingOption successfully', function(done) {
        //uncomment below and update the code to test searchUsersWithExternalSharingOption
        //instance.searchUsersWithExternalSharingOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserInfo', function() {
      it('should call updateUserInfo successfully', function(done) {
        //uncomment below and update the code to test updateUserInfo
        //instance.updateUserInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

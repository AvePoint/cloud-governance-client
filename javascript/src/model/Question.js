/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuestionaireType from './QuestionaireType';
import TermsMetadataSettings from './TermsMetadataSettings';

/**
 * The Question model module.
 * @module model/Question
 * @version 1.0
 */
class Question {
    /**
     * Constructs a new <code>Question</code>.
     * @alias module:model/Question
     */
    constructor() { 
        
        Question.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Question</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Question} obj Optional instance to populate.
     * @return {module:model/Question} The populated <code>Question</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Question();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = QuestionaireType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('contentHtml')) {
                obj['contentHtml'] = ApiClient.convertToType(data['contentHtml'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['String']);
            }
            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'String');
            }
            if (data.hasOwnProperty('termSettings')) {
                obj['termSettings'] = TermsMetadataSettings.constructFromObject(data['termSettings']);
            }
            if (data.hasOwnProperty('isMapToMetadata')) {
                obj['isMapToMetadata'] = ApiClient.convertToType(data['isMapToMetadata'], 'Boolean');
            }
            if (data.hasOwnProperty('referenceMetadata')) {
                obj['referenceMetadata'] = ApiClient.convertToType(data['referenceMetadata'], 'String');
            }
            if (data.hasOwnProperty('referenceMetadataName')) {
                obj['referenceMetadataName'] = ApiClient.convertToType(data['referenceMetadataName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Question.prototype['id'] = undefined;

/**
 * @member {module:model/QuestionaireType} type
 */
Question.prototype['type'] = undefined;

/**
 * @member {String} content
 */
Question.prototype['content'] = undefined;

/**
 * @member {String} contentHtml
 */
Question.prototype['contentHtml'] = undefined;

/**
 * @member {Array.<String>} values
 */
Question.prototype['values'] = undefined;

/**
 * @member {String} defaultValue
 */
Question.prototype['defaultValue'] = undefined;

/**
 * @member {module:model/TermsMetadataSettings} termSettings
 */
Question.prototype['termSettings'] = undefined;

/**
 * @member {Boolean} isMapToMetadata
 */
Question.prototype['isMapToMetadata'] = undefined;

/**
 * @member {String} referenceMetadata
 */
Question.prototype['referenceMetadata'] = undefined;

/**
 * @member {String} referenceMetadataName
 */
Question.prototype['referenceMetadataName'] = undefined;






export default Question;


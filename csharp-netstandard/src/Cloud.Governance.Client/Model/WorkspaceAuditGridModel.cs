/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// WorkspaceAuditGridModel
    /// </summary>
    [DataContract]
    public partial class WorkspaceAuditGridModel :  IEquatable<WorkspaceAuditGridModel>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ObjectType
        /// </summary>
        [DataMember(Name="objectType", EmitDefaultValue=false)]
        public AuditObjectType? ObjectType { get; set; }
        /// <summary>
        /// Gets or Sets Activity
        /// </summary>
        [DataMember(Name="activity", EmitDefaultValue=false)]
        public AuditActionType? Activity { get; set; }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public AutoImportPhase? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspaceAuditGridModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="objectName">objectName.</param>
        /// <param name="objectUrl">objectUrl.</param>
        /// <param name="objectType">objectType.</param>
        /// <param name="initiatedBy">initiatedBy.</param>
        /// <param name="initiatedByDisplayName">initiatedByDisplayName.</param>
        /// <param name="activity">activity.</param>
        /// <param name="actionTime">actionTime.</param>
        /// <param name="status">status.</param>
        public WorkspaceAuditGridModel(Guid id = default(Guid), string objectName = default(string), string objectUrl = default(string), AuditObjectType objectType = default(AuditObjectType), string initiatedBy = default(string), string initiatedByDisplayName = default(string), AuditActionType activity = default(AuditActionType), DateTime actionTime = default(DateTime), AutoImportPhase status = default(AutoImportPhase))
        {
            this.Id = id;
            this.ObjectName = objectName;
            this.ObjectUrl = objectUrl;
            this.ObjectType = objectType;
            this.InitiatedBy = initiatedBy;
            this.InitiatedByDisplayName = initiatedByDisplayName;
            this.Activity = activity;
            this.ActionTime = actionTime;
            this.Status = status;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets ObjectName
        /// </summary>
        [DataMember(Name="objectName", EmitDefaultValue=true)]
        public string ObjectName { get; set; }

        /// <summary>
        /// Gets or Sets ObjectUrl
        /// </summary>
        [DataMember(Name="objectUrl", EmitDefaultValue=true)]
        public string ObjectUrl { get; set; }

        /// <summary>
        /// Gets or Sets ObjectTypeDescription
        /// </summary>
        [DataMember(Name="objectTypeDescription", EmitDefaultValue=true)]
        public string ObjectTypeDescription { get; private set; }

        /// <summary>
        /// Gets or Sets InitiatedBy
        /// </summary>
        [DataMember(Name="initiatedBy", EmitDefaultValue=true)]
        public string InitiatedBy { get; set; }

        /// <summary>
        /// Gets or Sets InitiatedByDisplayName
        /// </summary>
        [DataMember(Name="initiatedByDisplayName", EmitDefaultValue=true)]
        public string InitiatedByDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets ActivityDescription
        /// </summary>
        [DataMember(Name="activityDescription", EmitDefaultValue=true)]
        public string ActivityDescription { get; private set; }

        /// <summary>
        /// Gets or Sets ActionTime
        /// </summary>
        [DataMember(Name="actionTime", EmitDefaultValue=false)]
        public DateTime ActionTime { get; set; }

        /// <summary>
        /// Gets or Sets StatusDescription
        /// </summary>
        [DataMember(Name="statusDescription", EmitDefaultValue=true)]
        public string StatusDescription { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WorkspaceAuditGridModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ObjectName: ").Append(ObjectName).Append("\n");
            sb.Append("  ObjectUrl: ").Append(ObjectUrl).Append("\n");
            sb.Append("  ObjectType: ").Append(ObjectType).Append("\n");
            sb.Append("  ObjectTypeDescription: ").Append(ObjectTypeDescription).Append("\n");
            sb.Append("  InitiatedBy: ").Append(InitiatedBy).Append("\n");
            sb.Append("  InitiatedByDisplayName: ").Append(InitiatedByDisplayName).Append("\n");
            sb.Append("  Activity: ").Append(Activity).Append("\n");
            sb.Append("  ActivityDescription: ").Append(ActivityDescription).Append("\n");
            sb.Append("  ActionTime: ").Append(ActionTime).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusDescription: ").Append(StatusDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WorkspaceAuditGridModel);
        }

        /// <summary>
        /// Returns true if WorkspaceAuditGridModel instances are equal
        /// </summary>
        /// <param name="input">Instance of WorkspaceAuditGridModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WorkspaceAuditGridModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ObjectName == input.ObjectName ||
                    (this.ObjectName != null &&
                    this.ObjectName.Equals(input.ObjectName))
                ) && 
                (
                    this.ObjectUrl == input.ObjectUrl ||
                    (this.ObjectUrl != null &&
                    this.ObjectUrl.Equals(input.ObjectUrl))
                ) && 
                (
                    this.ObjectType == input.ObjectType ||
                    this.ObjectType.Equals(input.ObjectType)
                ) && 
                (
                    this.ObjectTypeDescription == input.ObjectTypeDescription ||
                    (this.ObjectTypeDescription != null &&
                    this.ObjectTypeDescription.Equals(input.ObjectTypeDescription))
                ) && 
                (
                    this.InitiatedBy == input.InitiatedBy ||
                    (this.InitiatedBy != null &&
                    this.InitiatedBy.Equals(input.InitiatedBy))
                ) && 
                (
                    this.InitiatedByDisplayName == input.InitiatedByDisplayName ||
                    (this.InitiatedByDisplayName != null &&
                    this.InitiatedByDisplayName.Equals(input.InitiatedByDisplayName))
                ) && 
                (
                    this.Activity == input.Activity ||
                    this.Activity.Equals(input.Activity)
                ) && 
                (
                    this.ActivityDescription == input.ActivityDescription ||
                    (this.ActivityDescription != null &&
                    this.ActivityDescription.Equals(input.ActivityDescription))
                ) && 
                (
                    this.ActionTime == input.ActionTime ||
                    (this.ActionTime != null &&
                    this.ActionTime.Equals(input.ActionTime))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.StatusDescription == input.StatusDescription ||
                    (this.StatusDescription != null &&
                    this.StatusDescription.Equals(input.StatusDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ObjectName != null)
                    hashCode = hashCode * 59 + this.ObjectName.GetHashCode();
                if (this.ObjectUrl != null)
                    hashCode = hashCode * 59 + this.ObjectUrl.GetHashCode();
                hashCode = hashCode * 59 + this.ObjectType.GetHashCode();
                if (this.ObjectTypeDescription != null)
                    hashCode = hashCode * 59 + this.ObjectTypeDescription.GetHashCode();
                if (this.InitiatedBy != null)
                    hashCode = hashCode * 59 + this.InitiatedBy.GetHashCode();
                if (this.InitiatedByDisplayName != null)
                    hashCode = hashCode * 59 + this.InitiatedByDisplayName.GetHashCode();
                hashCode = hashCode * 59 + this.Activity.GetHashCode();
                if (this.ActivityDescription != null)
                    hashCode = hashCode * 59 + this.ActivityDescription.GetHashCode();
                if (this.ActionTime != null)
                    hashCode = hashCode * 59 + this.ActionTime.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusDescription != null)
                    hashCode = hashCode * 59 + this.StatusDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

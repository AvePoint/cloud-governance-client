// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ExternalSharingOptions,
    ExternalSharingOptionsFromJSON,
    ExternalSharingOptionsFromJSONTyped,
    ExternalSharingOptionsToJSON,
    GrantPermissionGroup,
    GrantPermissionGroupFromJSON,
    GrantPermissionGroupFromJSONTyped,
    GrantPermissionGroupToJSON,
    GrantPermissionSPObject,
    GrantPermissionSPObjectFromJSON,
    GrantPermissionSPObjectFromJSONTyped,
    GrantPermissionSPObjectToJSON,
    IntModel,
    IntModelFromJSON,
    IntModelFromJSONTyped,
    IntModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface GrantPermissionUrlValidationResult
 */
export interface GrantPermissionUrlValidationResult {
    /**
     * 
     * @type {ExternalSharingOptions}
     * @memberof GrantPermissionUrlValidationResult
     */
    externalSharingOptions?: ExternalSharingOptions;
    /**
     * 
     * @type {boolean}
     * @memberof GrantPermissionUrlValidationResult
     */
    enableShareAnnoymousLink?: boolean;
    /**
     * 
     * @type {GrantPermissionSPObject}
     * @memberof GrantPermissionUrlValidationResult
     */
    object?: GrantPermissionSPObject;
    /**
     * 
     * @type {Array<IntModel>}
     * @memberof GrantPermissionUrlValidationResult
     */
    spPermissionLevels?: Array<IntModel> | null;
    /**
     * 
     * @type {Array<GrantPermissionGroup>}
     * @memberof GrantPermissionUrlValidationResult
     */
    spGroups?: Array<GrantPermissionGroup> | null;
    /**
     * 
     * @type {boolean}
     * @memberof GrantPermissionUrlValidationResult
     */
    readonly isValid?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionUrlValidationResult
     */
    errorMessage?: string | null;
}

export function GrantPermissionUrlValidationResultFromJSON(json: any): GrantPermissionUrlValidationResult {
    return GrantPermissionUrlValidationResultFromJSONTyped(json, false);
}

export function GrantPermissionUrlValidationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrantPermissionUrlValidationResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'externalSharingOptions': !exists(json, 'externalSharingOptions') ? undefined : ExternalSharingOptionsFromJSON(json['externalSharingOptions']),
        'enableShareAnnoymousLink': !exists(json, 'enableShareAnnoymousLink') ? undefined : json['enableShareAnnoymousLink'],
        'object': !exists(json, 'object') ? undefined : GrantPermissionSPObjectFromJSON(json['object']),
        'spPermissionLevels': !exists(json, 'spPermissionLevels') ? undefined : (json['spPermissionLevels'] as Array<any>).map(IntModelFromJSON),
        'spGroups': !exists(json, 'spGroups') ? undefined : (json['spGroups'] as Array<any>).map(GrantPermissionGroupFromJSON),
        'isValid': !exists(json, 'isValid') ? undefined : json['isValid'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
    };
}

export function GrantPermissionUrlValidationResultToJSON(value?: GrantPermissionUrlValidationResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'externalSharingOptions': ExternalSharingOptionsToJSON(value.externalSharingOptions),
        'enableShareAnnoymousLink': value.enableShareAnnoymousLink,
        'object': GrantPermissionSPObjectToJSON(value.object),
        'spPermissionLevels': value.spPermissionLevels == null ? undefined : (value.spPermissionLevels as Array<any>).map(IntModelToJSON),
        'spGroups': value.spGroups == null ? undefined : (value.spGroups as Array<any>).map(GrantPermissionGroupToJSON),
        'errorMessage': value.errorMessage,
    };
}



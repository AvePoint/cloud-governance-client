/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddGroupMemberType from './AddGroupMemberType';
import ApiUser from './ApiUser';
import AssignBy from './AssignBy';
import BriefGroupPolicy from './BriefGroupPolicy';
import CommonStatus from './CommonStatus';
import CustomActivityInfo from './CustomActivityInfo';
import CustomMetadata from './CustomMetadata';
import GroupIdConstructureSettings from './GroupIdConstructureSettings';
import GroupNameConstructureSettings from './GroupNameConstructureSettings';
import GuidModel from './GuidModel';
import HubSiteActionType from './HubSiteActionType';
import MultiGeoSetting from './MultiGeoSetting';
import ServiceTeamsSettings from './ServiceTeamsSettings';
import ServiceType from './ServiceType';
import StringModel from './StringModel';

/**
 * The CreateGroupService model module.
 * @module model/CreateGroupService
 * @version 1.0
 */
class CreateGroupService {
    /**
     * Constructs a new <code>CreateGroupService</code>.
     * @alias module:model/CreateGroupService
     */
    constructor() { 
        
        CreateGroupService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateGroupService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGroupService} obj Optional instance to populate.
     * @return {module:model/CreateGroupService} The populated <code>CreateGroupService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateGroupService();

            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('enableTeams')) {
                obj['enableTeams'] = ApiClient.convertToType(data['enableTeams'], 'Boolean');
            }
            if (data.hasOwnProperty('isPrivate')) {
                obj['isPrivate'] = ApiClient.convertToType(data['isPrivate'], 'Boolean');
            }
            if (data.hasOwnProperty('enableSubscribe')) {
                obj['enableSubscribe'] = ApiClient.convertToType(data['enableSubscribe'], 'Boolean');
            }
            if (data.hasOwnProperty('enableApplySiteDesign')) {
                obj['enableApplySiteDesign'] = ApiClient.convertToType(data['enableApplySiteDesign'], 'Boolean');
            }
            if (data.hasOwnProperty('enableOutsideSender')) {
                obj['enableOutsideSender'] = ApiClient.convertToType(data['enableOutsideSender'], 'Boolean');
            }
            if (data.hasOwnProperty('enableHideGroupMembership')) {
                obj['enableHideGroupMembership'] = ApiClient.convertToType(data['enableHideGroupMembership'], 'Boolean');
            }
            if (data.hasOwnProperty('enableClassification')) {
                obj['enableClassification'] = ApiClient.convertToType(data['enableClassification'], 'Boolean');
            }
            if (data.hasOwnProperty('allowConfigureLeasePeriod')) {
                obj['allowConfigureLeasePeriod'] = ApiClient.convertToType(data['allowConfigureLeasePeriod'], 'Boolean');
            }
            if (data.hasOwnProperty('showNotebookLink')) {
                obj['showNotebookLink'] = ApiClient.convertToType(data['showNotebookLink'], 'Boolean');
            }
            if (data.hasOwnProperty('showConversationsLink')) {
                obj['showConversationsLink'] = ApiClient.convertToType(data['showConversationsLink'], 'Boolean');
            }
            if (data.hasOwnProperty('showFilesLink')) {
                obj['showFilesLink'] = ApiClient.convertToType(data['showFilesLink'], 'Boolean');
            }
            if (data.hasOwnProperty('showTeamSiteLink')) {
                obj['showTeamSiteLink'] = ApiClient.convertToType(data['showTeamSiteLink'], 'Boolean');
            }
            if (data.hasOwnProperty('showPlannerLink')) {
                obj['showPlannerLink'] = ApiClient.convertToType(data['showPlannerLink'], 'Boolean');
            }
            if (data.hasOwnProperty('classifications')) {
                obj['classifications'] = ApiClient.convertToType(data['classifications'], ['String']);
            }
            if (data.hasOwnProperty('siteDesigns')) {
                obj['siteDesigns'] = ApiClient.convertToType(data['siteDesigns'], [GuidModel]);
            }
            if (data.hasOwnProperty('addGroupMemberType')) {
                obj['addGroupMemberType'] = AddGroupMemberType.constructFromObject(data['addGroupMemberType']);
            }
            if (data.hasOwnProperty('selectedPolicies')) {
                obj['selectedPolicies'] = ApiClient.convertToType(data['selectedPolicies'], [BriefGroupPolicy]);
            }
            if (data.hasOwnProperty('selectedLanguages')) {
                obj['selectedLanguages'] = ApiClient.convertToType(data['selectedLanguages'], [StringModel]);
            }
            if (data.hasOwnProperty('teamsSettings')) {
                obj['teamsSettings'] = ServiceTeamsSettings.constructFromObject(data['teamsSettings']);
            }
            if (data.hasOwnProperty('groupNameConstructureSettings')) {
                obj['groupNameConstructureSettings'] = GroupNameConstructureSettings.constructFromObject(data['groupNameConstructureSettings']);
            }
            if (data.hasOwnProperty('groupIdConstructureSettings')) {
                obj['groupIdConstructureSettings'] = GroupIdConstructureSettings.constructFromObject(data['groupIdConstructureSettings']);
            }
            if (data.hasOwnProperty('enableHubSite')) {
                obj['enableHubSite'] = ApiClient.convertToType(data['enableHubSite'], 'Boolean');
            }
            if (data.hasOwnProperty('hubSiteActionType')) {
                obj['hubSiteActionType'] = HubSiteActionType.constructFromObject(data['hubSiteActionType']);
            }
            if (data.hasOwnProperty('associateHubSiteId')) {
                obj['associateHubSiteId'] = ApiClient.convertToType(data['associateHubSiteId'], 'String');
            }
            if (data.hasOwnProperty('associateHubSiteTitle')) {
                obj['associateHubSiteTitle'] = ApiClient.convertToType(data['associateHubSiteTitle'], 'String');
            }
            if (data.hasOwnProperty('isShowHubSiteSection')) {
                obj['isShowHubSiteSection'] = ApiClient.convertToType(data['isShowHubSiteSection'], 'Boolean');
            }
            if (data.hasOwnProperty('enableInstallApp')) {
                obj['enableInstallApp'] = ApiClient.convertToType(data['enableInstallApp'], 'Boolean');
            }
            if (data.hasOwnProperty('enableInstallPanel')) {
                obj['enableInstallPanel'] = ApiClient.convertToType(data['enableInstallPanel'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCreateTeamFromScratch')) {
                obj['enableCreateTeamFromScratch'] = ApiClient.convertToType(data['enableCreateTeamFromScratch'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCreateTeamFromExistTeam')) {
                obj['enableCreateTeamFromExistTeam'] = ApiClient.convertToType(data['enableCreateTeamFromExistTeam'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCreateTeamFromIT')) {
                obj['enableCreateTeamFromIT'] = ApiClient.convertToType(data['enableCreateTeamFromIT'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCreateTeamFromOwned')) {
                obj['enableCreateTeamFromOwned'] = ApiClient.convertToType(data['enableCreateTeamFromOwned'], 'Boolean');
            }
            if (data.hasOwnProperty('templateTeams')) {
                obj['templateTeams'] = ApiClient.convertToType(data['templateTeams'], [GuidModel]);
            }
            if (data.hasOwnProperty('defaultPrimaryContact')) {
                obj['defaultPrimaryContact'] = ApiUser.constructFromObject(data['defaultPrimaryContact']);
            }
            if (data.hasOwnProperty('defaultSecondaryContact')) {
                obj['defaultSecondaryContact'] = ApiUser.constructFromObject(data['defaultSecondaryContact']);
            }
            if (data.hasOwnProperty('defaultOwners')) {
                obj['defaultOwners'] = ApiClient.convertToType(data['defaultOwners'], [ApiUser]);
            }
            if (data.hasOwnProperty('defaultMembers')) {
                obj['defaultMembers'] = ApiClient.convertToType(data['defaultMembers'], [ApiUser]);
            }
            if (data.hasOwnProperty('defaultPolicy')) {
                obj['defaultPolicy'] = ApiClient.convertToType(data['defaultPolicy'], 'String');
            }
            if (data.hasOwnProperty('defaultClassification')) {
                obj['defaultClassification'] = ApiClient.convertToType(data['defaultClassification'], 'String');
            }
            if (data.hasOwnProperty('defaultLanguage')) {
                obj['defaultLanguage'] = ApiClient.convertToType(data['defaultLanguage'], 'String');
            }
            if (data.hasOwnProperty('defaultSiteDesign')) {
                obj['defaultSiteDesign'] = ApiClient.convertToType(data['defaultSiteDesign'], 'String');
            }
            if (data.hasOwnProperty('memberAssignBy')) {
                obj['memberAssignBy'] = AssignBy.constructFromObject(data['memberAssignBy']);
            }
            if (data.hasOwnProperty('ownerAssignBy')) {
                obj['ownerAssignBy'] = AssignBy.constructFromObject(data['ownerAssignBy']);
            }
            if (data.hasOwnProperty('privacyAssignBy')) {
                obj['privacyAssignBy'] = AssignBy.constructFromObject(data['privacyAssignBy']);
            }
            if (data.hasOwnProperty('subscribeAssignBy')) {
                obj['subscribeAssignBy'] = AssignBy.constructFromObject(data['subscribeAssignBy']);
            }
            if (data.hasOwnProperty('outsideSenderAssignBy')) {
                obj['outsideSenderAssignBy'] = AssignBy.constructFromObject(data['outsideSenderAssignBy']);
            }
            if (data.hasOwnProperty('classificationAssignBy')) {
                obj['classificationAssignBy'] = AssignBy.constructFromObject(data['classificationAssignBy']);
            }
            if (data.hasOwnProperty('languageAssignBy')) {
                obj['languageAssignBy'] = AssignBy.constructFromObject(data['languageAssignBy']);
            }
            if (data.hasOwnProperty('secondaryContactAssignBy')) {
                obj['secondaryContactAssignBy'] = AssignBy.constructFromObject(data['secondaryContactAssignBy']);
            }
            if (data.hasOwnProperty('primaryContactAssignBy')) {
                obj['primaryContactAssignBy'] = AssignBy.constructFromObject(data['primaryContactAssignBy']);
            }
            if (data.hasOwnProperty('enableDynamicMembership')) {
                obj['enableDynamicMembership'] = ApiClient.convertToType(data['enableDynamicMembership'], 'Boolean');
            }
            if (data.hasOwnProperty('hideGroupMembershipAssignBy')) {
                obj['hideGroupMembershipAssignBy'] = AssignBy.constructFromObject(data['hideGroupMembershipAssignBy']);
            }
            if (data.hasOwnProperty('policyAssignBy')) {
                obj['policyAssignBy'] = AssignBy.constructFromObject(data['policyAssignBy']);
            }
            if (data.hasOwnProperty('siteDesignAssignBy')) {
                obj['siteDesignAssignBy'] = AssignBy.constructFromObject(data['siteDesignAssignBy']);
            }
            if (data.hasOwnProperty('hubSiteAssignBy')) {
                obj['hubSiteAssignBy'] = AssignBy.constructFromObject(data['hubSiteAssignBy']);
            }
            if (data.hasOwnProperty('multiGeoSetting')) {
                obj['multiGeoSetting'] = MultiGeoSetting.constructFromObject(data['multiGeoSetting']);
            }
            if (data.hasOwnProperty('departmentAssignBy')) {
                obj['departmentAssignBy'] = AssignBy.constructFromObject(data['departmentAssignBy']);
            }
            if (data.hasOwnProperty('metadatas')) {
                obj['metadatas'] = ApiClient.convertToType(data['metadatas'], [CustomMetadata]);
            }
            if (data.hasOwnProperty('hideRequestSummary')) {
                obj['hideRequestSummary'] = ApiClient.convertToType(data['hideRequestSummary'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ServiceType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('department')) {
                obj['department'] = ApiClient.convertToType(data['department'], 'String');
            }
            if (data.hasOwnProperty('loadDepartmentFromUps')) {
                obj['loadDepartmentFromUps'] = ApiClient.convertToType(data['loadDepartmentFromUps'], 'Boolean');
            }
            if (data.hasOwnProperty('departments')) {
                obj['departments'] = ApiClient.convertToType(data['departments'], ['String']);
            }
            if (data.hasOwnProperty('serviceContact')) {
                obj['serviceContact'] = ApiUser.constructFromObject(data['serviceContact']);
            }
            if (data.hasOwnProperty('serviceAdminContact')) {
                obj['serviceAdminContact'] = ApiUser.constructFromObject(data['serviceAdminContact']);
            }
            if (data.hasOwnProperty('approversContainManagerRole')) {
                obj['approversContainManagerRole'] = ApiClient.convertToType(data['approversContainManagerRole'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = CommonStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('showServiceInCatalog')) {
                obj['showServiceInCatalog'] = ApiClient.convertToType(data['showServiceInCatalog'], 'Boolean');
            }
            if (data.hasOwnProperty('customActivity')) {
                obj['customActivity'] = CustomActivityInfo.constructFromObject(data['customActivity']);
            }
            if (data.hasOwnProperty('approvalProcessId')) {
                obj['approvalProcessId'] = ApiClient.convertToType(data['approvalProcessId'], 'String');
            }
            if (data.hasOwnProperty('languageId')) {
                obj['languageId'] = ApiClient.convertToType(data['languageId'], 'Number');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} tenantId
 */
CreateGroupService.prototype['tenantId'] = undefined;

/**
 * @member {Boolean} enableTeams
 */
CreateGroupService.prototype['enableTeams'] = undefined;

/**
 * @member {Boolean} isPrivate
 */
CreateGroupService.prototype['isPrivate'] = undefined;

/**
 * @member {Boolean} enableSubscribe
 */
CreateGroupService.prototype['enableSubscribe'] = undefined;

/**
 * @member {Boolean} enableApplySiteDesign
 */
CreateGroupService.prototype['enableApplySiteDesign'] = undefined;

/**
 * @member {Boolean} enableOutsideSender
 */
CreateGroupService.prototype['enableOutsideSender'] = undefined;

/**
 * @member {Boolean} enableHideGroupMembership
 */
CreateGroupService.prototype['enableHideGroupMembership'] = undefined;

/**
 * @member {Boolean} enableClassification
 */
CreateGroupService.prototype['enableClassification'] = undefined;

/**
 * @member {Boolean} allowConfigureLeasePeriod
 */
CreateGroupService.prototype['allowConfigureLeasePeriod'] = undefined;

/**
 * @member {Boolean} showNotebookLink
 */
CreateGroupService.prototype['showNotebookLink'] = undefined;

/**
 * @member {Boolean} showConversationsLink
 */
CreateGroupService.prototype['showConversationsLink'] = undefined;

/**
 * @member {Boolean} showFilesLink
 */
CreateGroupService.prototype['showFilesLink'] = undefined;

/**
 * @member {Boolean} showTeamSiteLink
 */
CreateGroupService.prototype['showTeamSiteLink'] = undefined;

/**
 * @member {Boolean} showPlannerLink
 */
CreateGroupService.prototype['showPlannerLink'] = undefined;

/**
 * @member {Array.<String>} classifications
 */
CreateGroupService.prototype['classifications'] = undefined;

/**
 * @member {Array.<module:model/GuidModel>} siteDesigns
 */
CreateGroupService.prototype['siteDesigns'] = undefined;

/**
 * @member {module:model/AddGroupMemberType} addGroupMemberType
 */
CreateGroupService.prototype['addGroupMemberType'] = undefined;

/**
 * @member {Array.<module:model/BriefGroupPolicy>} selectedPolicies
 */
CreateGroupService.prototype['selectedPolicies'] = undefined;

/**
 * @member {Array.<module:model/StringModel>} selectedLanguages
 */
CreateGroupService.prototype['selectedLanguages'] = undefined;

/**
 * @member {module:model/ServiceTeamsSettings} teamsSettings
 */
CreateGroupService.prototype['teamsSettings'] = undefined;

/**
 * @member {module:model/GroupNameConstructureSettings} groupNameConstructureSettings
 */
CreateGroupService.prototype['groupNameConstructureSettings'] = undefined;

/**
 * @member {module:model/GroupIdConstructureSettings} groupIdConstructureSettings
 */
CreateGroupService.prototype['groupIdConstructureSettings'] = undefined;

/**
 * @member {Boolean} enableHubSite
 */
CreateGroupService.prototype['enableHubSite'] = undefined;

/**
 * @member {module:model/HubSiteActionType} hubSiteActionType
 */
CreateGroupService.prototype['hubSiteActionType'] = undefined;

/**
 * @member {String} associateHubSiteId
 */
CreateGroupService.prototype['associateHubSiteId'] = undefined;

/**
 * @member {String} associateHubSiteTitle
 */
CreateGroupService.prototype['associateHubSiteTitle'] = undefined;

/**
 * @member {Boolean} isShowHubSiteSection
 */
CreateGroupService.prototype['isShowHubSiteSection'] = undefined;

/**
 * @member {Boolean} enableInstallApp
 */
CreateGroupService.prototype['enableInstallApp'] = undefined;

/**
 * @member {Boolean} enableInstallPanel
 */
CreateGroupService.prototype['enableInstallPanel'] = undefined;

/**
 * @member {Boolean} enableCreateTeamFromScratch
 */
CreateGroupService.prototype['enableCreateTeamFromScratch'] = undefined;

/**
 * @member {Boolean} enableCreateTeamFromExistTeam
 */
CreateGroupService.prototype['enableCreateTeamFromExistTeam'] = undefined;

/**
 * @member {Boolean} enableCreateTeamFromIT
 */
CreateGroupService.prototype['enableCreateTeamFromIT'] = undefined;

/**
 * @member {Boolean} enableCreateTeamFromOwned
 */
CreateGroupService.prototype['enableCreateTeamFromOwned'] = undefined;

/**
 * @member {Array.<module:model/GuidModel>} templateTeams
 */
CreateGroupService.prototype['templateTeams'] = undefined;

/**
 * @member {module:model/ApiUser} defaultPrimaryContact
 */
CreateGroupService.prototype['defaultPrimaryContact'] = undefined;

/**
 * @member {module:model/ApiUser} defaultSecondaryContact
 */
CreateGroupService.prototype['defaultSecondaryContact'] = undefined;

/**
 * @member {Array.<module:model/ApiUser>} defaultOwners
 */
CreateGroupService.prototype['defaultOwners'] = undefined;

/**
 * @member {Array.<module:model/ApiUser>} defaultMembers
 */
CreateGroupService.prototype['defaultMembers'] = undefined;

/**
 * @member {String} defaultPolicy
 */
CreateGroupService.prototype['defaultPolicy'] = undefined;

/**
 * @member {String} defaultClassification
 */
CreateGroupService.prototype['defaultClassification'] = undefined;

/**
 * @member {String} defaultLanguage
 */
CreateGroupService.prototype['defaultLanguage'] = undefined;

/**
 * @member {String} defaultSiteDesign
 */
CreateGroupService.prototype['defaultSiteDesign'] = undefined;

/**
 * @member {module:model/AssignBy} memberAssignBy
 */
CreateGroupService.prototype['memberAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} ownerAssignBy
 */
CreateGroupService.prototype['ownerAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} privacyAssignBy
 */
CreateGroupService.prototype['privacyAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} subscribeAssignBy
 */
CreateGroupService.prototype['subscribeAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} outsideSenderAssignBy
 */
CreateGroupService.prototype['outsideSenderAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} classificationAssignBy
 */
CreateGroupService.prototype['classificationAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} languageAssignBy
 */
CreateGroupService.prototype['languageAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} secondaryContactAssignBy
 */
CreateGroupService.prototype['secondaryContactAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} primaryContactAssignBy
 */
CreateGroupService.prototype['primaryContactAssignBy'] = undefined;

/**
 * @member {Boolean} enableDynamicMembership
 */
CreateGroupService.prototype['enableDynamicMembership'] = undefined;

/**
 * @member {module:model/AssignBy} hideGroupMembershipAssignBy
 */
CreateGroupService.prototype['hideGroupMembershipAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} policyAssignBy
 */
CreateGroupService.prototype['policyAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} siteDesignAssignBy
 */
CreateGroupService.prototype['siteDesignAssignBy'] = undefined;

/**
 * @member {module:model/AssignBy} hubSiteAssignBy
 */
CreateGroupService.prototype['hubSiteAssignBy'] = undefined;

/**
 * @member {module:model/MultiGeoSetting} multiGeoSetting
 */
CreateGroupService.prototype['multiGeoSetting'] = undefined;

/**
 * @member {module:model/AssignBy} departmentAssignBy
 */
CreateGroupService.prototype['departmentAssignBy'] = undefined;

/**
 * @member {Array.<module:model/CustomMetadata>} metadatas
 */
CreateGroupService.prototype['metadatas'] = undefined;

/**
 * @member {Boolean} hideRequestSummary
 */
CreateGroupService.prototype['hideRequestSummary'] = undefined;

/**
 * @member {String} id
 */
CreateGroupService.prototype['id'] = undefined;

/**
 * @member {String} name
 */
CreateGroupService.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CreateGroupService.prototype['description'] = undefined;

/**
 * @member {module:model/ServiceType} type
 */
CreateGroupService.prototype['type'] = undefined;

/**
 * @member {String} department
 */
CreateGroupService.prototype['department'] = undefined;

/**
 * @member {Boolean} loadDepartmentFromUps
 */
CreateGroupService.prototype['loadDepartmentFromUps'] = undefined;

/**
 * @member {Array.<String>} departments
 */
CreateGroupService.prototype['departments'] = undefined;

/**
 * @member {module:model/ApiUser} serviceContact
 */
CreateGroupService.prototype['serviceContact'] = undefined;

/**
 * @member {module:model/ApiUser} serviceAdminContact
 */
CreateGroupService.prototype['serviceAdminContact'] = undefined;

/**
 * @member {Boolean} approversContainManagerRole
 */
CreateGroupService.prototype['approversContainManagerRole'] = undefined;

/**
 * @member {module:model/CommonStatus} status
 */
CreateGroupService.prototype['status'] = undefined;

/**
 * @member {Boolean} showServiceInCatalog
 */
CreateGroupService.prototype['showServiceInCatalog'] = undefined;

/**
 * @member {module:model/CustomActivityInfo} customActivity
 */
CreateGroupService.prototype['customActivity'] = undefined;

/**
 * @member {String} approvalProcessId
 */
CreateGroupService.prototype['approvalProcessId'] = undefined;

/**
 * @member {Number} languageId
 */
CreateGroupService.prototype['languageId'] = undefined;

/**
 * @member {String} categoryId
 */
CreateGroupService.prototype['categoryId'] = undefined;






export default CreateGroupService;


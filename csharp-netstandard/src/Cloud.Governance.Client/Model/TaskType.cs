/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// ApprovalTask&#x3D;0, ErrorHandlingTask&#x3D;1, SCExpired&#x3D;2, &lt;/br&gt;SCNoAccess&#x3D;3, ToDoTask&#x3D;4, UserExpired&#x3D;5, &lt;/br&gt;GroupExpired&#x3D;6, GroupInactivityThreshold&#x3D;7, AutoImportGroup&#x3D;8, &lt;/br&gt;AutoImportSite&#x3D;9, RenewGroup&#x3D;10, RenewSite&#x3D;11, &lt;/br&gt;
    /// </summary>
    /// <value>ApprovalTask&#x3D;0, ErrorHandlingTask&#x3D;1, SCExpired&#x3D;2, &lt;/br&gt;SCNoAccess&#x3D;3, ToDoTask&#x3D;4, UserExpired&#x3D;5, &lt;/br&gt;GroupExpired&#x3D;6, GroupInactivityThreshold&#x3D;7, AutoImportGroup&#x3D;8, &lt;/br&gt;AutoImportSite&#x3D;9, RenewGroup&#x3D;10, RenewSite&#x3D;11, &lt;/br&gt;</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum TaskType
    {
        /// <summary>
        /// Enum ApprovalTask for value: ApprovalTask
        /// </summary>
        [EnumMember(Value = "ApprovalTask")]
        ApprovalTask = 0,

        /// <summary>
        /// Enum ErrorHandlingTask for value: ErrorHandlingTask
        /// </summary>
        [EnumMember(Value = "ErrorHandlingTask")]
        ErrorHandlingTask = 1,

        /// <summary>
        /// Enum SCExpired for value: SCExpired
        /// </summary>
        [EnumMember(Value = "SCExpired")]
        SCExpired = 2,

        /// <summary>
        /// Enum SCNoAccess for value: SCNoAccess
        /// </summary>
        [EnumMember(Value = "SCNoAccess")]
        SCNoAccess = 3,

        /// <summary>
        /// Enum ToDoTask for value: ToDoTask
        /// </summary>
        [EnumMember(Value = "ToDoTask")]
        ToDoTask = 4,

        /// <summary>
        /// Enum UserExpired for value: UserExpired
        /// </summary>
        [EnumMember(Value = "UserExpired")]
        UserExpired = 5,

        /// <summary>
        /// Enum GroupExpired for value: GroupExpired
        /// </summary>
        [EnumMember(Value = "GroupExpired")]
        GroupExpired = 6,

        /// <summary>
        /// Enum GroupInactivityThreshold for value: GroupInactivityThreshold
        /// </summary>
        [EnumMember(Value = "GroupInactivityThreshold")]
        GroupInactivityThreshold = 7,

        /// <summary>
        /// Enum AutoImportGroup for value: AutoImportGroup
        /// </summary>
        [EnumMember(Value = "AutoImportGroup")]
        AutoImportGroup = 8,

        /// <summary>
        /// Enum AutoImportSite for value: AutoImportSite
        /// </summary>
        [EnumMember(Value = "AutoImportSite")]
        AutoImportSite = 9,

        /// <summary>
        /// Enum RenewGroup for value: RenewGroup
        /// </summary>
        [EnumMember(Value = "RenewGroup")]
        RenewGroup = 10,

        /// <summary>
        /// Enum RenewSite for value: RenewSite
        /// </summary>
        [EnumMember(Value = "RenewSite")]
        RenewSite = 11,

    }

}

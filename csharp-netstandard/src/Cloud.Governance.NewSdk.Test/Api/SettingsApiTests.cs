/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Cloud.Governance.NewSdk.Client;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing SettingsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SettingsApiTests : IDisposable
    {
        private SettingsApi instance;

        public SettingsApiTests()
        {
            instance = new SettingsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SettingsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SettingsApi
            //Assert.IsType(typeof(SettingsApi), instance, "instance is a SettingsApi");
        }

        
        /// <summary>
        /// Test EditMyPersonalSettings
        /// </summary>
        [Fact]
        public void EditMyPersonalSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PersonalSettings personalSettings = null;
            //instance.EditMyPersonalSettings(personalSettings);
            
        }
        
        /// <summary>
        /// Test GetApplicationSettings
        /// </summary>
        [Fact]
        public void GetApplicationSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? localeId = null;
            //var response = instance.GetApplicationSettings(localeId);
            //Assert.IsType<ApplicationSettings> (response, "response is ApplicationSettings");
        }
        
        /// <summary>
        /// Test GetDynamicMembershipRuleItems
        /// </summary>
        [Fact]
        public void GetDynamicMembershipRuleItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid tenantid = null;
            //var response = instance.GetDynamicMembershipRuleItems(tenantid);
            //Assert.IsType<InlineResponse200> (response, "response is InlineResponse200");
        }
        
        /// <summary>
        /// Test GetHelpLink
        /// </summary>
        [Fact]
        public void GetHelpLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetHelpLink();
            //Assert.IsType<CustomHelpLinkModel> (response, "response is CustomHelpLinkModel");
        }
        
        /// <summary>
        /// Test GetMyPersonalSettings
        /// </summary>
        [Fact]
        public void GetMyPersonalSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMyPersonalSettings();
            //Assert.IsType<PersonalSettings> (response, "response is PersonalSettings");
        }
        
        /// <summary>
        /// Test GetNews
        /// </summary>
        [Fact]
        public void GetNewsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetNews();
            //Assert.IsType<NewsAndUpdatesInfo> (response, "response is NewsAndUpdatesInfo");
        }
        
        /// <summary>
        /// Test GetPermissionLevels
        /// </summary>
        [Fact]
        public void GetPermissionLevelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPermissionLevels();
            //Assert.IsType<List<PermissionLevel>> (response, "response is List<PermissionLevel>");
        }
        
        /// <summary>
        /// Test GetSupportedLanguages
        /// </summary>
        [Fact]
        public void GetSupportedLanguagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetSupportedLanguages();
            //Assert.IsType<List<ResourceValue>> (response, "response is List<ResourceValue>");
        }
        
        /// <summary>
        /// Test GetTimeZones
        /// </summary>
        [Fact]
        public void GetTimeZonesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTimeZones();
            //Assert.IsType<List<ResourceValue>> (response, "response is List<ResourceValue>");
        }
        
    }

}

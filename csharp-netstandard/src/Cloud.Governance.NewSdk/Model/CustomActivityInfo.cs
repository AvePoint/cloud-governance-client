/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.NewSdk.Client.OpenAPIDateConverter;

namespace Cloud.Governance.NewSdk.Model
{
    /// <summary>
    /// CustomActivityInfo
    /// </summary>
    [DataContract]
    public partial class CustomActivityInfo :  IEquatable<CustomActivityInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomActivityInfo" /> class.
        /// </summary>
        /// <param name="beforeAPExecution">beforeAPExecution.</param>
        /// <param name="afterAPExecution">afterAPExecution.</param>
        /// <param name="postExecution">postExecution.</param>
        /// <param name="beforeSubmission">beforeSubmission.</param>
        /// <param name="whenErrorTaskGenerated">whenErrorTaskGenerated.</param>
        public CustomActivityInfo(ExecutionInfo beforeAPExecution = default(ExecutionInfo), ExecutionInfo afterAPExecution = default(ExecutionInfo), ExecutionInfo postExecution = default(ExecutionInfo), ExecutionInfo beforeSubmission = default(ExecutionInfo), ExecutionInfo whenErrorTaskGenerated = default(ExecutionInfo))
        {
            this.BeforeAPExecution = beforeAPExecution;
            this.AfterAPExecution = afterAPExecution;
            this.PostExecution = postExecution;
            this.BeforeSubmission = beforeSubmission;
            this.WhenErrorTaskGenerated = whenErrorTaskGenerated;
        }
        
        /// <summary>
        /// Gets or Sets BeforeAPExecution
        /// </summary>
        [DataMember(Name="beforeAPExecution", EmitDefaultValue=false)]
        public ExecutionInfo BeforeAPExecution { get; set; }

        /// <summary>
        /// Gets or Sets AfterAPExecution
        /// </summary>
        [DataMember(Name="afterAPExecution", EmitDefaultValue=false)]
        public ExecutionInfo AfterAPExecution { get; set; }

        /// <summary>
        /// Gets or Sets PostExecution
        /// </summary>
        [DataMember(Name="postExecution", EmitDefaultValue=false)]
        public ExecutionInfo PostExecution { get; set; }

        /// <summary>
        /// Gets or Sets BeforeSubmission
        /// </summary>
        [DataMember(Name="beforeSubmission", EmitDefaultValue=false)]
        public ExecutionInfo BeforeSubmission { get; set; }

        /// <summary>
        /// Gets or Sets WhenErrorTaskGenerated
        /// </summary>
        [DataMember(Name="whenErrorTaskGenerated", EmitDefaultValue=false)]
        public ExecutionInfo WhenErrorTaskGenerated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomActivityInfo {\n");
            sb.Append("  BeforeAPExecution: ").Append(BeforeAPExecution).Append("\n");
            sb.Append("  AfterAPExecution: ").Append(AfterAPExecution).Append("\n");
            sb.Append("  PostExecution: ").Append(PostExecution).Append("\n");
            sb.Append("  BeforeSubmission: ").Append(BeforeSubmission).Append("\n");
            sb.Append("  WhenErrorTaskGenerated: ").Append(WhenErrorTaskGenerated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomActivityInfo);
        }

        /// <summary>
        /// Returns true if CustomActivityInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomActivityInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomActivityInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BeforeAPExecution == input.BeforeAPExecution ||
                    (this.BeforeAPExecution != null &&
                    this.BeforeAPExecution.Equals(input.BeforeAPExecution))
                ) && 
                (
                    this.AfterAPExecution == input.AfterAPExecution ||
                    (this.AfterAPExecution != null &&
                    this.AfterAPExecution.Equals(input.AfterAPExecution))
                ) && 
                (
                    this.PostExecution == input.PostExecution ||
                    (this.PostExecution != null &&
                    this.PostExecution.Equals(input.PostExecution))
                ) && 
                (
                    this.BeforeSubmission == input.BeforeSubmission ||
                    (this.BeforeSubmission != null &&
                    this.BeforeSubmission.Equals(input.BeforeSubmission))
                ) && 
                (
                    this.WhenErrorTaskGenerated == input.WhenErrorTaskGenerated ||
                    (this.WhenErrorTaskGenerated != null &&
                    this.WhenErrorTaskGenerated.Equals(input.WhenErrorTaskGenerated))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BeforeAPExecution != null)
                    hashCode = hashCode * 59 + this.BeforeAPExecution.GetHashCode();
                if (this.AfterAPExecution != null)
                    hashCode = hashCode * 59 + this.AfterAPExecution.GetHashCode();
                if (this.PostExecution != null)
                    hashCode = hashCode * 59 + this.PostExecution.GetHashCode();
                if (this.BeforeSubmission != null)
                    hashCode = hashCode * 59 + this.BeforeSubmission.GetHashCode();
                if (this.WhenErrorTaskGenerated != null)
                    hashCode = hashCode * 59 + this.WhenErrorTaskGenerated.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

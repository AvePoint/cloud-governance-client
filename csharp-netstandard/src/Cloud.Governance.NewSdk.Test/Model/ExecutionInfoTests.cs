/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;
using Cloud.Governance.NewSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing ExecutionInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ExecutionInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ExecutionInfo
        //private ExecutionInfo instance;

        public ExecutionInfoTests()
        {
            // TODO uncomment below to create an instance of ExecutionInfo
            //instance = new ExecutionInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ExecutionInfo
        /// </summary>
        [Fact]
        public void ExecutionInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ExecutionInfo
            //Assert.IsInstanceOfType<ExecutionInfo> (instance, "variable 'instance' is a ExecutionInfo");
        }


        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }
        /// <summary>
        /// Test the property 'CommandType'
        /// </summary>
        [Fact]
        public void CommandTypeTest()
        {
            // TODO unit test for the property 'CommandType'
        }
        /// <summary>
        /// Test the property 'WebServiceAuthenticationType'
        /// </summary>
        [Fact]
        public void WebServiceAuthenticationTypeTest()
        {
            // TODO unit test for the property 'WebServiceAuthenticationType'
        }
        /// <summary>
        /// Test the property 'MethodName'
        /// </summary>
        [Fact]
        public void MethodNameTest()
        {
            // TODO unit test for the property 'MethodName'
        }
        /// <summary>
        /// Test the property 'WebServiceAddress'
        /// </summary>
        [Fact]
        public void WebServiceAddressTest()
        {
            // TODO unit test for the property 'WebServiceAddress'
        }
        /// <summary>
        /// Test the property 'WebServiceAppClientId'
        /// </summary>
        [Fact]
        public void WebServiceAppClientIdTest()
        {
            // TODO unit test for the property 'WebServiceAppClientId'
        }
        /// <summary>
        /// Test the property 'NativeClientAppClientId'
        /// </summary>
        [Fact]
        public void NativeClientAppClientIdTest()
        {
            // TODO unit test for the property 'NativeClientAppClientId'
        }
        /// <summary>
        /// Test the property 'FileName'
        /// </summary>
        [Fact]
        public void FileNameTest()
        {
            // TODO unit test for the property 'FileName'
        }
        /// <summary>
        /// Test the property 'AssemblyName'
        /// </summary>
        [Fact]
        public void AssemblyNameTest()
        {
            // TODO unit test for the property 'AssemblyName'
        }
        /// <summary>
        /// Test the property 'ClassName'
        /// </summary>
        [Fact]
        public void ClassNameTest()
        {
            // TODO unit test for the property 'ClassName'
        }
        /// <summary>
        /// Test the property 'Arguments'
        /// </summary>
        [Fact]
        public void ArgumentsTest()
        {
            // TODO unit test for the property 'Arguments'
        }
        /// <summary>
        /// Test the property 'ArgumentsTypeFullNames'
        /// </summary>
        [Fact]
        public void ArgumentsTypeFullNamesTest()
        {
            // TODO unit test for the property 'ArgumentsTypeFullNames'
        }
        /// <summary>
        /// Test the property 'ArgumentsNames'
        /// </summary>
        [Fact]
        public void ArgumentsNamesTest()
        {
            // TODO unit test for the property 'ArgumentsNames'
        }

    }

}

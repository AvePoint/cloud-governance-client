/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplyPolicyInfo from './ApplyPolicyInfo';
import ApprovalProcessStageCollection from './ApprovalProcessStageCollection';
import RequestMetadataInfo from './RequestMetadataInfo';
import SitePolicyInfo from './SitePolicyInfo';

/**
 * The SiteProperty model module.
 * @module model/SiteProperty
 * @version 1.0
 */
class SiteProperty {
    /**
     * Constructs a new <code>SiteProperty</code>.
     * @alias module:model/SiteProperty
     */
    constructor() { 
        
        SiteProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SiteProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SiteProperty} obj Optional instance to populate.
     * @return {module:model/SiteProperty} The populated <code>SiteProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SiteProperty();

            if (data.hasOwnProperty('department')) {
                obj['department'] = ApiClient.convertToType(data['department'], 'String');
            }
            if (data.hasOwnProperty('policy')) {
                obj['policy'] = SitePolicyInfo.constructFromObject(data['policy']);
            }
            if (data.hasOwnProperty('customMetadatas')) {
                obj['customMetadatas'] = ApiClient.convertToType(data['customMetadatas'], [RequestMetadataInfo]);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('siteMaxDepth')) {
                obj['siteMaxDepth'] = ApiClient.convertToType(data['siteMaxDepth'], 'Number');
            }
            if (data.hasOwnProperty('warningExpiredTimeDate')) {
                obj['warningExpiredTimeDate'] = ApiClient.convertToType(data['warningExpiredTimeDate'], 'Number');
            }
            if (data.hasOwnProperty('warningExpiredTimeDateType')) {
                obj['warningExpiredTimeDateType'] = ApiClient.convertToType(data['warningExpiredTimeDateType'], 'Number');
            }
            if (data.hasOwnProperty('expiredTimeDate')) {
                obj['expiredTimeDate'] = ApiClient.convertToType(data['expiredTimeDate'], 'Number');
            }
            if (data.hasOwnProperty('expiredTimeDateType')) {
                obj['expiredTimeDateType'] = ApiClient.convertToType(data['expiredTimeDateType'], 'Number');
            }
            if (data.hasOwnProperty('expiredTimeDateWorkflowTemplate')) {
                obj['expiredTimeDateWorkflowTemplate'] = ApiClient.convertToType(data['expiredTimeDateWorkflowTemplate'], 'String');
            }
            if (data.hasOwnProperty('expirationPeriodWorkflowStage')) {
                obj['expirationPeriodWorkflowStage'] = ApprovalProcessStageCollection.constructFromObject(data['expirationPeriodWorkflowStage']);
            }
            if (data.hasOwnProperty('quotaSize')) {
                obj['quotaSize'] = ApiClient.convertToType(data['quotaSize'], 'Number');
            }
            if (data.hasOwnProperty('serverResourceQuota')) {
                obj['serverResourceQuota'] = ApiClient.convertToType(data['serverResourceQuota'], 'Number');
            }
            if (data.hasOwnProperty('caOrAdminCenterUrl')) {
                obj['caOrAdminCenterUrl'] = ApiClient.convertToType(data['caOrAdminCenterUrl'], 'String');
            }
            if (data.hasOwnProperty('applyPolicy')) {
                obj['applyPolicy'] = ApplyPolicyInfo.constructFromObject(data['applyPolicy']);
            }
            if (data.hasOwnProperty('appliedDeploymentPlans')) {
                obj['appliedDeploymentPlans'] = ApiClient.convertToType(data['appliedDeploymentPlans'], 'String');
            }
            if (data.hasOwnProperty('additionalActionTime')) {
                obj['additionalActionTime'] = ApiClient.convertToType(data['additionalActionTime'], 'Date');
            }
            if (data.hasOwnProperty('quotaThresholdWarningTimes')) {
                obj['quotaThresholdWarningTimes'] = ApiClient.convertToType(data['quotaThresholdWarningTimes'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} department
 */
SiteProperty.prototype['department'] = undefined;

/**
 * @member {module:model/SitePolicyInfo} policy
 */
SiteProperty.prototype['policy'] = undefined;

/**
 * @member {Array.<module:model/RequestMetadataInfo>} customMetadatas
 */
SiteProperty.prototype['customMetadatas'] = undefined;

/**
 * @member {String} title
 */
SiteProperty.prototype['title'] = undefined;

/**
 * @member {String} description
 */
SiteProperty.prototype['description'] = undefined;

/**
 * @member {Number} siteMaxDepth
 */
SiteProperty.prototype['siteMaxDepth'] = undefined;

/**
 * @member {Number} warningExpiredTimeDate
 */
SiteProperty.prototype['warningExpiredTimeDate'] = undefined;

/**
 * @member {Number} warningExpiredTimeDateType
 */
SiteProperty.prototype['warningExpiredTimeDateType'] = undefined;

/**
 * @member {Number} expiredTimeDate
 */
SiteProperty.prototype['expiredTimeDate'] = undefined;

/**
 * @member {Number} expiredTimeDateType
 */
SiteProperty.prototype['expiredTimeDateType'] = undefined;

/**
 * @member {String} expiredTimeDateWorkflowTemplate
 */
SiteProperty.prototype['expiredTimeDateWorkflowTemplate'] = undefined;

/**
 * @member {module:model/ApprovalProcessStageCollection} expirationPeriodWorkflowStage
 */
SiteProperty.prototype['expirationPeriodWorkflowStage'] = undefined;

/**
 * @member {Number} quotaSize
 */
SiteProperty.prototype['quotaSize'] = undefined;

/**
 * @member {Number} serverResourceQuota
 */
SiteProperty.prototype['serverResourceQuota'] = undefined;

/**
 * @member {String} caOrAdminCenterUrl
 */
SiteProperty.prototype['caOrAdminCenterUrl'] = undefined;

/**
 * @member {module:model/ApplyPolicyInfo} applyPolicy
 */
SiteProperty.prototype['applyPolicy'] = undefined;

/**
 * @member {String} appliedDeploymentPlans
 */
SiteProperty.prototype['appliedDeploymentPlans'] = undefined;

/**
 * @member {Date} additionalActionTime
 */
SiteProperty.prototype['additionalActionTime'] = undefined;

/**
 * @member {Number} quotaThresholdWarningTimes
 */
SiteProperty.prototype['quotaThresholdWarningTimes'] = undefined;






export default SiteProperty;


/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AddGroupMemberType', 'model/ApiUser', 'model/AssignBy', 'model/BriefGroupPolicy', 'model/CommonStatus', 'model/CustomActionSettings', 'model/CustomMetadata', 'model/GroupIdConstructureSettings', 'model/GroupNameConstructureSettings', 'model/GuidModel', 'model/HubSiteSettings', 'model/MultiGeoSetting', 'model/ServiceTeamsSettings', 'model/ServiceType', 'model/StringModel', 'model/TeamsTemplateServiceSettings'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AddGroupMemberType'), require('./ApiUser'), require('./AssignBy'), require('./BriefGroupPolicy'), require('./CommonStatus'), require('./CustomActionSettings'), require('./CustomMetadata'), require('./GroupIdConstructureSettings'), require('./GroupNameConstructureSettings'), require('./GuidModel'), require('./HubSiteSettings'), require('./MultiGeoSetting'), require('./ServiceTeamsSettings'), require('./ServiceType'), require('./StringModel'), require('./TeamsTemplateServiceSettings'));
  } else {
    // Browser globals (root is window)
    if (!root.CgClient) {
      root.CgClient = {};
    }
    root.CgClient.CreateGroupService = factory(root.CgClient.ApiClient, root.CgClient.AddGroupMemberType, root.CgClient.ApiUser, root.CgClient.AssignBy, root.CgClient.BriefGroupPolicy, root.CgClient.CommonStatus, root.CgClient.CustomActionSettings, root.CgClient.CustomMetadata, root.CgClient.GroupIdConstructureSettings, root.CgClient.GroupNameConstructureSettings, root.CgClient.GuidModel, root.CgClient.HubSiteSettings, root.CgClient.MultiGeoSetting, root.CgClient.ServiceTeamsSettings, root.CgClient.ServiceType, root.CgClient.StringModel, root.CgClient.TeamsTemplateServiceSettings);
  }
}(this, function(ApiClient, AddGroupMemberType, ApiUser, AssignBy, BriefGroupPolicy, CommonStatus, CustomActionSettings, CustomMetadata, GroupIdConstructureSettings, GroupNameConstructureSettings, GuidModel, HubSiteSettings, MultiGeoSetting, ServiceTeamsSettings, ServiceType, StringModel, TeamsTemplateServiceSettings) {
  'use strict';



  /**
   * The CreateGroupService model module.
   * @module model/CreateGroupService
   * @version 1.0
   */

  /**
   * Constructs a new <code>CreateGroupService</code>.
   * @alias module:model/CreateGroupService
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>CreateGroupService</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateGroupService} obj Optional instance to populate.
   * @return {module:model/CreateGroupService} The populated <code>CreateGroupService</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('tenantId')) {
        obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
      }
      if (data.hasOwnProperty('enableTeams')) {
        obj['enableTeams'] = ApiClient.convertToType(data['enableTeams'], 'Boolean');
      }
      if (data.hasOwnProperty('isPrivate')) {
        obj['isPrivate'] = ApiClient.convertToType(data['isPrivate'], 'Boolean');
      }
      if (data.hasOwnProperty('enableSubscribe')) {
        obj['enableSubscribe'] = ApiClient.convertToType(data['enableSubscribe'], 'Boolean');
      }
      if (data.hasOwnProperty('enableApplySiteDesign')) {
        obj['enableApplySiteDesign'] = ApiClient.convertToType(data['enableApplySiteDesign'], 'Boolean');
      }
      if (data.hasOwnProperty('enableOutsideSender')) {
        obj['enableOutsideSender'] = ApiClient.convertToType(data['enableOutsideSender'], 'Boolean');
      }
      if (data.hasOwnProperty('enableHideGroupMembership')) {
        obj['enableHideGroupMembership'] = ApiClient.convertToType(data['enableHideGroupMembership'], 'Boolean');
      }
      if (data.hasOwnProperty('enableClassification')) {
        obj['enableClassification'] = ApiClient.convertToType(data['enableClassification'], 'Boolean');
      }
      if (data.hasOwnProperty('allowConfigureLeasePeriod')) {
        obj['allowConfigureLeasePeriod'] = ApiClient.convertToType(data['allowConfigureLeasePeriod'], 'Boolean');
      }
      if (data.hasOwnProperty('showNotebookLink')) {
        obj['showNotebookLink'] = ApiClient.convertToType(data['showNotebookLink'], 'Boolean');
      }
      if (data.hasOwnProperty('showConversationsLink')) {
        obj['showConversationsLink'] = ApiClient.convertToType(data['showConversationsLink'], 'Boolean');
      }
      if (data.hasOwnProperty('showFilesLink')) {
        obj['showFilesLink'] = ApiClient.convertToType(data['showFilesLink'], 'Boolean');
      }
      if (data.hasOwnProperty('showTeamSiteLink')) {
        obj['showTeamSiteLink'] = ApiClient.convertToType(data['showTeamSiteLink'], 'Boolean');
      }
      if (data.hasOwnProperty('showPlannerLink')) {
        obj['showPlannerLink'] = ApiClient.convertToType(data['showPlannerLink'], 'Boolean');
      }
      if (data.hasOwnProperty('classifications')) {
        obj['classifications'] = ApiClient.convertToType(data['classifications'], ['String']);
      }
      if (data.hasOwnProperty('siteDesigns')) {
        obj['siteDesigns'] = ApiClient.convertToType(data['siteDesigns'], [GuidModel]);
      }
      if (data.hasOwnProperty('addGroupMemberType')) {
        obj['addGroupMemberType'] = AddGroupMemberType.constructFromObject(data['addGroupMemberType']);
      }
      if (data.hasOwnProperty('selectedPolicies')) {
        obj['selectedPolicies'] = ApiClient.convertToType(data['selectedPolicies'], [BriefGroupPolicy]);
      }
      if (data.hasOwnProperty('selectedLanguages')) {
        obj['selectedLanguages'] = ApiClient.convertToType(data['selectedLanguages'], [StringModel]);
      }
      if (data.hasOwnProperty('teamsSettings')) {
        obj['teamsSettings'] = ServiceTeamsSettings.constructFromObject(data['teamsSettings']);
      }
      if (data.hasOwnProperty('groupNameConstructureSettings')) {
        obj['groupNameConstructureSettings'] = GroupNameConstructureSettings.constructFromObject(data['groupNameConstructureSettings']);
      }
      if (data.hasOwnProperty('groupIdConstructureSettings')) {
        obj['groupIdConstructureSettings'] = GroupIdConstructureSettings.constructFromObject(data['groupIdConstructureSettings']);
      }
      if (data.hasOwnProperty('enableInstallApp')) {
        obj['enableInstallApp'] = ApiClient.convertToType(data['enableInstallApp'], 'Boolean');
      }
      if (data.hasOwnProperty('enableInstallPanel')) {
        obj['enableInstallPanel'] = ApiClient.convertToType(data['enableInstallPanel'], 'Boolean');
      }
      if (data.hasOwnProperty('templateSettings')) {
        obj['templateSettings'] = TeamsTemplateServiceSettings.constructFromObject(data['templateSettings']);
      }
      if (data.hasOwnProperty('defaultPrimaryContact')) {
        obj['defaultPrimaryContact'] = ApiUser.constructFromObject(data['defaultPrimaryContact']);
      }
      if (data.hasOwnProperty('defaultSecondaryContact')) {
        obj['defaultSecondaryContact'] = ApiUser.constructFromObject(data['defaultSecondaryContact']);
      }
      if (data.hasOwnProperty('defaultOwners')) {
        obj['defaultOwners'] = ApiClient.convertToType(data['defaultOwners'], [ApiUser]);
      }
      if (data.hasOwnProperty('defaultMembers')) {
        obj['defaultMembers'] = ApiClient.convertToType(data['defaultMembers'], [ApiUser]);
      }
      if (data.hasOwnProperty('defaultPolicy')) {
        obj['defaultPolicy'] = ApiClient.convertToType(data['defaultPolicy'], 'String');
      }
      if (data.hasOwnProperty('defaultClassification')) {
        obj['defaultClassification'] = ApiClient.convertToType(data['defaultClassification'], 'String');
      }
      if (data.hasOwnProperty('defaultLanguage')) {
        obj['defaultLanguage'] = ApiClient.convertToType(data['defaultLanguage'], 'String');
      }
      if (data.hasOwnProperty('defaultSiteDesign')) {
        obj['defaultSiteDesign'] = ApiClient.convertToType(data['defaultSiteDesign'], 'String');
      }
      if (data.hasOwnProperty('defaultOwnersReal')) {
        obj['defaultOwnersReal'] = ApiClient.convertToType(data['defaultOwnersReal'], [ApiUser]);
      }
      if (data.hasOwnProperty('defaultMembersReal')) {
        obj['defaultMembersReal'] = ApiClient.convertToType(data['defaultMembersReal'], [ApiUser]);
      }
      if (data.hasOwnProperty('memberAssignBy')) {
        obj['memberAssignBy'] = AssignBy.constructFromObject(data['memberAssignBy']);
      }
      if (data.hasOwnProperty('ownerAssignBy')) {
        obj['ownerAssignBy'] = AssignBy.constructFromObject(data['ownerAssignBy']);
      }
      if (data.hasOwnProperty('privacyAssignBy')) {
        obj['privacyAssignBy'] = AssignBy.constructFromObject(data['privacyAssignBy']);
      }
      if (data.hasOwnProperty('subscribeAssignBy')) {
        obj['subscribeAssignBy'] = AssignBy.constructFromObject(data['subscribeAssignBy']);
      }
      if (data.hasOwnProperty('outsideSenderAssignBy')) {
        obj['outsideSenderAssignBy'] = AssignBy.constructFromObject(data['outsideSenderAssignBy']);
      }
      if (data.hasOwnProperty('classificationAssignBy')) {
        obj['classificationAssignBy'] = AssignBy.constructFromObject(data['classificationAssignBy']);
      }
      if (data.hasOwnProperty('languageAssignBy')) {
        obj['languageAssignBy'] = AssignBy.constructFromObject(data['languageAssignBy']);
      }
      if (data.hasOwnProperty('secondaryContactAssignBy')) {
        obj['secondaryContactAssignBy'] = AssignBy.constructFromObject(data['secondaryContactAssignBy']);
      }
      if (data.hasOwnProperty('primaryContactAssignBy')) {
        obj['primaryContactAssignBy'] = AssignBy.constructFromObject(data['primaryContactAssignBy']);
      }
      if (data.hasOwnProperty('enableDynamicMembership')) {
        obj['enableDynamicMembership'] = ApiClient.convertToType(data['enableDynamicMembership'], 'Boolean');
      }
      if (data.hasOwnProperty('hideGroupMembershipAssignBy')) {
        obj['hideGroupMembershipAssignBy'] = AssignBy.constructFromObject(data['hideGroupMembershipAssignBy']);
      }
      if (data.hasOwnProperty('policyAssignBy')) {
        obj['policyAssignBy'] = AssignBy.constructFromObject(data['policyAssignBy']);
      }
      if (data.hasOwnProperty('siteDesignAssignBy')) {
        obj['siteDesignAssignBy'] = AssignBy.constructFromObject(data['siteDesignAssignBy']);
      }
      if (data.hasOwnProperty('hubSiteAssignBy')) {
        obj['hubSiteAssignBy'] = AssignBy.constructFromObject(data['hubSiteAssignBy']);
      }
      if (data.hasOwnProperty('multiGeoSetting')) {
        obj['multiGeoSetting'] = MultiGeoSetting.constructFromObject(data['multiGeoSetting']);
      }
      if (data.hasOwnProperty('isShowHubSiteSection')) {
        obj['isShowHubSiteSection'] = ApiClient.convertToType(data['isShowHubSiteSection'], 'Boolean');
      }
      if (data.hasOwnProperty('hubSiteSettings')) {
        obj['hubSiteSettings'] = HubSiteSettings.constructFromObject(data['hubSiteSettings']);
      }
      if (data.hasOwnProperty('hasImpernastionUsers')) {
        obj['hasImpernastionUsers'] = ApiClient.convertToType(data['hasImpernastionUsers'], 'Boolean');
      }
      if (data.hasOwnProperty('departmentAssignBy')) {
        obj['departmentAssignBy'] = AssignBy.constructFromObject(data['departmentAssignBy']);
      }
      if (data.hasOwnProperty('metadatas')) {
        obj['metadatas'] = ApiClient.convertToType(data['metadatas'], [CustomMetadata]);
      }
      if (data.hasOwnProperty('hideRequestSummary')) {
        obj['hideRequestSummary'] = ApiClient.convertToType(data['hideRequestSummary'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ServiceType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('department')) {
        obj['department'] = ApiClient.convertToType(data['department'], 'String');
      }
      if (data.hasOwnProperty('loadDepartmentFromUps')) {
        obj['loadDepartmentFromUps'] = ApiClient.convertToType(data['loadDepartmentFromUps'], 'Boolean');
      }
      if (data.hasOwnProperty('departments')) {
        obj['departments'] = ApiClient.convertToType(data['departments'], ['String']);
      }
      if (data.hasOwnProperty('serviceContact')) {
        obj['serviceContact'] = ApiUser.constructFromObject(data['serviceContact']);
      }
      if (data.hasOwnProperty('serviceAdminContact')) {
        obj['serviceAdminContact'] = ApiUser.constructFromObject(data['serviceAdminContact']);
      }
      if (data.hasOwnProperty('approversContainManagerRole')) {
        obj['approversContainManagerRole'] = ApiClient.convertToType(data['approversContainManagerRole'], 'Boolean');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = CommonStatus.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('showServiceInCatalog')) {
        obj['showServiceInCatalog'] = ApiClient.convertToType(data['showServiceInCatalog'], 'Boolean');
      }
      if (data.hasOwnProperty('customActions')) {
        obj['customActions'] = CustomActionSettings.constructFromObject(data['customActions']);
      }
      if (data.hasOwnProperty('approvalProcessId')) {
        obj['approvalProcessId'] = ApiClient.convertToType(data['approvalProcessId'], 'String');
      }
      if (data.hasOwnProperty('languageId')) {
        obj['languageId'] = ApiClient.convertToType(data['languageId'], 'Number');
      }
      if (data.hasOwnProperty('categoryId')) {
        obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} tenantId
   */
  exports.prototype['tenantId'] = undefined;
  /**
   * @member {Boolean} enableTeams
   */
  exports.prototype['enableTeams'] = undefined;
  /**
   * @member {Boolean} isPrivate
   */
  exports.prototype['isPrivate'] = undefined;
  /**
   * @member {Boolean} enableSubscribe
   */
  exports.prototype['enableSubscribe'] = undefined;
  /**
   * @member {Boolean} enableApplySiteDesign
   */
  exports.prototype['enableApplySiteDesign'] = undefined;
  /**
   * @member {Boolean} enableOutsideSender
   */
  exports.prototype['enableOutsideSender'] = undefined;
  /**
   * @member {Boolean} enableHideGroupMembership
   */
  exports.prototype['enableHideGroupMembership'] = undefined;
  /**
   * @member {Boolean} enableClassification
   */
  exports.prototype['enableClassification'] = undefined;
  /**
   * @member {Boolean} allowConfigureLeasePeriod
   */
  exports.prototype['allowConfigureLeasePeriod'] = undefined;
  /**
   * @member {Boolean} showNotebookLink
   */
  exports.prototype['showNotebookLink'] = undefined;
  /**
   * @member {Boolean} showConversationsLink
   */
  exports.prototype['showConversationsLink'] = undefined;
  /**
   * @member {Boolean} showFilesLink
   */
  exports.prototype['showFilesLink'] = undefined;
  /**
   * @member {Boolean} showTeamSiteLink
   */
  exports.prototype['showTeamSiteLink'] = undefined;
  /**
   * @member {Boolean} showPlannerLink
   */
  exports.prototype['showPlannerLink'] = undefined;
  /**
   * @member {Array.<String>} classifications
   */
  exports.prototype['classifications'] = undefined;
  /**
   * @member {Array.<module:model/GuidModel>} siteDesigns
   */
  exports.prototype['siteDesigns'] = undefined;
  /**
   * @member {module:model/AddGroupMemberType} addGroupMemberType
   */
  exports.prototype['addGroupMemberType'] = undefined;
  /**
   * @member {Array.<module:model/BriefGroupPolicy>} selectedPolicies
   */
  exports.prototype['selectedPolicies'] = undefined;
  /**
   * @member {Array.<module:model/StringModel>} selectedLanguages
   */
  exports.prototype['selectedLanguages'] = undefined;
  /**
   * @member {module:model/ServiceTeamsSettings} teamsSettings
   */
  exports.prototype['teamsSettings'] = undefined;
  /**
   * @member {module:model/GroupNameConstructureSettings} groupNameConstructureSettings
   */
  exports.prototype['groupNameConstructureSettings'] = undefined;
  /**
   * @member {module:model/GroupIdConstructureSettings} groupIdConstructureSettings
   */
  exports.prototype['groupIdConstructureSettings'] = undefined;
  /**
   * @member {Boolean} enableInstallApp
   */
  exports.prototype['enableInstallApp'] = undefined;
  /**
   * @member {Boolean} enableInstallPanel
   */
  exports.prototype['enableInstallPanel'] = undefined;
  /**
   * @member {module:model/TeamsTemplateServiceSettings} templateSettings
   */
  exports.prototype['templateSettings'] = undefined;
  /**
   * @member {module:model/ApiUser} defaultPrimaryContact
   */
  exports.prototype['defaultPrimaryContact'] = undefined;
  /**
   * @member {module:model/ApiUser} defaultSecondaryContact
   */
  exports.prototype['defaultSecondaryContact'] = undefined;
  /**
   * @member {Array.<module:model/ApiUser>} defaultOwners
   */
  exports.prototype['defaultOwners'] = undefined;
  /**
   * @member {Array.<module:model/ApiUser>} defaultMembers
   */
  exports.prototype['defaultMembers'] = undefined;
  /**
   * @member {String} defaultPolicy
   */
  exports.prototype['defaultPolicy'] = undefined;
  /**
   * @member {String} defaultClassification
   */
  exports.prototype['defaultClassification'] = undefined;
  /**
   * @member {String} defaultLanguage
   */
  exports.prototype['defaultLanguage'] = undefined;
  /**
   * @member {String} defaultSiteDesign
   */
  exports.prototype['defaultSiteDesign'] = undefined;
  /**
   * @member {Array.<module:model/ApiUser>} defaultOwnersReal
   */
  exports.prototype['defaultOwnersReal'] = undefined;
  /**
   * @member {Array.<module:model/ApiUser>} defaultMembersReal
   */
  exports.prototype['defaultMembersReal'] = undefined;
  /**
   * @member {module:model/AssignBy} memberAssignBy
   */
  exports.prototype['memberAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} ownerAssignBy
   */
  exports.prototype['ownerAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} privacyAssignBy
   */
  exports.prototype['privacyAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} subscribeAssignBy
   */
  exports.prototype['subscribeAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} outsideSenderAssignBy
   */
  exports.prototype['outsideSenderAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} classificationAssignBy
   */
  exports.prototype['classificationAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} languageAssignBy
   */
  exports.prototype['languageAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} secondaryContactAssignBy
   */
  exports.prototype['secondaryContactAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} primaryContactAssignBy
   */
  exports.prototype['primaryContactAssignBy'] = undefined;
  /**
   * @member {Boolean} enableDynamicMembership
   */
  exports.prototype['enableDynamicMembership'] = undefined;
  /**
   * @member {module:model/AssignBy} hideGroupMembershipAssignBy
   */
  exports.prototype['hideGroupMembershipAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} policyAssignBy
   */
  exports.prototype['policyAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} siteDesignAssignBy
   */
  exports.prototype['siteDesignAssignBy'] = undefined;
  /**
   * @member {module:model/AssignBy} hubSiteAssignBy
   */
  exports.prototype['hubSiteAssignBy'] = undefined;
  /**
   * @member {module:model/MultiGeoSetting} multiGeoSetting
   */
  exports.prototype['multiGeoSetting'] = undefined;
  /**
   * @member {Boolean} isShowHubSiteSection
   */
  exports.prototype['isShowHubSiteSection'] = undefined;
  /**
   * @member {module:model/HubSiteSettings} hubSiteSettings
   */
  exports.prototype['hubSiteSettings'] = undefined;
  /**
   * @member {Boolean} hasImpernastionUsers
   */
  exports.prototype['hasImpernastionUsers'] = undefined;
  /**
   * @member {module:model/AssignBy} departmentAssignBy
   */
  exports.prototype['departmentAssignBy'] = undefined;
  /**
   * @member {Array.<module:model/CustomMetadata>} metadatas
   */
  exports.prototype['metadatas'] = undefined;
  /**
   * @member {Boolean} hideRequestSummary
   */
  exports.prototype['hideRequestSummary'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/ServiceType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {String} department
   */
  exports.prototype['department'] = undefined;
  /**
   * @member {Boolean} loadDepartmentFromUps
   */
  exports.prototype['loadDepartmentFromUps'] = undefined;
  /**
   * @member {Array.<String>} departments
   */
  exports.prototype['departments'] = undefined;
  /**
   * @member {module:model/ApiUser} serviceContact
   */
  exports.prototype['serviceContact'] = undefined;
  /**
   * @member {module:model/ApiUser} serviceAdminContact
   */
  exports.prototype['serviceAdminContact'] = undefined;
  /**
   * @member {Boolean} approversContainManagerRole
   */
  exports.prototype['approversContainManagerRole'] = undefined;
  /**
   * @member {module:model/CommonStatus} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {Boolean} showServiceInCatalog
   */
  exports.prototype['showServiceInCatalog'] = undefined;
  /**
   * @member {module:model/CustomActionSettings} customActions
   */
  exports.prototype['customActions'] = undefined;
  /**
   * @member {String} approvalProcessId
   */
  exports.prototype['approvalProcessId'] = undefined;
  /**
   * @member {Number} languageId
   */
  exports.prototype['languageId'] = undefined;
  /**
   * @member {String} categoryId
   */
  exports.prototype['categoryId'] = undefined;



  return exports;
}));



/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationSettings from '../model/ApplicationSettings';
import CustomHelpLinkModel from '../model/CustomHelpLinkModel';
import InlineResponse200 from '../model/InlineResponse200';
import NewsAndUpdatesInfo from '../model/NewsAndUpdatesInfo';
import PermissionLevel from '../model/PermissionLevel';
import PersonalSettings from '../model/PersonalSettings';
import ResourceValue from '../model/ResourceValue';

/**
* Settings service.
* @module api/SettingsApi
* @version 1.0
*/
export default class SettingsApi {

    /**
    * Constructs a new SettingsApi. 
    * @alias module:api/SettingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the editMyPersonalSettings operation.
     * @callback module:api/SettingsApi~editMyPersonalSettingsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * edit my personal settings
     * @param {Object} opts Optional parameters
     * @param {module:model/PersonalSettings} opts.personalSettings 
     * @param {module:api/SettingsApi~editMyPersonalSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    editMyPersonalSettings(opts, callback) {
      opts = opts || {};
      let postBody = opts['personalSettings'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/settings/my', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApplicationSettings operation.
     * @callback module:api/SettingsApi~getApplicationSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get application settings
     * @param {Object} opts Optional parameters
     * @param {Number} opts.localeId 
     * @param {module:api/SettingsApi~getApplicationSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationSettings}
     */
    getApplicationSettings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'localeId': opts['localeId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ApplicationSettings;
      return this.apiClient.callApi(
        '/settings/app', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDynamicMembershipRuleItems operation.
     * @callback module:api/SettingsApi~getDynamicMembershipRuleItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get group/teams dynamic membership rules
     * @param {String} tenantid 
     * @param {module:api/SettingsApi~getDynamicMembershipRuleItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    getDynamicMembershipRuleItems(tenantid, callback) {
      let postBody = null;
      // verify the required parameter 'tenantid' is set
      if (tenantid === undefined || tenantid === null) {
        throw new Error("Missing the required parameter 'tenantid' when calling getDynamicMembershipRuleItems");
      }

      let pathParams = {
        'tenantid': tenantid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/settings/office365/groups/dynamicmembershiprule/{tenantid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getHelpLink operation.
     * @callback module:api/SettingsApi~getHelpLinkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomHelpLinkModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get help link
     * @param {module:api/SettingsApi~getHelpLinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomHelpLinkModel}
     */
    getHelpLink(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = CustomHelpLinkModel;
      return this.apiClient.callApi(
        '/settings/helplink', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMyPersonalSettings operation.
     * @callback module:api/SettingsApi~getMyPersonalSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PersonalSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get my personal settings
     * @param {module:api/SettingsApi~getMyPersonalSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PersonalSettings}
     */
    getMyPersonalSettings(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = PersonalSettings;
      return this.apiClient.callApi(
        '/settings/my', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNews operation.
     * @callback module:api/SettingsApi~getNewsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NewsAndUpdatesInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get news
     * @param {module:api/SettingsApi~getNewsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NewsAndUpdatesInfo}
     */
    getNews(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = NewsAndUpdatesInfo;
      return this.apiClient.callApi(
        '/settings/news', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPermissionLevels operation.
     * @callback module:api/SettingsApi~getPermissionLevelsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PermissionLevel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get permission levels
     * @param {module:api/SettingsApi~getPermissionLevelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PermissionLevel>}
     */
    getPermissionLevels(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PermissionLevel];
      return this.apiClient.callApi(
        '/settings/office365/permissionlevels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSupportedLanguages operation.
     * @callback module:api/SettingsApi~getSupportedLanguagesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ResourceValue>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get supported language
     * @param {module:api/SettingsApi~getSupportedLanguagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ResourceValue>}
     */
    getSupportedLanguages(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [ResourceValue];
      return this.apiClient.callApi(
        '/settings/languages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTimeZones operation.
     * @callback module:api/SettingsApi~getTimeZonesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ResourceValue>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get timezones
     * @param {module:api/SettingsApi~getTimeZonesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ResourceValue>}
     */
    getTimeZones(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [ResourceValue];
      return this.apiClient.callApi(
        '/settings/timezones', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}

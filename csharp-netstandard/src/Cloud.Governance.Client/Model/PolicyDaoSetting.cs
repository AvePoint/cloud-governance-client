/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// PolicyDaoSetting
    /// </summary>
    [DataContract]
    public partial class PolicyDaoSetting :  IEquatable<PolicyDaoSetting>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PolicyDaoSetting" /> class.
        /// </summary>
        /// <param name="isPolicyEnforcerEnabled">isPolicyEnforcerEnabled.</param>
        /// <param name="policyEnforcerProfile">policyEnforcerProfile.</param>
        /// <param name="isDpmEnabled">isDpmEnabled.</param>
        /// <param name="dpmPlan">dpmPlan.</param>
        /// <param name="isBackupEnabled">isBackupEnabled.</param>
        /// <param name="isAuditingEnabled">isAuditingEnabled.</param>
        /// <param name="isArchiverEnabled">isArchiverEnabled.</param>
        /// <param name="archiverProfile">archiverProfile.</param>
        /// <param name="archiverProcessId">archiverProcessId.</param>
        public PolicyDaoSetting(bool isPolicyEnforcerEnabled = default(bool), string policyEnforcerProfile = default(string), bool isDpmEnabled = default(bool), string dpmPlan = default(string), bool isBackupEnabled = default(bool), bool isAuditingEnabled = default(bool), bool isArchiverEnabled = default(bool), string archiverProfile = default(string), Guid archiverProcessId = default(Guid))
        {
            this.IsPolicyEnforcerEnabled = isPolicyEnforcerEnabled;
            this.PolicyEnforcerProfile = policyEnforcerProfile;
            this.IsDpmEnabled = isDpmEnabled;
            this.DpmPlan = dpmPlan;
            this.IsBackupEnabled = isBackupEnabled;
            this.IsAuditingEnabled = isAuditingEnabled;
            this.IsArchiverEnabled = isArchiverEnabled;
            this.ArchiverProfile = archiverProfile;
            this.ArchiverProcessId = archiverProcessId;
        }
        
        /// <summary>
        /// Gets or Sets IsPolicyEnforcerEnabled
        /// </summary>
        [DataMember(Name="isPolicyEnforcerEnabled", EmitDefaultValue=false)]
        public bool IsPolicyEnforcerEnabled { get; set; }

        /// <summary>
        /// Gets or Sets PolicyEnforcerProfile
        /// </summary>
        [DataMember(Name="policyEnforcerProfile", EmitDefaultValue=true)]
        public string PolicyEnforcerProfile { get; set; }

        /// <summary>
        /// Gets or Sets IsDpmEnabled
        /// </summary>
        [DataMember(Name="isDpmEnabled", EmitDefaultValue=false)]
        public bool IsDpmEnabled { get; set; }

        /// <summary>
        /// Gets or Sets DpmPlan
        /// </summary>
        [DataMember(Name="dpmPlan", EmitDefaultValue=true)]
        public string DpmPlan { get; set; }

        /// <summary>
        /// Gets or Sets IsBackupEnabled
        /// </summary>
        [DataMember(Name="isBackupEnabled", EmitDefaultValue=false)]
        public bool IsBackupEnabled { get; set; }

        /// <summary>
        /// Gets or Sets IsAuditingEnabled
        /// </summary>
        [DataMember(Name="isAuditingEnabled", EmitDefaultValue=false)]
        public bool IsAuditingEnabled { get; set; }

        /// <summary>
        /// Gets or Sets IsArchiverEnabled
        /// </summary>
        [DataMember(Name="isArchiverEnabled", EmitDefaultValue=false)]
        public bool IsArchiverEnabled { get; set; }

        /// <summary>
        /// Gets or Sets ArchiverProfile
        /// </summary>
        [DataMember(Name="archiverProfile", EmitDefaultValue=true)]
        public string ArchiverProfile { get; set; }

        /// <summary>
        /// Gets or Sets ArchiverProcessId
        /// </summary>
        [DataMember(Name="archiverProcessId", EmitDefaultValue=false)]
        public Guid ArchiverProcessId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PolicyDaoSetting {\n");
            sb.Append("  IsPolicyEnforcerEnabled: ").Append(IsPolicyEnforcerEnabled).Append("\n");
            sb.Append("  PolicyEnforcerProfile: ").Append(PolicyEnforcerProfile).Append("\n");
            sb.Append("  IsDpmEnabled: ").Append(IsDpmEnabled).Append("\n");
            sb.Append("  DpmPlan: ").Append(DpmPlan).Append("\n");
            sb.Append("  IsBackupEnabled: ").Append(IsBackupEnabled).Append("\n");
            sb.Append("  IsAuditingEnabled: ").Append(IsAuditingEnabled).Append("\n");
            sb.Append("  IsArchiverEnabled: ").Append(IsArchiverEnabled).Append("\n");
            sb.Append("  ArchiverProfile: ").Append(ArchiverProfile).Append("\n");
            sb.Append("  ArchiverProcessId: ").Append(ArchiverProcessId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PolicyDaoSetting);
        }

        /// <summary>
        /// Returns true if PolicyDaoSetting instances are equal
        /// </summary>
        /// <param name="input">Instance of PolicyDaoSetting to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PolicyDaoSetting input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IsPolicyEnforcerEnabled == input.IsPolicyEnforcerEnabled ||
                    this.IsPolicyEnforcerEnabled.Equals(input.IsPolicyEnforcerEnabled)
                ) && 
                (
                    this.PolicyEnforcerProfile == input.PolicyEnforcerProfile ||
                    (this.PolicyEnforcerProfile != null &&
                    this.PolicyEnforcerProfile.Equals(input.PolicyEnforcerProfile))
                ) && 
                (
                    this.IsDpmEnabled == input.IsDpmEnabled ||
                    this.IsDpmEnabled.Equals(input.IsDpmEnabled)
                ) && 
                (
                    this.DpmPlan == input.DpmPlan ||
                    (this.DpmPlan != null &&
                    this.DpmPlan.Equals(input.DpmPlan))
                ) && 
                (
                    this.IsBackupEnabled == input.IsBackupEnabled ||
                    this.IsBackupEnabled.Equals(input.IsBackupEnabled)
                ) && 
                (
                    this.IsAuditingEnabled == input.IsAuditingEnabled ||
                    this.IsAuditingEnabled.Equals(input.IsAuditingEnabled)
                ) && 
                (
                    this.IsArchiverEnabled == input.IsArchiverEnabled ||
                    this.IsArchiverEnabled.Equals(input.IsArchiverEnabled)
                ) && 
                (
                    this.ArchiverProfile == input.ArchiverProfile ||
                    (this.ArchiverProfile != null &&
                    this.ArchiverProfile.Equals(input.ArchiverProfile))
                ) && 
                (
                    this.ArchiverProcessId == input.ArchiverProcessId ||
                    (this.ArchiverProcessId != null &&
                    this.ArchiverProcessId.Equals(input.ArchiverProcessId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.IsPolicyEnforcerEnabled.GetHashCode();
                if (this.PolicyEnforcerProfile != null)
                    hashCode = hashCode * 59 + this.PolicyEnforcerProfile.GetHashCode();
                hashCode = hashCode * 59 + this.IsDpmEnabled.GetHashCode();
                if (this.DpmPlan != null)
                    hashCode = hashCode * 59 + this.DpmPlan.GetHashCode();
                hashCode = hashCode * 59 + this.IsBackupEnabled.GetHashCode();
                hashCode = hashCode * 59 + this.IsAuditingEnabled.GetHashCode();
                hashCode = hashCode * 59 + this.IsArchiverEnabled.GetHashCode();
                if (this.ArchiverProfile != null)
                    hashCode = hashCode * 59 + this.ArchiverProfile.GetHashCode();
                if (this.ArchiverProcessId != null)
                    hashCode = hashCode * 59 + this.ArchiverProcessId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

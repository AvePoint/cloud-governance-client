#
# Cloud Governance Api
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 1.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AllowMultiple
No description available.

.PARAMETER AdminCenter
No description available.

.PARAMETER Value
No description available.

.PARAMETER TermStore
No description available.

.PARAMETER TermGroup
No description available.

.PARAMETER TermSet
No description available.

.PARAMETER Scope
No description available.

.OUTPUTS

TermsMetadataSettings<PSCustomObject>
#>

function New-TermsMetadataSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowMultiple},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AdminCenter},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Value},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TermStore},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TermGroup},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TermSet},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Scope}
    )

    Process {
        'Creating object: Cloud.Governance.Client => TermsMetadataSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $PSO = [PSCustomObject]@{
            "allowMultiple" = ${AllowMultiple}
            "adminCenter" = ${AdminCenter}
            "value" = ${Value}
            "termStore" = ${TermStore}
            "termGroup" = ${TermGroup}
            "termSet" = ${TermSet}
            "scope" = ${Scope}
        }

        return $PSO
    }
}

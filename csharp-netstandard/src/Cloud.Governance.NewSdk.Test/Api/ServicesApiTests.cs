/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Cloud.Governance.NewSdk.Client;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing ServicesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ServicesApiTests : IDisposable
    {
        private ServicesApi instance;

        public ServicesApiTests()
        {
            instance = new ServicesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ServicesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ServicesApi
            //Assert.IsType(typeof(ServicesApi), instance, "instance is a ServicesApi");
        }

        
        /// <summary>
        /// Test AddCreateListService
        /// </summary>
        [Fact]
        public void AddCreateListServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSiteService createSiteService = null;
            //var response = instance.AddCreateListService(createSiteService);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test AddCreateWebService
        /// </summary>
        [Fact]
        public void AddCreateWebServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateWebService createWebService = null;
            //var response = instance.AddCreateWebService(createWebService);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test GetChangeGroupSettingService
        /// </summary>
        [Fact]
        public void GetChangeGroupSettingServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetChangeGroupSettingService(id, questionnaireId);
            //Assert.IsType<ChangeGroupSettingService> (response, "response is ChangeGroupSettingService");
        }
        
        /// <summary>
        /// Test GetChangeListSettingService
        /// </summary>
        [Fact]
        public void GetChangeListSettingServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetChangeListSettingService(id, questionnaireId);
            //Assert.IsType<ChangeListSettingService> (response, "response is ChangeListSettingService");
        }
        
        /// <summary>
        /// Test GetChangePermissionService
        /// </summary>
        [Fact]
        public void GetChangePermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetChangePermissionService(id, questionnaireId);
            //Assert.IsType<ChangePermissionService> (response, "response is ChangePermissionService");
        }
        
        /// <summary>
        /// Test GetChangeSiteContactService
        /// </summary>
        [Fact]
        public void GetChangeSiteContactServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetChangeSiteContactService(id, questionnaireId);
            //Assert.IsType<ChangeSiteContactService> (response, "response is ChangeSiteContactService");
        }
        
        /// <summary>
        /// Test GetChangeSiteSettingService
        /// </summary>
        [Fact]
        public void GetChangeSiteSettingServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetChangeSiteSettingService(id, questionnaireId);
            //Assert.IsType<ChangeSiteSettingService> (response, "response is ChangeSiteSettingService");
        }
        
        /// <summary>
        /// Test GetChangeWebContactService
        /// </summary>
        [Fact]
        public void GetChangeWebContactServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetChangeWebContactService(id, questionnaireId);
            //Assert.IsType<ChangeWebContactService> (response, "response is ChangeWebContactService");
        }
        
        /// <summary>
        /// Test GetChangeWebSettingsService
        /// </summary>
        [Fact]
        public void GetChangeWebSettingsServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetChangeWebSettingsService(id, questionnaireId);
            //Assert.IsType<ChangeWebSettingService> (response, "response is ChangeWebSettingService");
        }
        
        /// <summary>
        /// Test GetClonePermissionService
        /// </summary>
        [Fact]
        public void GetClonePermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetClonePermissionService(id, questionnaireId);
            //Assert.IsType<ClonePermissionService> (response, "response is ClonePermissionService");
        }
        
        /// <summary>
        /// Test GetContentMoveProfiles
        /// </summary>
        [Fact]
        public void GetContentMoveProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetContentMoveProfiles();
            //Assert.IsType<ContentMoveProfiles> (response, "response is ContentMoveProfiles");
        }
        
        /// <summary>
        /// Test GetContentMoveService
        /// </summary>
        [Fact]
        public void GetContentMoveServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetContentMoveService(id, questionnaireId);
            //Assert.IsType<ContentMoveService> (response, "response is ContentMoveService");
        }
        
        /// <summary>
        /// Test GetCreateGroupService
        /// </summary>
        [Fact]
        public void GetCreateGroupServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetCreateGroupService(id, questionnaireId);
            //Assert.IsType<CreateGroupService> (response, "response is CreateGroupService");
        }
        
        /// <summary>
        /// Test GetCreateListService
        /// </summary>
        [Fact]
        public void GetCreateListServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetCreateListService(id, questionnaireId);
            //Assert.IsType<CreateListService> (response, "response is CreateListService");
        }
        
        /// <summary>
        /// Test GetCreateSiteService
        /// </summary>
        [Fact]
        public void GetCreateSiteServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetCreateSiteService(id, questionnaireId);
            //Assert.IsType<CreateSiteService> (response, "response is CreateSiteService");
        }
        
        /// <summary>
        /// Test GetCreateWebService
        /// </summary>
        [Fact]
        public void GetCreateWebServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetCreateWebService(id, questionnaireId);
            //Assert.IsType<CreateWebService> (response, "response is CreateWebService");
        }
        
        /// <summary>
        /// Test GetCustomService
        /// </summary>
        [Fact]
        public void GetCustomServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetCustomService(id, questionnaireId);
            //Assert.IsType<ServiceForRequest> (response, "response is ServiceForRequest");
        }
        
        /// <summary>
        /// Test GetGrantPermissionService
        /// </summary>
        [Fact]
        public void GetGrantPermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetGrantPermissionService(id, questionnaireId);
            //Assert.IsType<GrantPermissionService> (response, "response is GrantPermissionService");
        }
        
        /// <summary>
        /// Test GetGroupLifecycleService
        /// </summary>
        [Fact]
        public void GetGroupLifecycleServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetGroupLifecycleService(id, questionnaireId);
            //Assert.IsType<GroupLifecycleService> (response, "response is GroupLifecycleService");
        }
        
        /// <summary>
        /// Test GetManagePermissionService
        /// </summary>
        [Fact]
        public void GetManagePermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetManagePermissionService(id, questionnaireId);
            //Assert.IsType<ManagePermissionService> (response, "response is ManagePermissionService");
        }
        
        /// <summary>
        /// Test GetMyQuickServices
        /// </summary>
        [Fact]
        public void GetMyQuickServicesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMyQuickServices();
            //Assert.IsType<List<ServiceList>> (response, "response is List<ServiceList>");
        }
        
        /// <summary>
        /// Test GetMyServices
        /// </summary>
        [Fact]
        public void GetMyServicesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //var response = instance.GetMyServices(search);
            //Assert.IsType<ServiceListPageResult> (response, "response is ServiceListPageResult");
        }
        
        /// <summary>
        /// Test GetMyServicesWithContext
        /// </summary>
        [Fact]
        public void GetMyServicesWithContextTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WorkspaceType objecttype = null;
            //string objectid = null;
            //string search = null;
            //var response = instance.GetMyServicesWithContext(objecttype, objectid, search);
            //Assert.IsType<List<ServiceList>> (response, "response is List<ServiceList>");
        }
        
        /// <summary>
        /// Test GetSiteLifecycleService
        /// </summary>
        [Fact]
        public void GetSiteLifecycleServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetSiteLifecycleService(id, questionnaireId);
            //Assert.IsType<SiteLifecycleService> (response, "response is SiteLifecycleService");
        }
        
        /// <summary>
        /// Test GetWebLifecycleService
        /// </summary>
        [Fact]
        public void GetWebLifecycleServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Guid? questionnaireId = null;
            //var response = instance.GetWebLifecycleService(id, questionnaireId);
            //Assert.IsType<WebLifecycleService> (response, "response is WebLifecycleService");
        }
        
        /// <summary>
        /// Test ValidateForChangeGroupSettingService
        /// </summary>
        [Fact]
        public void ValidateForChangeGroupSettingServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //GroupValidationParameter groupValidationParameter = null;
            //var response = instance.ValidateForChangeGroupSettingService(id, groupValidationParameter);
            //Assert.IsType<ChangeGroupSettingCheckResult> (response, "response is ChangeGroupSettingCheckResult");
        }
        
        /// <summary>
        /// Test ValidateForChangeListSettingService
        /// </summary>
        [Fact]
        public void ValidateForChangeListSettingServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForChangeListSettingService(id, siteValidationParameter);
            //Assert.IsType<ChangeListSettingValidateResult> (response, "response is ChangeListSettingValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForChangePermissionService
        /// </summary>
        [Fact]
        public void ValidateForChangePermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForChangePermissionService(id, siteValidationParameter);
            //Assert.IsType<ChangePermissionValidateResult> (response, "response is ChangePermissionValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForChangeSiteContactService
        /// </summary>
        [Fact]
        public void ValidateForChangeSiteContactServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForChangeSiteContactService(id, siteValidationParameter);
            //Assert.IsType<ChangeSiteContactValidateResult> (response, "response is ChangeSiteContactValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForChangeSiteSettingService
        /// </summary>
        [Fact]
        public void ValidateForChangeSiteSettingServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForChangeSiteSettingService(id, siteValidationParameter);
            //Assert.IsType<ChangeSiteSettingValidateResult> (response, "response is ChangeSiteSettingValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForChangeWebContactService
        /// </summary>
        [Fact]
        public void ValidateForChangeWebContactServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForChangeWebContactService(id, siteValidationParameter);
            //Assert.IsType<ChangeWebContactValidateResult> (response, "response is ChangeWebContactValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForChangeWebSettingService
        /// </summary>
        [Fact]
        public void ValidateForChangeWebSettingServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForChangeWebSettingService(id, siteValidationParameter);
            //Assert.IsType<ChangeWebUrlValidateResult> (response, "response is ChangeWebUrlValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForClonePermissionService
        /// </summary>
        [Fact]
        public void ValidateForClonePermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForClonePermissionService(id, siteValidationParameter);
            //Assert.IsType<ClonePermissionValidateResult> (response, "response is ClonePermissionValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForContentMoveService
        /// </summary>
        [Fact]
        public void ValidateForContentMoveServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForContentMoveService(id, siteValidationParameter);
            //Assert.IsType<ContentMoveUrlValidationResult> (response, "response is ContentMoveUrlValidationResult");
        }
        
        /// <summary>
        /// Test ValidateForCreateListService
        /// </summary>
        [Fact]
        public void ValidateForCreateListServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ListValidationParameter listValidationParameter = null;
            //var response = instance.ValidateForCreateListService(id, listValidationParameter);
            //Assert.IsType<CreateListUrlValidationResult> (response, "response is CreateListUrlValidationResult");
        }
        
        /// <summary>
        /// Test ValidateForCreateWebService
        /// </summary>
        [Fact]
        public void ValidateForCreateWebServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //CreateWebValidationParameter createWebValidationParameter = null;
            //var response = instance.ValidateForCreateWebService(id, createWebValidationParameter);
            //Assert.IsType<CreateWebUrlValidationResult> (response, "response is CreateWebUrlValidationResult");
        }
        
        /// <summary>
        /// Test ValidateForGrantPermissionService
        /// </summary>
        [Fact]
        public void ValidateForGrantPermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForGrantPermissionService(id, siteValidationParameter);
            //Assert.IsType<GrantPermissionUrlValidationResult> (response, "response is GrantPermissionUrlValidationResult");
        }
        
        /// <summary>
        /// Test ValidateForGroupLifecycleService
        /// </summary>
        [Fact]
        public void ValidateForGroupLifecycleServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //GroupValidationParameter groupValidationParameter = null;
            //var response = instance.ValidateForGroupLifecycleService(id, groupValidationParameter);
            //Assert.IsType<GroupLifecycleValidateResult> (response, "response is GroupLifecycleValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForManagePermissionService
        /// </summary>
        [Fact]
        public void ValidateForManagePermissionServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForManagePermissionService(id, siteValidationParameter);
            //Assert.IsType<ManagePermissionValidateResult> (response, "response is ManagePermissionValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForSiteLifecycleService
        /// </summary>
        [Fact]
        public void ValidateForSiteLifecycleServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForSiteLifecycleService(id, siteValidationParameter);
            //Assert.IsType<SiteLifecycleValidateResult> (response, "response is SiteLifecycleValidateResult");
        }
        
        /// <summary>
        /// Test ValidateForWebLifecycleService
        /// </summary>
        [Fact]
        public void ValidateForWebLifecycleServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SiteValidationParameter siteValidationParameter = null;
            //var response = instance.ValidateForWebLifecycleService(id, siteValidationParameter);
            //Assert.IsType<WebLifecycleValidateResult> (response, "response is WebLifecycleValidateResult");
        }
        
    }

}

// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccessRequestType,
    AccessRequestTypeFromJSON,
    AccessRequestTypeFromJSONTyped,
    AccessRequestTypeToJSON,
    SharingCapabilities,
    SharingCapabilitiesFromJSON,
    SharingCapabilitiesFromJSONTyped,
    SharingCapabilitiesToJSON,
} from './';

/**
 * 
 * @export
 * @interface PolicySharingSetting
 */
export interface PolicySharingSetting {
    /**
     * 
     * @type {boolean}
     * @memberof PolicySharingSetting
     */
    isEnabled?: boolean;
    /**
     * 
     * @type {SharingCapabilities}
     * @memberof PolicySharingSetting
     */
    sharingCapabilities?: SharingCapabilities;
    /**
     * 
     * @type {boolean}
     * @memberof PolicySharingSetting
     */
    turnOffForNonOwnerUserSharing?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PolicySharingSetting
     */
    membersCanShare?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PolicySharingSetting
     */
    allowMembersEditMembership?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PolicySharingSetting
     */
    allowAccessRequests?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PolicySharingSetting
     */
    requestAccessEmail?: string | null;
    /**
     * 
     * @type {AccessRequestType}
     * @memberof PolicySharingSetting
     */
    accessRequestType?: AccessRequestType;
    /**
     * 
     * @type {string}
     * @memberof PolicySharingSetting
     */
    accessRequestMessage?: string | null;
}

export function PolicySharingSettingFromJSON(json: any): PolicySharingSetting {
    return PolicySharingSettingFromJSONTyped(json, false);
}

export function PolicySharingSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicySharingSetting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isEnabled': !exists(json, 'isEnabled') ? undefined : json['isEnabled'],
        'sharingCapabilities': !exists(json, 'sharingCapabilities') ? undefined : SharingCapabilitiesFromJSON(json['sharingCapabilities']),
        'turnOffForNonOwnerUserSharing': !exists(json, 'turnOffForNonOwnerUserSharing') ? undefined : json['turnOffForNonOwnerUserSharing'],
        'membersCanShare': !exists(json, 'membersCanShare') ? undefined : json['membersCanShare'],
        'allowMembersEditMembership': !exists(json, 'allowMembersEditMembership') ? undefined : json['allowMembersEditMembership'],
        'allowAccessRequests': !exists(json, 'allowAccessRequests') ? undefined : json['allowAccessRequests'],
        'requestAccessEmail': !exists(json, 'requestAccessEmail') ? undefined : json['requestAccessEmail'],
        'accessRequestType': !exists(json, 'accessRequestType') ? undefined : AccessRequestTypeFromJSON(json['accessRequestType']),
        'accessRequestMessage': !exists(json, 'accessRequestMessage') ? undefined : json['accessRequestMessage'],
    };
}

export function PolicySharingSettingToJSON(value?: PolicySharingSetting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isEnabled': value.isEnabled,
        'sharingCapabilities': SharingCapabilitiesToJSON(value.sharingCapabilities),
        'turnOffForNonOwnerUserSharing': value.turnOffForNonOwnerUserSharing,
        'membersCanShare': value.membersCanShare,
        'allowMembersEditMembership': value.allowMembersEditMembership,
        'allowAccessRequests': value.allowAccessRequests,
        'requestAccessEmail': value.requestAccessEmail,
        'accessRequestType': AccessRequestTypeToJSON(value.accessRequestType),
        'accessRequestMessage': value.accessRequestMessage,
    };
}



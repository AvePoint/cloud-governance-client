/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// SiteList
    /// </summary>
    [DataContract]
    public partial class SiteList :  IEquatable<SiteList>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public SiteStatus? Status { get; set; }
        /// <summary>
        /// Gets or Sets ClaimStatus
        /// </summary>
        [DataMember(Name="claimStatus", EmitDefaultValue=false)]
        public ClaimStatus? ClaimStatus { get; set; }
        /// <summary>
        /// Gets or Sets Sharing
        /// </summary>
        [DataMember(Name="sharing", EmitDefaultValue=false)]
        public SharingCapabilities? Sharing { get; set; }
        /// <summary>
        /// Gets or Sets PermissionRecertificationStatus
        /// </summary>
        [DataMember(Name="permissionRecertificationStatus", EmitDefaultValue=false)]
        public RecertificationStatus? PermissionRecertificationStatus { get; set; }
        /// <summary>
        /// Gets or Sets MetadataRecertificationStatus
        /// </summary>
        [DataMember(Name="metadataRecertificationStatus", EmitDefaultValue=false)]
        public RecertificationStatus? MetadataRecertificationStatus { get; set; }
        /// <summary>
        /// Gets or Sets OwnershipRecertificationStatus
        /// </summary>
        [DataMember(Name="ownershipRecertificationStatus", EmitDefaultValue=false)]
        public RecertificationStatus? OwnershipRecertificationStatus { get; set; }
        /// <summary>
        /// Gets or Sets Phase
        /// </summary>
        [DataMember(Name="phase", EmitDefaultValue=false)]
        public AutoImportPhase? Phase { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SiteList" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="description">description.</param>
        /// <param name="title">title.</param>
        /// <param name="url">url.</param>
        /// <param name="department">department.</param>
        /// <param name="policyName">policyName.</param>
        /// <param name="policyId">policyId.</param>
        /// <param name="template">template.</param>
        /// <param name="owner">owner.</param>
        /// <param name="primaryContact">primaryContact.</param>
        /// <param name="primaryContactDisplayName">primaryContactDisplayName.</param>
        /// <param name="secondaryContact">secondaryContact.</param>
        /// <param name="secondaryContactDisplayName">secondaryContactDisplayName.</param>
        /// <param name="additionalAdministrators">additionalAdministrators.</param>
        /// <param name="additionalAdministratorDisplayNames">additionalAdministratorDisplayNames.</param>
        /// <param name="createdTime">createdTime.</param>
        /// <param name="status">status.</param>
        /// <param name="claimStatus">claimStatus.</param>
        /// <param name="sharing">sharing.</param>
        /// <param name="storageQuota">storageQuota.</param>
        /// <param name="storageUsed">storageUsed.</param>
        /// <param name="inactivityThresholdTime">inactivityThresholdTime.</param>
        /// <param name="leaseExpirationTime">leaseExpirationTime.</param>
        /// <param name="permissionRecertificationStatus">permissionRecertificationStatus.</param>
        /// <param name="metadataRecertificationStatus">metadataRecertificationStatus.</param>
        /// <param name="ownershipRecertificationStatus">ownershipRecertificationStatus.</param>
        /// <param name="geoLocation">geoLocation.</param>
        /// <param name="hub">hub.</param>
        /// <param name="phase">phase.</param>
        /// <param name="metadata">metadata.</param>
        public SiteList(Guid id = default(Guid), string description = default(string), string title = default(string), string url = default(string), string department = default(string), string policyName = default(string), Guid policyId = default(Guid), string template = default(string), string owner = default(string), string primaryContact = default(string), string primaryContactDisplayName = default(string), string secondaryContact = default(string), string secondaryContactDisplayName = default(string), string additionalAdministrators = default(string), string additionalAdministratorDisplayNames = default(string), string createdTime = default(string), SiteStatus status = default(SiteStatus), ClaimStatus claimStatus = default(ClaimStatus), SharingCapabilities sharing = default(SharingCapabilities), long storageQuota = default(long), long storageUsed = default(long), DateTime? inactivityThresholdTime = default(DateTime?), DateTime? leaseExpirationTime = default(DateTime?), RecertificationStatus permissionRecertificationStatus = default(RecertificationStatus), RecertificationStatus metadataRecertificationStatus = default(RecertificationStatus), RecertificationStatus ownershipRecertificationStatus = default(RecertificationStatus), string geoLocation = default(string), string hub = default(string), AutoImportPhase phase = default(AutoImportPhase), List<ReportMetadata> metadata = default(List<ReportMetadata>))
        {
            this.Id = id;
            this.Description = description;
            this.Title = title;
            this.Url = url;
            this.Department = department;
            this.PolicyName = policyName;
            this.PolicyId = policyId;
            this.Template = template;
            this.Owner = owner;
            this.PrimaryContact = primaryContact;
            this.PrimaryContactDisplayName = primaryContactDisplayName;
            this.SecondaryContact = secondaryContact;
            this.SecondaryContactDisplayName = secondaryContactDisplayName;
            this.AdditionalAdministrators = additionalAdministrators;
            this.AdditionalAdministratorDisplayNames = additionalAdministratorDisplayNames;
            this.CreatedTime = createdTime;
            this.Status = status;
            this.ClaimStatus = claimStatus;
            this.Sharing = sharing;
            this.StorageQuota = storageQuota;
            this.StorageUsed = storageUsed;
            this.InactivityThresholdTime = inactivityThresholdTime;
            this.LeaseExpirationTime = leaseExpirationTime;
            this.PermissionRecertificationStatus = permissionRecertificationStatus;
            this.MetadataRecertificationStatus = metadataRecertificationStatus;
            this.OwnershipRecertificationStatus = ownershipRecertificationStatus;
            this.GeoLocation = geoLocation;
            this.Hub = hub;
            this.Phase = phase;
            this.Metadata = metadata;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="url", EmitDefaultValue=true)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name="department", EmitDefaultValue=true)]
        public string Department { get; set; }

        /// <summary>
        /// Gets or Sets PolicyName
        /// </summary>
        [DataMember(Name="policyName", EmitDefaultValue=true)]
        public string PolicyName { get; set; }

        /// <summary>
        /// Gets or Sets PolicyId
        /// </summary>
        [DataMember(Name="policyId", EmitDefaultValue=false)]
        public Guid PolicyId { get; set; }

        /// <summary>
        /// Gets or Sets Template
        /// </summary>
        [DataMember(Name="template", EmitDefaultValue=true)]
        public string Template { get; set; }

        /// <summary>
        /// Gets or Sets Owner
        /// </summary>
        [DataMember(Name="owner", EmitDefaultValue=true)]
        public string Owner { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContact
        /// </summary>
        [DataMember(Name="primaryContact", EmitDefaultValue=true)]
        public string PrimaryContact { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContactDisplayName
        /// </summary>
        [DataMember(Name="primaryContactDisplayName", EmitDefaultValue=true)]
        public string PrimaryContactDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryContact
        /// </summary>
        [DataMember(Name="secondaryContact", EmitDefaultValue=true)]
        public string SecondaryContact { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryContactDisplayName
        /// </summary>
        [DataMember(Name="secondaryContactDisplayName", EmitDefaultValue=true)]
        public string SecondaryContactDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAdministrators
        /// </summary>
        [DataMember(Name="additionalAdministrators", EmitDefaultValue=true)]
        public string AdditionalAdministrators { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAdministratorDisplayNames
        /// </summary>
        [DataMember(Name="additionalAdministratorDisplayNames", EmitDefaultValue=true)]
        public string AdditionalAdministratorDisplayNames { get; set; }

        /// <summary>
        /// Gets or Sets CreatedTime
        /// </summary>
        [DataMember(Name="createdTime", EmitDefaultValue=true)]
        public string CreatedTime { get; set; }

        /// <summary>
        /// Gets or Sets StatusDescription
        /// </summary>
        [DataMember(Name="statusDescription", EmitDefaultValue=true)]
        public string StatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets ClaimStatusDescription
        /// </summary>
        [DataMember(Name="claimStatusDescription", EmitDefaultValue=true)]
        public string ClaimStatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets SharingDescription
        /// </summary>
        [DataMember(Name="sharingDescription", EmitDefaultValue=true)]
        public string SharingDescription { get; private set; }

        /// <summary>
        /// Gets or Sets StorageQuota
        /// </summary>
        [DataMember(Name="storageQuota", EmitDefaultValue=false)]
        public long StorageQuota { get; set; }

        /// <summary>
        /// Gets or Sets StorageUsed
        /// </summary>
        [DataMember(Name="storageUsed", EmitDefaultValue=false)]
        public long StorageUsed { get; set; }

        /// <summary>
        /// Gets or Sets InactivityThresholdTime
        /// </summary>
        [DataMember(Name="inactivityThresholdTime", EmitDefaultValue=true)]
        public DateTime? InactivityThresholdTime { get; set; }

        /// <summary>
        /// Gets or Sets LeaseExpirationTime
        /// </summary>
        [DataMember(Name="leaseExpirationTime", EmitDefaultValue=true)]
        public DateTime? LeaseExpirationTime { get; set; }

        /// <summary>
        /// Gets or Sets PermissionRecertificationStatusDescription
        /// </summary>
        [DataMember(Name="permissionRecertificationStatusDescription", EmitDefaultValue=true)]
        public string PermissionRecertificationStatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets MetadataRecertificationStatusDescription
        /// </summary>
        [DataMember(Name="metadataRecertificationStatusDescription", EmitDefaultValue=true)]
        public string MetadataRecertificationStatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets OwnershipRecertificationStatusDescription
        /// </summary>
        [DataMember(Name="ownershipRecertificationStatusDescription", EmitDefaultValue=true)]
        public string OwnershipRecertificationStatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets GeoLocation
        /// </summary>
        [DataMember(Name="geoLocation", EmitDefaultValue=true)]
        public string GeoLocation { get; set; }

        /// <summary>
        /// Gets or Sets GeoLocationDescription
        /// </summary>
        [DataMember(Name="geoLocationDescription", EmitDefaultValue=true)]
        public string GeoLocationDescription { get; private set; }

        /// <summary>
        /// Gets or Sets Hub
        /// </summary>
        [DataMember(Name="hub", EmitDefaultValue=true)]
        public string Hub { get; set; }

        /// <summary>
        /// Gets or Sets PhaseDescription
        /// </summary>
        [DataMember(Name="phaseDescription", EmitDefaultValue=true)]
        public string PhaseDescription { get; private set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name="metadata", EmitDefaultValue=true)]
        public List<ReportMetadata> Metadata { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SiteList {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  PolicyName: ").Append(PolicyName).Append("\n");
            sb.Append("  PolicyId: ").Append(PolicyId).Append("\n");
            sb.Append("  Template: ").Append(Template).Append("\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  PrimaryContact: ").Append(PrimaryContact).Append("\n");
            sb.Append("  PrimaryContactDisplayName: ").Append(PrimaryContactDisplayName).Append("\n");
            sb.Append("  SecondaryContact: ").Append(SecondaryContact).Append("\n");
            sb.Append("  SecondaryContactDisplayName: ").Append(SecondaryContactDisplayName).Append("\n");
            sb.Append("  AdditionalAdministrators: ").Append(AdditionalAdministrators).Append("\n");
            sb.Append("  AdditionalAdministratorDisplayNames: ").Append(AdditionalAdministratorDisplayNames).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusDescription: ").Append(StatusDescription).Append("\n");
            sb.Append("  ClaimStatus: ").Append(ClaimStatus).Append("\n");
            sb.Append("  ClaimStatusDescription: ").Append(ClaimStatusDescription).Append("\n");
            sb.Append("  Sharing: ").Append(Sharing).Append("\n");
            sb.Append("  SharingDescription: ").Append(SharingDescription).Append("\n");
            sb.Append("  StorageQuota: ").Append(StorageQuota).Append("\n");
            sb.Append("  StorageUsed: ").Append(StorageUsed).Append("\n");
            sb.Append("  InactivityThresholdTime: ").Append(InactivityThresholdTime).Append("\n");
            sb.Append("  LeaseExpirationTime: ").Append(LeaseExpirationTime).Append("\n");
            sb.Append("  PermissionRecertificationStatus: ").Append(PermissionRecertificationStatus).Append("\n");
            sb.Append("  PermissionRecertificationStatusDescription: ").Append(PermissionRecertificationStatusDescription).Append("\n");
            sb.Append("  MetadataRecertificationStatus: ").Append(MetadataRecertificationStatus).Append("\n");
            sb.Append("  MetadataRecertificationStatusDescription: ").Append(MetadataRecertificationStatusDescription).Append("\n");
            sb.Append("  OwnershipRecertificationStatus: ").Append(OwnershipRecertificationStatus).Append("\n");
            sb.Append("  OwnershipRecertificationStatusDescription: ").Append(OwnershipRecertificationStatusDescription).Append("\n");
            sb.Append("  GeoLocation: ").Append(GeoLocation).Append("\n");
            sb.Append("  GeoLocationDescription: ").Append(GeoLocationDescription).Append("\n");
            sb.Append("  Hub: ").Append(Hub).Append("\n");
            sb.Append("  Phase: ").Append(Phase).Append("\n");
            sb.Append("  PhaseDescription: ").Append(PhaseDescription).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SiteList);
        }

        /// <summary>
        /// Returns true if SiteList instances are equal
        /// </summary>
        /// <param name="input">Instance of SiteList to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SiteList input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                ) && 
                (
                    this.Department == input.Department ||
                    (this.Department != null &&
                    this.Department.Equals(input.Department))
                ) && 
                (
                    this.PolicyName == input.PolicyName ||
                    (this.PolicyName != null &&
                    this.PolicyName.Equals(input.PolicyName))
                ) && 
                (
                    this.PolicyId == input.PolicyId ||
                    (this.PolicyId != null &&
                    this.PolicyId.Equals(input.PolicyId))
                ) && 
                (
                    this.Template == input.Template ||
                    (this.Template != null &&
                    this.Template.Equals(input.Template))
                ) && 
                (
                    this.Owner == input.Owner ||
                    (this.Owner != null &&
                    this.Owner.Equals(input.Owner))
                ) && 
                (
                    this.PrimaryContact == input.PrimaryContact ||
                    (this.PrimaryContact != null &&
                    this.PrimaryContact.Equals(input.PrimaryContact))
                ) && 
                (
                    this.PrimaryContactDisplayName == input.PrimaryContactDisplayName ||
                    (this.PrimaryContactDisplayName != null &&
                    this.PrimaryContactDisplayName.Equals(input.PrimaryContactDisplayName))
                ) && 
                (
                    this.SecondaryContact == input.SecondaryContact ||
                    (this.SecondaryContact != null &&
                    this.SecondaryContact.Equals(input.SecondaryContact))
                ) && 
                (
                    this.SecondaryContactDisplayName == input.SecondaryContactDisplayName ||
                    (this.SecondaryContactDisplayName != null &&
                    this.SecondaryContactDisplayName.Equals(input.SecondaryContactDisplayName))
                ) && 
                (
                    this.AdditionalAdministrators == input.AdditionalAdministrators ||
                    (this.AdditionalAdministrators != null &&
                    this.AdditionalAdministrators.Equals(input.AdditionalAdministrators))
                ) && 
                (
                    this.AdditionalAdministratorDisplayNames == input.AdditionalAdministratorDisplayNames ||
                    (this.AdditionalAdministratorDisplayNames != null &&
                    this.AdditionalAdministratorDisplayNames.Equals(input.AdditionalAdministratorDisplayNames))
                ) && 
                (
                    this.CreatedTime == input.CreatedTime ||
                    (this.CreatedTime != null &&
                    this.CreatedTime.Equals(input.CreatedTime))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.StatusDescription == input.StatusDescription ||
                    (this.StatusDescription != null &&
                    this.StatusDescription.Equals(input.StatusDescription))
                ) && 
                (
                    this.ClaimStatus == input.ClaimStatus ||
                    this.ClaimStatus.Equals(input.ClaimStatus)
                ) && 
                (
                    this.ClaimStatusDescription == input.ClaimStatusDescription ||
                    (this.ClaimStatusDescription != null &&
                    this.ClaimStatusDescription.Equals(input.ClaimStatusDescription))
                ) && 
                (
                    this.Sharing == input.Sharing ||
                    this.Sharing.Equals(input.Sharing)
                ) && 
                (
                    this.SharingDescription == input.SharingDescription ||
                    (this.SharingDescription != null &&
                    this.SharingDescription.Equals(input.SharingDescription))
                ) && 
                (
                    this.StorageQuota == input.StorageQuota ||
                    this.StorageQuota.Equals(input.StorageQuota)
                ) && 
                (
                    this.StorageUsed == input.StorageUsed ||
                    this.StorageUsed.Equals(input.StorageUsed)
                ) && 
                (
                    this.InactivityThresholdTime == input.InactivityThresholdTime ||
                    (this.InactivityThresholdTime != null &&
                    this.InactivityThresholdTime.Equals(input.InactivityThresholdTime))
                ) && 
                (
                    this.LeaseExpirationTime == input.LeaseExpirationTime ||
                    (this.LeaseExpirationTime != null &&
                    this.LeaseExpirationTime.Equals(input.LeaseExpirationTime))
                ) && 
                (
                    this.PermissionRecertificationStatus == input.PermissionRecertificationStatus ||
                    this.PermissionRecertificationStatus.Equals(input.PermissionRecertificationStatus)
                ) && 
                (
                    this.PermissionRecertificationStatusDescription == input.PermissionRecertificationStatusDescription ||
                    (this.PermissionRecertificationStatusDescription != null &&
                    this.PermissionRecertificationStatusDescription.Equals(input.PermissionRecertificationStatusDescription))
                ) && 
                (
                    this.MetadataRecertificationStatus == input.MetadataRecertificationStatus ||
                    this.MetadataRecertificationStatus.Equals(input.MetadataRecertificationStatus)
                ) && 
                (
                    this.MetadataRecertificationStatusDescription == input.MetadataRecertificationStatusDescription ||
                    (this.MetadataRecertificationStatusDescription != null &&
                    this.MetadataRecertificationStatusDescription.Equals(input.MetadataRecertificationStatusDescription))
                ) && 
                (
                    this.OwnershipRecertificationStatus == input.OwnershipRecertificationStatus ||
                    this.OwnershipRecertificationStatus.Equals(input.OwnershipRecertificationStatus)
                ) && 
                (
                    this.OwnershipRecertificationStatusDescription == input.OwnershipRecertificationStatusDescription ||
                    (this.OwnershipRecertificationStatusDescription != null &&
                    this.OwnershipRecertificationStatusDescription.Equals(input.OwnershipRecertificationStatusDescription))
                ) && 
                (
                    this.GeoLocation == input.GeoLocation ||
                    (this.GeoLocation != null &&
                    this.GeoLocation.Equals(input.GeoLocation))
                ) && 
                (
                    this.GeoLocationDescription == input.GeoLocationDescription ||
                    (this.GeoLocationDescription != null &&
                    this.GeoLocationDescription.Equals(input.GeoLocationDescription))
                ) && 
                (
                    this.Hub == input.Hub ||
                    (this.Hub != null &&
                    this.Hub.Equals(input.Hub))
                ) && 
                (
                    this.Phase == input.Phase ||
                    this.Phase.Equals(input.Phase)
                ) && 
                (
                    this.PhaseDescription == input.PhaseDescription ||
                    (this.PhaseDescription != null &&
                    this.PhaseDescription.Equals(input.PhaseDescription))
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    this.Metadata != null &&
                    input.Metadata != null &&
                    this.Metadata.SequenceEqual(input.Metadata)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                if (this.Department != null)
                    hashCode = hashCode * 59 + this.Department.GetHashCode();
                if (this.PolicyName != null)
                    hashCode = hashCode * 59 + this.PolicyName.GetHashCode();
                if (this.PolicyId != null)
                    hashCode = hashCode * 59 + this.PolicyId.GetHashCode();
                if (this.Template != null)
                    hashCode = hashCode * 59 + this.Template.GetHashCode();
                if (this.Owner != null)
                    hashCode = hashCode * 59 + this.Owner.GetHashCode();
                if (this.PrimaryContact != null)
                    hashCode = hashCode * 59 + this.PrimaryContact.GetHashCode();
                if (this.PrimaryContactDisplayName != null)
                    hashCode = hashCode * 59 + this.PrimaryContactDisplayName.GetHashCode();
                if (this.SecondaryContact != null)
                    hashCode = hashCode * 59 + this.SecondaryContact.GetHashCode();
                if (this.SecondaryContactDisplayName != null)
                    hashCode = hashCode * 59 + this.SecondaryContactDisplayName.GetHashCode();
                if (this.AdditionalAdministrators != null)
                    hashCode = hashCode * 59 + this.AdditionalAdministrators.GetHashCode();
                if (this.AdditionalAdministratorDisplayNames != null)
                    hashCode = hashCode * 59 + this.AdditionalAdministratorDisplayNames.GetHashCode();
                if (this.CreatedTime != null)
                    hashCode = hashCode * 59 + this.CreatedTime.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusDescription != null)
                    hashCode = hashCode * 59 + this.StatusDescription.GetHashCode();
                hashCode = hashCode * 59 + this.ClaimStatus.GetHashCode();
                if (this.ClaimStatusDescription != null)
                    hashCode = hashCode * 59 + this.ClaimStatusDescription.GetHashCode();
                hashCode = hashCode * 59 + this.Sharing.GetHashCode();
                if (this.SharingDescription != null)
                    hashCode = hashCode * 59 + this.SharingDescription.GetHashCode();
                hashCode = hashCode * 59 + this.StorageQuota.GetHashCode();
                hashCode = hashCode * 59 + this.StorageUsed.GetHashCode();
                if (this.InactivityThresholdTime != null)
                    hashCode = hashCode * 59 + this.InactivityThresholdTime.GetHashCode();
                if (this.LeaseExpirationTime != null)
                    hashCode = hashCode * 59 + this.LeaseExpirationTime.GetHashCode();
                hashCode = hashCode * 59 + this.PermissionRecertificationStatus.GetHashCode();
                if (this.PermissionRecertificationStatusDescription != null)
                    hashCode = hashCode * 59 + this.PermissionRecertificationStatusDescription.GetHashCode();
                hashCode = hashCode * 59 + this.MetadataRecertificationStatus.GetHashCode();
                if (this.MetadataRecertificationStatusDescription != null)
                    hashCode = hashCode * 59 + this.MetadataRecertificationStatusDescription.GetHashCode();
                hashCode = hashCode * 59 + this.OwnershipRecertificationStatus.GetHashCode();
                if (this.OwnershipRecertificationStatusDescription != null)
                    hashCode = hashCode * 59 + this.OwnershipRecertificationStatusDescription.GetHashCode();
                if (this.GeoLocation != null)
                    hashCode = hashCode * 59 + this.GeoLocation.GetHashCode();
                if (this.GeoLocationDescription != null)
                    hashCode = hashCode * 59 + this.GeoLocationDescription.GetHashCode();
                if (this.Hub != null)
                    hashCode = hashCode * 59 + this.Hub.GetHashCode();
                hashCode = hashCode * 59 + this.Phase.GetHashCode();
                if (this.PhaseDescription != null)
                    hashCode = hashCode * 59 + this.PhaseDescription.GetHashCode();
                if (this.Metadata != null)
                    hashCode = hashCode * 59 + this.Metadata.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

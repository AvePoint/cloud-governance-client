// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApprovalAction,
    ApprovalActionFromJSON,
    ApprovalActionFromJSONTyped,
    ApprovalActionToJSON,
} from './';

/**
 * 
 * @export
 * @interface SecuritySearchResult
 */
export interface SecuritySearchResult {
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    displayName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    identityName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    objectUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    objectTitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    objectType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    readonly objectTypeDescription?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    accountType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    readonly accountTypeDescription?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    sharePointGroup?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    permissionLevels?: string | null;
    /**
     * 
     * @type {ApprovalAction}
     * @memberof SecuritySearchResult
     */
    action?: ApprovalAction;
    /**
     * 
     * @type {string}
     * @memberof SecuritySearchResult
     */
    readonly accessType?: string | null;
}

export function SecuritySearchResultFromJSON(json: any): SecuritySearchResult {
    return SecuritySearchResultFromJSONTyped(json, false);
}

export function SecuritySearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecuritySearchResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'identityName': !exists(json, 'identityName') ? undefined : json['identityName'],
        'objectUrl': !exists(json, 'objectUrl') ? undefined : json['objectUrl'],
        'objectTitle': !exists(json, 'objectTitle') ? undefined : json['objectTitle'],
        'objectType': !exists(json, 'objectType') ? undefined : json['objectType'],
        'objectTypeDescription': !exists(json, 'objectTypeDescription') ? undefined : json['objectTypeDescription'],
        'accountType': !exists(json, 'accountType') ? undefined : json['accountType'],
        'accountTypeDescription': !exists(json, 'accountTypeDescription') ? undefined : json['accountTypeDescription'],
        'sharePointGroup': !exists(json, 'sharePointGroup') ? undefined : json['sharePointGroup'],
        'permissionLevels': !exists(json, 'permissionLevels') ? undefined : json['permissionLevels'],
        'action': !exists(json, 'action') ? undefined : ApprovalActionFromJSON(json['action']),
        'accessType': !exists(json, 'accessType') ? undefined : json['accessType'],
    };
}

export function SecuritySearchResultToJSON(value?: SecuritySearchResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'displayName': value.displayName,
        'identityName': value.identityName,
        'objectUrl': value.objectUrl,
        'objectTitle': value.objectTitle,
        'objectType': value.objectType,
        'accountType': value.accountType,
        'sharePointGroup': value.sharePointGroup,
        'permissionLevels': value.permissionLevels,
        'action': ApprovalActionToJSON(value.action),
    };
}



// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AutoImportPhase,
    AutoImportPhaseFromJSON,
    AutoImportPhaseFromJSONTyped,
    AutoImportPhaseToJSON,
    SiteStatus,
    SiteStatusFromJSON,
    SiteStatusFromJSONTyped,
    SiteStatusToJSON,
    WorkspaceType,
    WorkspaceTypeFromJSON,
    WorkspaceTypeFromJSONTyped,
    WorkspaceTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface WorkspaceList
 */
export interface WorkspaceList {
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    name?: string | null;
    /**
     * 
     * @type {WorkspaceType}
     * @memberof WorkspaceList
     */
    type?: WorkspaceType;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    siteUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    groupEmail?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    readonly typeDescription?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    primaryContact?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    primaryContactEmail?: string | null;
    /**
     * 
     * @type {AutoImportPhase}
     * @memberof WorkspaceList
     */
    phase?: AutoImportPhase;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    readonly phaseDescription?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof WorkspaceList
     */
    isCurrentRenewer?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof WorkspaceList
     */
    createdTime?: Date;
    /**
     * 
     * @type {SiteStatus}
     * @memberof WorkspaceList
     */
    status?: SiteStatus;
    /**
     * 
     * @type {string}
     * @memberof WorkspaceList
     */
    autoImportProfileId?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkspaceList
     */
    pendingAction?: number;
}

export function WorkspaceListFromJSON(json: any): WorkspaceList {
    return WorkspaceListFromJSONTyped(json, false);
}

export function WorkspaceListFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkspaceList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : WorkspaceTypeFromJSON(json['type']),
        'siteUrl': !exists(json, 'siteUrl') ? undefined : json['siteUrl'],
        'groupEmail': !exists(json, 'groupEmail') ? undefined : json['groupEmail'],
        'typeDescription': !exists(json, 'typeDescription') ? undefined : json['typeDescription'],
        'primaryContact': !exists(json, 'primaryContact') ? undefined : json['primaryContact'],
        'primaryContactEmail': !exists(json, 'primaryContactEmail') ? undefined : json['primaryContactEmail'],
        'phase': !exists(json, 'phase') ? undefined : AutoImportPhaseFromJSON(json['phase']),
        'phaseDescription': !exists(json, 'phaseDescription') ? undefined : json['phaseDescription'],
        'isCurrentRenewer': !exists(json, 'isCurrentRenewer') ? undefined : json['isCurrentRenewer'],
        'createdTime': !exists(json, 'createdTime') ? undefined : new Date(json['createdTime']),
        'status': !exists(json, 'status') ? undefined : SiteStatusFromJSON(json['status']),
        'autoImportProfileId': !exists(json, 'autoImportProfileId') ? undefined : json['autoImportProfileId'],
        'pendingAction': !exists(json, 'pendingAction') ? undefined : json['pendingAction'],
    };
}

export function WorkspaceListToJSON(value?: WorkspaceList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'type': WorkspaceTypeToJSON(value.type),
        'siteUrl': value.siteUrl,
        'groupEmail': value.groupEmail,
        'primaryContact': value.primaryContact,
        'primaryContactEmail': value.primaryContactEmail,
        'phase': AutoImportPhaseToJSON(value.phase),
        'isCurrentRenewer': value.isCurrentRenewer,
        'createdTime': value.createdTime == null ? undefined : value.createdTime.toISOString(),
        'status': SiteStatusToJSON(value.status),
        'autoImportProfileId': value.autoImportProfileId,
        'pendingAction': value.pendingAction,
    };
}



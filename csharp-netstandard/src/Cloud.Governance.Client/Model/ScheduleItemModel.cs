/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// ScheduleItemModel
    /// </summary>
    [DataContract]
    public partial class ScheduleItemModel :  IEquatable<ScheduleItemModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScheduleItemModel" /> class.
        /// </summary>
        /// <param name="days">days.</param>
        /// <param name="beginHours">beginHours.</param>
        /// <param name="endHours">endHours.</param>
        public ScheduleItemModel(List<DayOfWeek> days = default(List<DayOfWeek>), int beginHours = default(int), int endHours = default(int))
        {
            this.Days = days;
            this.BeginHours = beginHours;
            this.EndHours = endHours;
        }
        
        /// <summary>
        /// Gets or Sets Days
        /// </summary>
        [DataMember(Name="days", EmitDefaultValue=true)]
        public List<DayOfWeek> Days { get; set; }

        /// <summary>
        /// Gets or Sets BeginHours
        /// </summary>
        [DataMember(Name="beginHours", EmitDefaultValue=false)]
        public int BeginHours { get; set; }

        /// <summary>
        /// Gets or Sets EndHours
        /// </summary>
        [DataMember(Name="endHours", EmitDefaultValue=false)]
        public int EndHours { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ScheduleItemModel {\n");
            sb.Append("  Days: ").Append(Days).Append("\n");
            sb.Append("  BeginHours: ").Append(BeginHours).Append("\n");
            sb.Append("  EndHours: ").Append(EndHours).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ScheduleItemModel);
        }

        /// <summary>
        /// Returns true if ScheduleItemModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ScheduleItemModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ScheduleItemModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Days == input.Days ||
                    this.Days != null &&
                    input.Days != null &&
                    this.Days.SequenceEqual(input.Days)
                ) && 
                (
                    this.BeginHours == input.BeginHours ||
                    this.BeginHours.Equals(input.BeginHours)
                ) && 
                (
                    this.EndHours == input.EndHours ||
                    this.EndHours.Equals(input.EndHours)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Days != null)
                    hashCode = hashCode * 59 + this.Days.GetHashCode();
                hashCode = hashCode * 59 + this.BeginHours.GetHashCode();
                hashCode = hashCode * 59 + this.EndHours.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // BeginHours (int) maximum
            if(this.BeginHours > (int)23)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for BeginHours, must be a value less than or equal to 23.", new [] { "BeginHours" });
            }

            // BeginHours (int) minimum
            if(this.BeginHours < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for BeginHours, must be a value greater than or equal to 0.", new [] { "BeginHours" });
            }

            // EndHours (int) maximum
            if(this.EndHours > (int)23)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for EndHours, must be a value less than or equal to 23.", new [] { "EndHours" });
            }

            // EndHours (int) minimum
            if(this.EndHours < (int)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for EndHours, must be a value greater than or equal to 0.", new [] { "EndHours" });
            }

            yield break;
        }
    }

}

/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EmailTemplateType', 'model/GuidModel'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/EmailTemplateType'), require('../model/GuidModel'));
  } else {
    // Browser globals (root is window)
    if (!root.CgClient) {
      root.CgClient = {};
    }
    root.CgClient.EmailsApi = factory(root.CgClient.ApiClient, root.CgClient.EmailTemplateType, root.CgClient.GuidModel);
  }
}(this, function(ApiClient, EmailTemplateType, GuidModel) {
  'use strict';

  /**
   * Emails service.
   * @module api/EmailsApi
   * @version 1.0
   */

  /**
   * Constructs a new EmailsApi. 
   * @alias module:api/EmailsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * get email templates by email template type
     * @param {module:model/EmailTemplateType} type 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/GuidModel>} and HTTP response
     */
    this.getEmailTemplateWithHttpInfo = function(type) {
      var postBody = null;
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling getEmailTemplate");
      }

      var pathParams = {
        'type': type
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ClientId', 'ClientSecret', 'UserPrincipalName'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = [GuidModel];
      return this.apiClient.callApi(
        '/emails/{type}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * get email templates by email template type
     * @param {module:model/EmailTemplateType} type 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/GuidModel>}
     */
    this.getEmailTemplate = function(type) {
      return this.getEmailTemplateWithHttpInfo(type)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));

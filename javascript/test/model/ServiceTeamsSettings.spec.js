/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudGovernanceApi);
  }
}(this, function(expect, CloudGovernanceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudGovernanceApi.ServiceTeamsSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServiceTeamsSettings', function() {
    it('should create an instance of ServiceTeamsSettings', function() {
      // uncomment below and update the code to test ServiceTeamsSettings
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be.a(CloudGovernanceApi.ServiceTeamsSettings);
    });

    it('should have the property memberPermissionsAssignBy (base name: "memberPermissionsAssignBy")', function() {
      // uncomment below and update the code to test the property memberPermissionsAssignBy
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property guestPermissionsAssignBy (base name: "guestPermissionsAssignBy")', function() {
      // uncomment below and update the code to test the property guestPermissionsAssignBy
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property mentionsAssignBy (base name: "mentionsAssignBy")', function() {
      // uncomment below and update the code to test the property mentionsAssignBy
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property funStuffAssignBy (base name: "funStuffAssignBy")', function() {
      // uncomment below and update the code to test the property funStuffAssignBy
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMembersCreateUpdateChannels (base name: "allowMembersCreateUpdateChannels")', function() {
      // uncomment below and update the code to test the property allowMembersCreateUpdateChannels
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMemberDeleteRestoreChannels (base name: "allowMemberDeleteRestoreChannels")', function() {
      // uncomment below and update the code to test the property allowMemberDeleteRestoreChannels
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMembersAddRemoveApps (base name: "allowMembersAddRemoveApps")', function() {
      // uncomment below and update the code to test the property allowMembersAddRemoveApps
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMembersCreateUpdateRemoveTabs (base name: "allowMembersCreateUpdateRemoveTabs")', function() {
      // uncomment below and update the code to test the property allowMembersCreateUpdateRemoveTabs
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMembersCreateUpdateRemoveConnections (base name: "allowMembersCreateUpdateRemoveConnections")', function() {
      // uncomment below and update the code to test the property allowMembersCreateUpdateRemoveConnections
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMembersDeleteMessages (base name: "allowMembersDeleteMessages")', function() {
      // uncomment below and update the code to test the property allowMembersDeleteMessages
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMembersEditMessages (base name: "allowMembersEditMessages")', function() {
      // uncomment below and update the code to test the property allowMembersEditMessages
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowGuestsCreateUpdateChannels (base name: "allowGuestsCreateUpdateChannels")', function() {
      // uncomment below and update the code to test the property allowGuestsCreateUpdateChannels
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowGuestsDeleteChannels (base name: "allowGuestsDeleteChannels")', function() {
      // uncomment below and update the code to test the property allowGuestsDeleteChannels
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMentionsTeam (base name: "allowMentionsTeam")', function() {
      // uncomment below and update the code to test the property allowMentionsTeam
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property allowMentionsChannel (base name: "allowMentionsChannel")', function() {
      // uncomment below and update the code to test the property allowMentionsChannel
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property enableGiphy (base name: "enableGiphy")', function() {
      // uncomment below and update the code to test the property enableGiphy
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property enableStickersAndMemes (base name: "enableStickersAndMemes")', function() {
      // uncomment below and update the code to test the property enableStickersAndMemes
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property enableCustomMemes (base name: "enableCustomMemes")', function() {
      // uncomment below and update the code to test the property enableCustomMemes
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

    it('should have the property giphyRatingType (base name: "giphyRatingType")', function() {
      // uncomment below and update the code to test the property giphyRatingType
      //var instane = new CloudGovernanceApi.ServiceTeamsSettings();
      //expect(instance).to.be();
    });

  });

}));

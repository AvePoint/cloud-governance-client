/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// RequestMetadataInfo
    /// </summary>
    [DataContract]
    public partial class RequestMetadataInfo :  IEquatable<RequestMetadataInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RequestMetadataInfo" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="tagName">tagName.</param>
        /// <param name="description">description.</param>
        /// <param name="fieldType">fieldType.</param>
        /// <param name="defaultValue">defaultValue.</param>
        /// <param name="metadataValues">metadataValues.</param>
        /// <param name="displayValues">displayValues.</param>
        /// <param name="valueConfig">valueConfig.</param>
        /// <param name="displayInReportType">displayInReportType.</param>
        /// <param name="action">action.</param>
        /// <param name="enableTextValidation">enableTextValidation.</param>
        /// <param name="textValidationRuleId">textValidationRuleId.</param>
        /// <param name="orginalValue">orginalValue.</param>
        /// <param name="orginalDisplayValue">orginalDisplayValue.</param>
        /// <param name="isNewMetadata">isNewMetadata.</param>
        /// <param name="originalTargetUserDisplayName">originalTargetUserDisplayName.</param>
        /// <param name="tenantId">tenantId.</param>
        public RequestMetadataInfo(Guid id = default(Guid), string tagName = default(string), string description = default(string), int fieldType = default(int), string defaultValue = default(string), string metadataValues = default(string), string displayValues = default(string), int valueConfig = default(int), int displayInReportType = default(int), int action = default(int), bool enableTextValidation = default(bool), Guid textValidationRuleId = default(Guid), string orginalValue = default(string), string orginalDisplayValue = default(string), bool isNewMetadata = default(bool), string originalTargetUserDisplayName = default(string), string tenantId = default(string))
        {
            this.Id = id;
            this.TagName = tagName;
            this.Description = description;
            this.FieldType = fieldType;
            this.DefaultValue = defaultValue;
            this.MetadataValues = metadataValues;
            this.DisplayValues = displayValues;
            this.ValueConfig = valueConfig;
            this.DisplayInReportType = displayInReportType;
            this.Action = action;
            this.EnableTextValidation = enableTextValidation;
            this.TextValidationRuleId = textValidationRuleId;
            this.OrginalValue = orginalValue;
            this.OrginalDisplayValue = orginalDisplayValue;
            this.IsNewMetadata = isNewMetadata;
            this.OriginalTargetUserDisplayName = originalTargetUserDisplayName;
            this.TenantId = tenantId;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets TagName
        /// </summary>
        [DataMember(Name="tagName", EmitDefaultValue=true)]
        public string TagName { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets FieldType
        /// </summary>
        [DataMember(Name="fieldType", EmitDefaultValue=false)]
        public int FieldType { get; set; }

        /// <summary>
        /// Gets or Sets DefaultValue
        /// </summary>
        [DataMember(Name="defaultValue", EmitDefaultValue=true)]
        public string DefaultValue { get; set; }

        /// <summary>
        /// Gets or Sets MetadataValues
        /// </summary>
        [DataMember(Name="metadataValues", EmitDefaultValue=true)]
        public string MetadataValues { get; set; }

        /// <summary>
        /// Gets or Sets DisplayValues
        /// </summary>
        [DataMember(Name="displayValues", EmitDefaultValue=true)]
        public string DisplayValues { get; set; }

        /// <summary>
        /// Gets or Sets ValueConfig
        /// </summary>
        [DataMember(Name="valueConfig", EmitDefaultValue=false)]
        public int ValueConfig { get; set; }

        /// <summary>
        /// Gets or Sets DisplayInReportType
        /// </summary>
        [DataMember(Name="displayInReportType", EmitDefaultValue=false)]
        public int DisplayInReportType { get; set; }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name="action", EmitDefaultValue=false)]
        public int Action { get; set; }

        /// <summary>
        /// Gets or Sets EnableTextValidation
        /// </summary>
        [DataMember(Name="enableTextValidation", EmitDefaultValue=false)]
        public bool EnableTextValidation { get; set; }

        /// <summary>
        /// Gets or Sets TextValidationRuleId
        /// </summary>
        [DataMember(Name="textValidationRuleId", EmitDefaultValue=false)]
        public Guid TextValidationRuleId { get; set; }

        /// <summary>
        /// Gets or Sets OrginalValue
        /// </summary>
        [DataMember(Name="orginalValue", EmitDefaultValue=true)]
        public string OrginalValue { get; set; }

        /// <summary>
        /// Gets or Sets OrginalDisplayValue
        /// </summary>
        [DataMember(Name="orginalDisplayValue", EmitDefaultValue=true)]
        public string OrginalDisplayValue { get; set; }

        /// <summary>
        /// Gets or Sets IsNewMetadata
        /// </summary>
        [DataMember(Name="isNewMetadata", EmitDefaultValue=false)]
        public bool IsNewMetadata { get; set; }

        /// <summary>
        /// Gets or Sets OriginalTargetUserDisplayName
        /// </summary>
        [DataMember(Name="originalTargetUserDisplayName", EmitDefaultValue=true)]
        public string OriginalTargetUserDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name="tenantId", EmitDefaultValue=true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RequestMetadataInfo {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  TagName: ").Append(TagName).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  FieldType: ").Append(FieldType).Append("\n");
            sb.Append("  DefaultValue: ").Append(DefaultValue).Append("\n");
            sb.Append("  MetadataValues: ").Append(MetadataValues).Append("\n");
            sb.Append("  DisplayValues: ").Append(DisplayValues).Append("\n");
            sb.Append("  ValueConfig: ").Append(ValueConfig).Append("\n");
            sb.Append("  DisplayInReportType: ").Append(DisplayInReportType).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  EnableTextValidation: ").Append(EnableTextValidation).Append("\n");
            sb.Append("  TextValidationRuleId: ").Append(TextValidationRuleId).Append("\n");
            sb.Append("  OrginalValue: ").Append(OrginalValue).Append("\n");
            sb.Append("  OrginalDisplayValue: ").Append(OrginalDisplayValue).Append("\n");
            sb.Append("  IsNewMetadata: ").Append(IsNewMetadata).Append("\n");
            sb.Append("  OriginalTargetUserDisplayName: ").Append(OriginalTargetUserDisplayName).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RequestMetadataInfo);
        }

        /// <summary>
        /// Returns true if RequestMetadataInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of RequestMetadataInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RequestMetadataInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.TagName == input.TagName ||
                    (this.TagName != null &&
                    this.TagName.Equals(input.TagName))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.FieldType == input.FieldType ||
                    this.FieldType.Equals(input.FieldType)
                ) && 
                (
                    this.DefaultValue == input.DefaultValue ||
                    (this.DefaultValue != null &&
                    this.DefaultValue.Equals(input.DefaultValue))
                ) && 
                (
                    this.MetadataValues == input.MetadataValues ||
                    (this.MetadataValues != null &&
                    this.MetadataValues.Equals(input.MetadataValues))
                ) && 
                (
                    this.DisplayValues == input.DisplayValues ||
                    (this.DisplayValues != null &&
                    this.DisplayValues.Equals(input.DisplayValues))
                ) && 
                (
                    this.ValueConfig == input.ValueConfig ||
                    this.ValueConfig.Equals(input.ValueConfig)
                ) && 
                (
                    this.DisplayInReportType == input.DisplayInReportType ||
                    this.DisplayInReportType.Equals(input.DisplayInReportType)
                ) && 
                (
                    this.Action == input.Action ||
                    this.Action.Equals(input.Action)
                ) && 
                (
                    this.EnableTextValidation == input.EnableTextValidation ||
                    this.EnableTextValidation.Equals(input.EnableTextValidation)
                ) && 
                (
                    this.TextValidationRuleId == input.TextValidationRuleId ||
                    (this.TextValidationRuleId != null &&
                    this.TextValidationRuleId.Equals(input.TextValidationRuleId))
                ) && 
                (
                    this.OrginalValue == input.OrginalValue ||
                    (this.OrginalValue != null &&
                    this.OrginalValue.Equals(input.OrginalValue))
                ) && 
                (
                    this.OrginalDisplayValue == input.OrginalDisplayValue ||
                    (this.OrginalDisplayValue != null &&
                    this.OrginalDisplayValue.Equals(input.OrginalDisplayValue))
                ) && 
                (
                    this.IsNewMetadata == input.IsNewMetadata ||
                    this.IsNewMetadata.Equals(input.IsNewMetadata)
                ) && 
                (
                    this.OriginalTargetUserDisplayName == input.OriginalTargetUserDisplayName ||
                    (this.OriginalTargetUserDisplayName != null &&
                    this.OriginalTargetUserDisplayName.Equals(input.OriginalTargetUserDisplayName))
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.TagName != null)
                    hashCode = hashCode * 59 + this.TagName.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                hashCode = hashCode * 59 + this.FieldType.GetHashCode();
                if (this.DefaultValue != null)
                    hashCode = hashCode * 59 + this.DefaultValue.GetHashCode();
                if (this.MetadataValues != null)
                    hashCode = hashCode * 59 + this.MetadataValues.GetHashCode();
                if (this.DisplayValues != null)
                    hashCode = hashCode * 59 + this.DisplayValues.GetHashCode();
                hashCode = hashCode * 59 + this.ValueConfig.GetHashCode();
                hashCode = hashCode * 59 + this.DisplayInReportType.GetHashCode();
                hashCode = hashCode * 59 + this.Action.GetHashCode();
                hashCode = hashCode * 59 + this.EnableTextValidation.GetHashCode();
                if (this.TextValidationRuleId != null)
                    hashCode = hashCode * 59 + this.TextValidationRuleId.GetHashCode();
                if (this.OrginalValue != null)
                    hashCode = hashCode * 59 + this.OrginalValue.GetHashCode();
                if (this.OrginalDisplayValue != null)
                    hashCode = hashCode * 59 + this.OrginalDisplayValue.GetHashCode();
                hashCode = hashCode * 59 + this.IsNewMetadata.GetHashCode();
                if (this.OriginalTargetUserDisplayName != null)
                    hashCode = hashCode * 59 + this.OriginalTargetUserDisplayName.GetHashCode();
                if (this.TenantId != null)
                    hashCode = hashCode * 59 + this.TenantId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

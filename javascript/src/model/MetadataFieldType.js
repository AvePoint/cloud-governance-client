/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class MetadataFieldType.
* @enum {}
* @readonly
*/
export default class MetadataFieldType {
    
        /**
         * value: "None"
         * @const
         */
        "None" = "None";

    
        /**
         * value: "SingleLineText"
         * @const
         */
        "SingleLineText" = "SingleLineText";

    
        /**
         * value: "MultiLineText"
         * @const
         */
        "MultiLineText" = "MultiLineText";

    
        /**
         * value: "YesOrNo"
         * @const
         */
        "YesOrNo" = "YesOrNo";

    
        /**
         * value: "Choices"
         * @const
         */
        "Choices" = "Choices";

    
        /**
         * value: "PeoplePickerValue"
         * @const
         */
        "PeoplePickerValue" = "PeoplePickerValue";

    
        /**
         * value: "Terms"
         * @const
         */
        "Terms" = "Terms";

    
        /**
         * value: "Hyperlink"
         * @const
         */
        "Hyperlink" = "Hyperlink";

    
        /**
         * value: "UserProfileService"
         * @const
         */
        "UserProfileService" = "UserProfileService";

    
        /**
         * value: "AzureADProperty"
         * @const
         */
        "AzureADProperty" = "AzureADProperty";

    

    /**
    * Returns a <code>MetadataFieldType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/MetadataFieldType} The enum <code>MetadataFieldType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}


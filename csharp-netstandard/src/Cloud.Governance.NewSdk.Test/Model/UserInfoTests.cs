/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;
using Cloud.Governance.NewSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing UserInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UserInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UserInfo
        //private UserInfo instance;

        public UserInfoTests()
        {
            // TODO uncomment below to create an instance of UserInfo
            //instance = new UserInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserInfo
        /// </summary>
        [Fact]
        public void UserInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UserInfo
            //Assert.IsInstanceOfType<UserInfo> (instance, "variable 'instance' is a UserInfo");
        }


        /// <summary>
        /// Test the property 'IdentityName'
        /// </summary>
        [Fact]
        public void IdentityNameTest()
        {
            // TODO unit test for the property 'IdentityName'
        }
        /// <summary>
        /// Test the property 'UserDisplayName'
        /// </summary>
        [Fact]
        public void UserDisplayNameTest()
        {
            // TODO unit test for the property 'UserDisplayName'
        }
        /// <summary>
        /// Test the property 'DomainGroup'
        /// </summary>
        [Fact]
        public void DomainGroupTest()
        {
            // TODO unit test for the property 'DomainGroup'
        }
        /// <summary>
        /// Test the property 'Department'
        /// </summary>
        [Fact]
        public void DepartmentTest()
        {
            // TODO unit test for the property 'Department'
        }
        /// <summary>
        /// Test the property 'MobilePhone'
        /// </summary>
        [Fact]
        public void MobilePhoneTest()
        {
            // TODO unit test for the property 'MobilePhone'
        }
        /// <summary>
        /// Test the property 'Manager'
        /// </summary>
        [Fact]
        public void ManagerTest()
        {
            // TODO unit test for the property 'Manager'
        }
        /// <summary>
        /// Test the property 'Permission'
        /// </summary>
        [Fact]
        public void PermissionTest()
        {
            // TODO unit test for the property 'Permission'
        }
        /// <summary>
        /// Test the property 'IsDeleted'
        /// </summary>
        [Fact]
        public void IsDeletedTest()
        {
            // TODO unit test for the property 'IsDeleted'
        }
        /// <summary>
        /// Test the property 'SecurityToken'
        /// </summary>
        [Fact]
        public void SecurityTokenTest()
        {
            // TODO unit test for the property 'SecurityToken'
        }
        /// <summary>
        /// Test the property 'UserType'
        /// </summary>
        [Fact]
        public void UserTypeTest()
        {
            // TODO unit test for the property 'UserType'
        }
        /// <summary>
        /// Test the property 'LegalPerson'
        /// </summary>
        [Fact]
        public void LegalPersonTest()
        {
            // TODO unit test for the property 'LegalPerson'
        }
        /// <summary>
        /// Test the property 'AuthenticationType'
        /// </summary>
        [Fact]
        public void AuthenticationTypeTest()
        {
            // TODO unit test for the property 'AuthenticationType'
        }
        /// <summary>
        /// Test the property 'AdminCenterUrl'
        /// </summary>
        [Fact]
        public void AdminCenterUrlTest()
        {
            // TODO unit test for the property 'AdminCenterUrl'
        }
        /// <summary>
        /// Test the property 'InviteType'
        /// </summary>
        [Fact]
        public void InviteTypeTest()
        {
            // TODO unit test for the property 'InviteType'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'IsRegisteredAosGroup'
        /// </summary>
        [Fact]
        public void IsRegisteredAosGroupTest()
        {
            // TODO unit test for the property 'IsRegisteredAosGroup'
        }
        /// <summary>
        /// Test the property 'IsExternalUser'
        /// </summary>
        [Fact]
        public void IsExternalUserTest()
        {
            // TODO unit test for the property 'IsExternalUser'
        }
        /// <summary>
        /// Test the property 'IsAPIExceptional'
        /// </summary>
        [Fact]
        public void IsAPIExceptionalTest()
        {
            // TODO unit test for the property 'IsAPIExceptional'
        }
        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }
        /// <summary>
        /// Test the property 'ObjectId'
        /// </summary>
        [Fact]
        public void ObjectIdTest()
        {
            // TODO unit test for the property 'ObjectId'
        }
        /// <summary>
        /// Test the property 'Version'
        /// </summary>
        [Fact]
        public void VersionTest()
        {
            // TODO unit test for the property 'Version'
        }
        /// <summary>
        /// Test the property 'JobTitle'
        /// </summary>
        [Fact]
        public void JobTitleTest()
        {
            // TODO unit test for the property 'JobTitle'
        }
        /// <summary>
        /// Test the property 'UsageLocation'
        /// </summary>
        [Fact]
        public void UsageLocationTest()
        {
            // TODO unit test for the property 'UsageLocation'
        }
        /// <summary>
        /// Test the property 'PhysicalDeliveryOfficeName'
        /// </summary>
        [Fact]
        public void PhysicalDeliveryOfficeNameTest()
        {
            // TODO unit test for the property 'PhysicalDeliveryOfficeName'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'IsValid'
        /// </summary>
        [Fact]
        public void IsValidTest()
        {
            // TODO unit test for the property 'IsValid'
        }
        /// <summary>
        /// Test the property 'ExistInAOS'
        /// </summary>
        [Fact]
        public void ExistInAOSTest()
        {
            // TODO unit test for the property 'ExistInAOS'
        }

    }

}

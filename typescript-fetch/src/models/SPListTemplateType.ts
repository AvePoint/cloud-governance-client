// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * NoListTemplate=0, GenericList=100, DocumentLibrary=101, </br>Survey=102, Links=103, Announcements=104, </br>Contacts=105, Events=106, Tasks=107, </br>DiscussionBoard=108, PictureLibrary=109, DataSources=110, </br>WebTemplateCatalog=111, UserInformation=112, WebPartCatalog=113, </br>ListTemplateCatalog=114, XMLForm=115, MasterPageCatalog=116, </br>NoCodeWorkflows=117, WorkflowProcess=118, WebPageLibrary=119, </br>CustomGrid=120, SolutionCatalog=121, NoCodePublic=122, </br>ThemeCatalog=123, DesignCatalog=124, AppDataCatalog=125, </br>DataConnectionLibrary=130, WorkflowHistory=140, GanttTasks=150, </br>HelpLibrary=151, AccessRequest=160, TasksWithTimelineAndHierarchy=171, </br>MaintenanceLogs=175, Meetings=200, Agenda=201, </br>MeetingUser=202, Decision=204, MeetingObjective=207, </br>TextBox=210, ThingsToBring=211, HomePageLibrary=212, </br>Posts=301, Comments=302, Categories=303, </br>Facility=402, Whereabouts=403, CallTrack=404, </br>Circulation=405, Timecard=420, Holidays=421, </br>IMEDic=499, ExternalList=600, MySiteDocumentLibrary=700, </br>PagesLibrary=850, IssueTracking=1100, AdminTasks=1200, </br>HealthRules=1220, HealthReports=1221, DeveloperSiteDraftApps=1230, </br>InvalidType=-1
 * @export
 * @enum {string}
 */
export enum SPListTemplateType {
    AccessRequest = 'AccessRequest',
    AdminTasks = 'AdminTasks',
    Agenda = 'Agenda',
    Announcements = 'Announcements',
    AppDataCatalog = 'AppDataCatalog',
    CallTrack = 'CallTrack',
    Categories = 'Categories',
    Circulation = 'Circulation',
    Comments = 'Comments',
    Contacts = 'Contacts',
    CustomGrid = 'CustomGrid',
    DataConnectionLibrary = 'DataConnectionLibrary',
    DataSources = 'DataSources',
    Decision = 'Decision',
    DesignCatalog = 'DesignCatalog',
    DeveloperSiteDraftApps = 'DeveloperSiteDraftApps',
    DiscussionBoard = 'DiscussionBoard',
    DocumentLibrary = 'DocumentLibrary',
    Events = 'Events',
    ExternalList = 'ExternalList',
    Facility = 'Facility',
    GanttTasks = 'GanttTasks',
    GenericList = 'GenericList',
    HealthReports = 'HealthReports',
    HealthRules = 'HealthRules',
    HelpLibrary = 'HelpLibrary',
    Holidays = 'Holidays',
    HomePageLibrary = 'HomePageLibrary',
    IMEDic = 'IMEDic',
    InvalidType = 'InvalidType',
    IssueTracking = 'IssueTracking',
    Links = 'Links',
    ListTemplateCatalog = 'ListTemplateCatalog',
    MaintenanceLogs = 'MaintenanceLogs',
    MasterPageCatalog = 'MasterPageCatalog',
    MeetingObjective = 'MeetingObjective',
    Meetings = 'Meetings',
    MeetingUser = 'MeetingUser',
    MySiteDocumentLibrary = 'MySiteDocumentLibrary',
    NoCodePublic = 'NoCodePublic',
    NoCodeWorkflows = 'NoCodeWorkflows',
    NoListTemplate = 'NoListTemplate',
    PictureLibrary = 'PictureLibrary',
    Posts = 'Posts',
    SolutionCatalog = 'SolutionCatalog',
    Survey = 'Survey',
    Tasks = 'Tasks',
    TasksWithTimelineAndHierarchy = 'TasksWithTimelineAndHierarchy',
    TextBox = 'TextBox',
    ThemeCatalog = 'ThemeCatalog',
    ThingsToBring = 'ThingsToBring',
    Timecard = 'Timecard',
    UserInformation = 'UserInformation',
    WebPageLibrary = 'WebPageLibrary',
    WebPartCatalog = 'WebPartCatalog',
    WebTemplateCatalog = 'WebTemplateCatalog',
    Whereabouts = 'Whereabouts',
    WorkflowHistory = 'WorkflowHistory',
    WorkflowProcess = 'WorkflowProcess',
    XMLForm = 'XMLForm',
    PagesLibrary = 'PagesLibrary'
}

export function SPListTemplateTypeFromJSON(json: any): SPListTemplateType {
    return SPListTemplateTypeFromJSONTyped(json, false);
}

export function SPListTemplateTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SPListTemplateType {
    return json as SPListTemplateType;
}

export function SPListTemplateTypeToJSON(value?: SPListTemplateType): any {
    return value as any;
}


/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.NewSdk.Client.OpenAPIDateConverter;

namespace Cloud.Governance.NewSdk.Model
{
    /// <summary>
    /// ApplyPolicyInfo
    /// </summary>
    [DataContract]
    public partial class ApplyPolicyInfo :  IEquatable<ApplyPolicyInfo>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public ApplyPolicyStatus? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplyPolicyInfo" /> class.
        /// </summary>
        /// <param name="status">status.</param>
        /// <param name="lastChangeTime">lastChangeTime.</param>
        /// <param name="lifeCycleStartTime">lifeCycleStartTime.</param>
        public ApplyPolicyInfo(ApplyPolicyStatus status = default(ApplyPolicyStatus), DateTime lastChangeTime = default(DateTime), DateTime lifeCycleStartTime = default(DateTime))
        {
            this.Status = status;
            this.LastChangeTime = lastChangeTime;
            this.LifeCycleStartTime = lifeCycleStartTime;
        }
        
        /// <summary>
        /// Gets or Sets LastChangeTime
        /// </summary>
        [DataMember(Name="lastChangeTime", EmitDefaultValue=false)]
        public DateTime LastChangeTime { get; set; }

        /// <summary>
        /// Gets or Sets LifeCycleStartTime
        /// </summary>
        [DataMember(Name="lifeCycleStartTime", EmitDefaultValue=false)]
        public DateTime LifeCycleStartTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApplyPolicyInfo {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  LastChangeTime: ").Append(LastChangeTime).Append("\n");
            sb.Append("  LifeCycleStartTime: ").Append(LifeCycleStartTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplyPolicyInfo);
        }

        /// <summary>
        /// Returns true if ApplyPolicyInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplyPolicyInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplyPolicyInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.LastChangeTime == input.LastChangeTime ||
                    (this.LastChangeTime != null &&
                    this.LastChangeTime.Equals(input.LastChangeTime))
                ) && 
                (
                    this.LifeCycleStartTime == input.LifeCycleStartTime ||
                    (this.LifeCycleStartTime != null &&
                    this.LifeCycleStartTime.Equals(input.LifeCycleStartTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.LastChangeTime != null)
                    hashCode = hashCode * 59 + this.LastChangeTime.GetHashCode();
                if (this.LifeCycleStartTime != null)
                    hashCode = hashCode * 59 + this.LifeCycleStartTime.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

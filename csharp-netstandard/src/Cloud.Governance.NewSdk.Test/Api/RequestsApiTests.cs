/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Cloud.Governance.NewSdk.Client;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing RequestsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RequestsApiTests : IDisposable
    {
        private RequestsApi instance;

        public RequestsApiTests()
        {
            instance = new RequestsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RequestsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RequestsApi
            //Assert.IsType(typeof(RequestsApi), instance, "instance is a RequestsApi");
        }

        
        /// <summary>
        /// Test CancelRequest
        /// </summary>
        [Fact]
        public void CancelRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.CancelRequest(id);
            
        }
        
        /// <summary>
        /// Test GetArchiveGroupRequest
        /// </summary>
        [Fact]
        public void GetArchiveGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetArchiveGroupRequest(id);
            //Assert.IsType<ArchiveGroupRequest> (response, "response is ArchiveGroupRequest");
        }
        
        /// <summary>
        /// Test GetArchiveSiteRequest
        /// </summary>
        [Fact]
        public void GetArchiveSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetArchiveSiteRequest(id);
            //Assert.IsType<ArchiveSiteRequest> (response, "response is ArchiveSiteRequest");
        }
        
        /// <summary>
        /// Test GetArchiveWebRequest
        /// </summary>
        [Fact]
        public void GetArchiveWebRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetArchiveWebRequest(id);
            //Assert.IsType<ArchiveWebLifecycleRequest> (response, "response is ArchiveWebLifecycleRequest");
        }
        
        /// <summary>
        /// Test GetChagneGroupPolicyRequest
        /// </summary>
        [Fact]
        public void GetChagneGroupPolicyRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChagneGroupPolicyRequest(id);
            //Assert.IsType<ChangeGroupPolicyRequest> (response, "response is ChangeGroupPolicyRequest");
        }
        
        /// <summary>
        /// Test GetChangeGroupQuotaRequest
        /// </summary>
        [Fact]
        public void GetChangeGroupQuotaRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeGroupQuotaRequest(id);
            //Assert.IsType<ChangeGroupQuotaRequest> (response, "response is ChangeGroupQuotaRequest");
        }
        
        /// <summary>
        /// Test GetChangeGroupSettingRequest
        /// </summary>
        [Fact]
        public void GetChangeGroupSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeGroupSettingRequest(id);
            //Assert.IsType<ChangeGroupSettingRequest> (response, "response is ChangeGroupSettingRequest");
        }
        
        /// <summary>
        /// Test GetChangeListSettingRequest
        /// </summary>
        [Fact]
        public void GetChangeListSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeListSettingRequest(id);
            //Assert.IsType<ChangeListSettingRequest> (response, "response is ChangeListSettingRequest");
        }
        
        /// <summary>
        /// Test GetChangePermissionRequest
        /// </summary>
        [Fact]
        public void GetChangePermissionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangePermissionRequest(id);
            //Assert.IsType<ChangePermissionRequest> (response, "response is ChangePermissionRequest");
        }
        
        /// <summary>
        /// Test GetChangeSiteContactRequest
        /// </summary>
        [Fact]
        public void GetChangeSiteContactRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeSiteContactRequest(id);
            //Assert.IsType<ChangeSiteContactRequest> (response, "response is ChangeSiteContactRequest");
        }
        
        /// <summary>
        /// Test GetChangeSitePolicyRequest
        /// </summary>
        [Fact]
        public void GetChangeSitePolicyRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeSitePolicyRequest(id);
            //Assert.IsType<ChangeSitePolicyRequest> (response, "response is ChangeSitePolicyRequest");
        }
        
        /// <summary>
        /// Test GetChangeSiteQuotaRequest
        /// </summary>
        [Fact]
        public void GetChangeSiteQuotaRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeSiteQuotaRequest(id);
            //Assert.IsType<ChangeSiteQuotaRequest> (response, "response is ChangeSiteQuotaRequest");
        }
        
        /// <summary>
        /// Test GetChangeSiteSettingRequest
        /// </summary>
        [Fact]
        public void GetChangeSiteSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeSiteSettingRequest(id);
            //Assert.IsType<ChangeSiteSettingRequest> (response, "response is ChangeSiteSettingRequest");
        }
        
        /// <summary>
        /// Test GetChangeWebContactRequest
        /// </summary>
        [Fact]
        public void GetChangeWebContactRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeWebContactRequest(id);
            //Assert.IsType<ChangeWebContactRequest> (response, "response is ChangeWebContactRequest");
        }
        
        /// <summary>
        /// Test GetChangeWebSettingRequest
        /// </summary>
        [Fact]
        public void GetChangeWebSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetChangeWebSettingRequest(id);
            //Assert.IsType<ChangeWebSettingRequest> (response, "response is ChangeWebSettingRequest");
        }
        
        /// <summary>
        /// Test GetChangedPermissionItems
        /// </summary>
        [Fact]
        public void GetChangedPermissionItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string filter = null;
            //string orderby = null;
            //Object body = null;
            //var response = instance.GetChangedPermissionItems(id, filter, orderby, body);
            //Assert.IsType<PermissionChangedActionItemPageResult> (response, "response is PermissionChangedActionItemPageResult");
        }
        
        /// <summary>
        /// Test GetClonePermissionRequest
        /// </summary>
        [Fact]
        public void GetClonePermissionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetClonePermissionRequest(id);
            //Assert.IsType<ClonePermissionRequest> (response, "response is ClonePermissionRequest");
        }
        
        /// <summary>
        /// Test GetContentMoveRequest
        /// </summary>
        [Fact]
        public void GetContentMoveRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetContentMoveRequest(id);
            //Assert.IsType<ContentMoveRequest> (response, "response is ContentMoveRequest");
        }
        
        /// <summary>
        /// Test GetCreateGroupRequest
        /// </summary>
        [Fact]
        public void GetCreateGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetCreateGroupRequest(id);
            //Assert.IsType<CreateGroupRequest> (response, "response is CreateGroupRequest");
        }
        
        /// <summary>
        /// Test GetCreateListRequest
        /// </summary>
        [Fact]
        public void GetCreateListRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetCreateListRequest(id);
            //Assert.IsType<CreateListRequest> (response, "response is CreateListRequest");
        }
        
        /// <summary>
        /// Test GetCreateSiteRequest
        /// </summary>
        [Fact]
        public void GetCreateSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetCreateSiteRequest(id);
            //Assert.IsType<CreateSiteRequest> (response, "response is CreateSiteRequest");
        }
        
        /// <summary>
        /// Test GetCreateWebRequest
        /// </summary>
        [Fact]
        public void GetCreateWebRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetCreateWebRequest(id);
            //Assert.IsType<CreateWebRequest> (response, "response is CreateWebRequest");
        }
        
        /// <summary>
        /// Test GetCustomRequest
        /// </summary>
        [Fact]
        public void GetCustomRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetCustomRequest(id);
            //Assert.IsType<ApiRequest> (response, "response is ApiRequest");
        }
        
        /// <summary>
        /// Test GetDeleteGroupRequest
        /// </summary>
        [Fact]
        public void GetDeleteGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetDeleteGroupRequest(id);
            //Assert.IsType<DeleteGroupRequest> (response, "response is DeleteGroupRequest");
        }
        
        /// <summary>
        /// Test GetDeleteSiteRequest
        /// </summary>
        [Fact]
        public void GetDeleteSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetDeleteSiteRequest(id);
            //Assert.IsType<DeleteSiteRequest> (response, "response is DeleteSiteRequest");
        }
        
        /// <summary>
        /// Test GetDeleteWebRequest
        /// </summary>
        [Fact]
        public void GetDeleteWebRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetDeleteWebRequest(id);
            //Assert.IsType<DeleteWebLifecycleRequest> (response, "response is DeleteWebLifecycleRequest");
        }
        
        /// <summary>
        /// Test GetExtendGroupRequest
        /// </summary>
        [Fact]
        public void GetExtendGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetExtendGroupRequest(id);
            //Assert.IsType<ExtendGroupRequest> (response, "response is ExtendGroupRequest");
        }
        
        /// <summary>
        /// Test GetExtendSiteRequest
        /// </summary>
        [Fact]
        public void GetExtendSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetExtendSiteRequest(id);
            //Assert.IsType<ExtendSiteRequest> (response, "response is ExtendSiteRequest");
        }
        
        /// <summary>
        /// Test GetGrantPermissionRequest
        /// </summary>
        [Fact]
        public void GetGrantPermissionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetGrantPermissionRequest(id);
            //Assert.IsType<GrantPermissionRequest> (response, "response is GrantPermissionRequest");
        }
        
        /// <summary>
        /// Test GetInheritedSitesForChangePermission
        /// </summary>
        [Fact]
        public void GetInheritedSitesForChangePermissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetInheritedSitesForChangePermission(id);
            //Assert.IsType<List<SecuritySearchResult>> (response, "response is List<SecuritySearchResult>");
        }
        
        /// <summary>
        /// Test GetLockSiteReuqest
        /// </summary>
        [Fact]
        public void GetLockSiteReuqestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetLockSiteReuqest(id);
            //Assert.IsType<LockSiteRequest> (response, "response is LockSiteRequest");
        }
        
        /// <summary>
        /// Test GetManagePermissionRequest
        /// </summary>
        [Fact]
        public void GetManagePermissionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetManagePermissionRequest(id);
            //Assert.IsType<ManagePermissionRequest> (response, "response is ManagePermissionRequest");
        }
        
        /// <summary>
        /// Test GetMyRequestFilters
        /// </summary>
        [Fact]
        public void GetMyRequestFiltersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //string distinct = null;
            //int? top = null;
            //int? skip = null;
            //var response = instance.GetMyRequestFilters(filter, distinct, top, skip);
            //Assert.IsType<DistinctPageResult> (response, "response is DistinctPageResult");
        }
        
        /// <summary>
        /// Test GetMyRequests
        /// </summary>
        [Fact]
        public void GetMyRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //string orderby = null;
            //string search = null;
            //int? top = null;
            //int? skip = null;
            //var response = instance.GetMyRequests(filter, orderby, search, top, skip);
            //Assert.IsType<RequestListPageResult> (response, "response is RequestListPageResult");
        }
        
        /// <summary>
        /// Test GetRequestById
        /// </summary>
        [Fact]
        public void GetRequestByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetRequestById(id);
            //Assert.IsType<ApiRequest> (response, "response is ApiRequest");
        }
        
        /// <summary>
        /// Test GetRestoreGroupRequest
        /// </summary>
        [Fact]
        public void GetRestoreGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetRestoreGroupRequest(id);
            //Assert.IsType<RestoreGroupRequest> (response, "response is RestoreGroupRequest");
        }
        
        /// <summary>
        /// Test GetUnlockSiteRequest
        /// </summary>
        [Fact]
        public void GetUnlockSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetUnlockSiteRequest(id);
            //Assert.IsType<UnlockSiteRequest> (response, "response is UnlockSiteRequest");
        }
        
        /// <summary>
        /// Test SubmitArchiveGroupRequest
        /// </summary>
        [Fact]
        public void SubmitArchiveGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ArchiveGroupRequest archiveGroupRequest = null;
            //var response = instance.SubmitArchiveGroupRequest(archiveGroupRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitArchiveSiteRequest
        /// </summary>
        [Fact]
        public void SubmitArchiveSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ArchiveSiteRequest archiveSiteRequest = null;
            //var response = instance.SubmitArchiveSiteRequest(archiveSiteRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitArchiveWebRequest
        /// </summary>
        [Fact]
        public void SubmitArchiveWebRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ArchiveWebLifecycleRequest archiveWebLifecycleRequest = null;
            //var response = instance.SubmitArchiveWebRequest(archiveWebLifecycleRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeGroupPolicyRequest
        /// </summary>
        [Fact]
        public void SubmitChangeGroupPolicyRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeGroupPolicyRequest changeGroupPolicyRequest = null;
            //var response = instance.SubmitChangeGroupPolicyRequest(changeGroupPolicyRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeGroupQuotaRequest
        /// </summary>
        [Fact]
        public void SubmitChangeGroupQuotaRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeGroupQuotaRequest changeGroupQuotaRequest = null;
            //var response = instance.SubmitChangeGroupQuotaRequest(changeGroupQuotaRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeGroupSettingRequest
        /// </summary>
        [Fact]
        public void SubmitChangeGroupSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeGroupSettingRequest changeGroupSettingRequest = null;
            //var response = instance.SubmitChangeGroupSettingRequest(changeGroupSettingRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeListSettingRequest
        /// </summary>
        [Fact]
        public void SubmitChangeListSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeListSettingRequest changeListSettingRequest = null;
            //var response = instance.SubmitChangeListSettingRequest(changeListSettingRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangePermissionRequest
        /// </summary>
        [Fact]
        public void SubmitChangePermissionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangePermissionRequest changePermissionRequest = null;
            //var response = instance.SubmitChangePermissionRequest(changePermissionRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeSiteContactRequest
        /// </summary>
        [Fact]
        public void SubmitChangeSiteContactRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeSiteContactRequest changeSiteContactRequest = null;
            //var response = instance.SubmitChangeSiteContactRequest(changeSiteContactRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeSitePolicyRequest
        /// </summary>
        [Fact]
        public void SubmitChangeSitePolicyRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeSitePolicyRequest changeSitePolicyRequest = null;
            //var response = instance.SubmitChangeSitePolicyRequest(changeSitePolicyRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeSiteQuotaRequest
        /// </summary>
        [Fact]
        public void SubmitChangeSiteQuotaRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeSiteQuotaRequest changeSiteQuotaRequest = null;
            //var response = instance.SubmitChangeSiteQuotaRequest(changeSiteQuotaRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeSiteSettingRequest
        /// </summary>
        [Fact]
        public void SubmitChangeSiteSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeSiteSettingRequest changeSiteSettingRequest = null;
            //var response = instance.SubmitChangeSiteSettingRequest(changeSiteSettingRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeWebContactRequest
        /// </summary>
        [Fact]
        public void SubmitChangeWebContactRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeWebContactRequest changeWebContactRequest = null;
            //var response = instance.SubmitChangeWebContactRequest(changeWebContactRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitChangeWebSettingRequest
        /// </summary>
        [Fact]
        public void SubmitChangeWebSettingRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeWebSettingRequest changeWebSettingRequest = null;
            //var response = instance.SubmitChangeWebSettingRequest(changeWebSettingRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitClonePermissionRequest
        /// </summary>
        [Fact]
        public void SubmitClonePermissionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClonePermissionRequest clonePermissionRequest = null;
            //var response = instance.SubmitClonePermissionRequest(clonePermissionRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitContentMoveRequest
        /// </summary>
        [Fact]
        public void SubmitContentMoveRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentMoveRequest contentMoveRequest = null;
            //var response = instance.SubmitContentMoveRequest(contentMoveRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitCreateGroupRequest
        /// </summary>
        [Fact]
        public void SubmitCreateGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateGroupRequest createGroupRequest = null;
            //var response = instance.SubmitCreateGroupRequest(createGroupRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitCreateListRequest
        /// </summary>
        [Fact]
        public void SubmitCreateListRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateListRequest createListRequest = null;
            //var response = instance.SubmitCreateListRequest(createListRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitCreateSiteRequest
        /// </summary>
        [Fact]
        public void SubmitCreateSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSiteRequest createSiteRequest = null;
            //var response = instance.SubmitCreateSiteRequest(createSiteRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitCreateWebRequest
        /// </summary>
        [Fact]
        public void SubmitCreateWebRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateWebRequest createWebRequest = null;
            //var response = instance.SubmitCreateWebRequest(createWebRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitCustomRequest
        /// </summary>
        [Fact]
        public void SubmitCustomRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiRequest apiRequest = null;
            //var response = instance.SubmitCustomRequest(apiRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitDeleteGroupRequest
        /// </summary>
        [Fact]
        public void SubmitDeleteGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteGroupRequest deleteGroupRequest = null;
            //var response = instance.SubmitDeleteGroupRequest(deleteGroupRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitDeleteSiteRequest
        /// </summary>
        [Fact]
        public void SubmitDeleteSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteSiteRequest deleteSiteRequest = null;
            //var response = instance.SubmitDeleteSiteRequest(deleteSiteRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitDeleteWebRequest
        /// </summary>
        [Fact]
        public void SubmitDeleteWebRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteWebLifecycleRequest deleteWebLifecycleRequest = null;
            //var response = instance.SubmitDeleteWebRequest(deleteWebLifecycleRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitExtendGroupRequest
        /// </summary>
        [Fact]
        public void SubmitExtendGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExtendGroupRequest extendGroupRequest = null;
            //var response = instance.SubmitExtendGroupRequest(extendGroupRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitExtendSiteRequest
        /// </summary>
        [Fact]
        public void SubmitExtendSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExtendSiteRequest extendSiteRequest = null;
            //var response = instance.SubmitExtendSiteRequest(extendSiteRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitGrantPermissionRequest
        /// </summary>
        [Fact]
        public void SubmitGrantPermissionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GrantPermissionRequest grantPermissionRequest = null;
            //var response = instance.SubmitGrantPermissionRequest(grantPermissionRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitLockSiteRequest
        /// </summary>
        [Fact]
        public void SubmitLockSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LockSiteRequest lockSiteRequest = null;
            //var response = instance.SubmitLockSiteRequest(lockSiteRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitManagePermimssionRequest
        /// </summary>
        [Fact]
        public void SubmitManagePermimssionRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ManagePermissionRequest managePermissionRequest = null;
            //var response = instance.SubmitManagePermimssionRequest(managePermissionRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitRestoreGroupRequest
        /// </summary>
        [Fact]
        public void SubmitRestoreGroupRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RestoreGroupRequest restoreGroupRequest = null;
            //var response = instance.SubmitRestoreGroupRequest(restoreGroupRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
        /// <summary>
        /// Test SubmitUnlockSiteRequest
        /// </summary>
        [Fact]
        public void SubmitUnlockSiteRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UnlockSiteRequest unlockSiteRequest = null;
            //var response = instance.SubmitUnlockSiteRequest(unlockSiteRequest);
            //Assert.IsType<Guid> (response, "response is Guid");
        }
        
    }

}

/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// ApplicationSettings
    /// </summary>
    [DataContract]
    public partial class ApplicationSettings :  IEquatable<ApplicationSettings>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationSettings" /> class.
        /// </summary>
        /// <param name="localeId">localeId.</param>
        /// <param name="locale">locale.</param>
        /// <param name="timezoneId">timezoneId.</param>
        /// <param name="terminologies">terminologies.</param>
        public ApplicationSettings(int localeId = default(int), string locale = default(string), int timezoneId = default(int), List<Terminology> terminologies = default(List<Terminology>))
        {
            this.Locale = locale;
            this.Terminologies = terminologies;
            this.LocaleId = localeId;
            this.Locale = locale;
            this.TimezoneId = timezoneId;
            this.Terminologies = terminologies;
        }
        
        /// <summary>
        /// Gets or Sets LocaleId
        /// </summary>
        [DataMember(Name="localeId", EmitDefaultValue=false)]
        public int LocaleId { get; set; }

        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name="locale", EmitDefaultValue=true)]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or Sets TimezoneId
        /// </summary>
        [DataMember(Name="timezoneId", EmitDefaultValue=false)]
        public int TimezoneId { get; set; }

        /// <summary>
        /// Gets or Sets Terminologies
        /// </summary>
        [DataMember(Name="terminologies", EmitDefaultValue=true)]
        public List<Terminology> Terminologies { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApplicationSettings {\n");
            sb.Append("  LocaleId: ").Append(LocaleId).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  TimezoneId: ").Append(TimezoneId).Append("\n");
            sb.Append("  Terminologies: ").Append(Terminologies).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplicationSettings);
        }

        /// <summary>
        /// Returns true if ApplicationSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplicationSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplicationSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LocaleId == input.LocaleId ||
                    this.LocaleId.Equals(input.LocaleId)
                ) && 
                (
                    this.Locale == input.Locale ||
                    (this.Locale != null &&
                    this.Locale.Equals(input.Locale))
                ) && 
                (
                    this.TimezoneId == input.TimezoneId ||
                    this.TimezoneId.Equals(input.TimezoneId)
                ) && 
                (
                    this.Terminologies == input.Terminologies ||
                    this.Terminologies != null &&
                    input.Terminologies != null &&
                    this.Terminologies.SequenceEqual(input.Terminologies)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.LocaleId.GetHashCode();
                if (this.Locale != null)
                    hashCode = hashCode * 59 + this.Locale.GetHashCode();
                hashCode = hashCode * 59 + this.TimezoneId.GetHashCode();
                if (this.Terminologies != null)
                    hashCode = hashCode * 59 + this.Terminologies.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

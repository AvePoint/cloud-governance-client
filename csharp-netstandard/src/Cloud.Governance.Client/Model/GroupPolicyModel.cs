/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// GroupPolicyModel
    /// </summary>
    [DataContract]
    public partial class GroupPolicyModel :  IEquatable<GroupPolicyModel>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public CommonStatus? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GroupPolicyModel" /> class.
        /// </summary>
        /// <param name="isOverwriteLifecycleStartTime">isOverwriteLifecycleStartTime.</param>
        /// <param name="quotaSize">quotaSize.</param>
        /// <param name="sharingSettings">sharingSettings.</param>
        /// <param name="lifecycleSettings">lifecycleSettings.</param>
        /// <param name="inactivityThresholdSettings">inactivityThresholdSettings.</param>
        /// <param name="leaseThresholdSettings">leaseThresholdSettings.</param>
        /// <param name="quotaThresholdSettings">quotaThresholdSettings.</param>
        /// <param name="recertificationSettings">recertificationSettings.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="category">category.</param>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="status">status.</param>
        public GroupPolicyModel(bool isOverwriteLifecycleStartTime = default(bool), int quotaSize = default(int), GroupSharingSetting sharingSettings = default(GroupSharingSetting), GroupPolicyLifecycleSetting lifecycleSettings = default(GroupPolicyLifecycleSetting), GroupThresholdSetting inactivityThresholdSettings = default(GroupThresholdSetting), GroupThresholdSetting leaseThresholdSettings = default(GroupThresholdSetting), GroupQuotaThresholdSetting quotaThresholdSettings = default(GroupQuotaThresholdSetting), PolicyRecertificationSetting recertificationSettings = default(PolicyRecertificationSetting), Guid id = default(Guid), string name = default(string), string description = default(string), string category = default(string), Guid tenantId = default(Guid), CommonStatus status = default(CommonStatus))
        {
            this.IsOverwriteLifecycleStartTime = isOverwriteLifecycleStartTime;
            this.QuotaSize = quotaSize;
            this.SharingSettings = sharingSettings;
            this.LifecycleSettings = lifecycleSettings;
            this.InactivityThresholdSettings = inactivityThresholdSettings;
            this.LeaseThresholdSettings = leaseThresholdSettings;
            this.QuotaThresholdSettings = quotaThresholdSettings;
            this.RecertificationSettings = recertificationSettings;
            this.Id = id;
            this.Name = name;
            this.Description = description;
            this.Category = category;
            this.TenantId = tenantId;
            this.Status = status;
        }
        
        /// <summary>
        /// Gets or Sets IsOverwriteLifecycleStartTime
        /// </summary>
        [DataMember(Name="isOverwriteLifecycleStartTime", EmitDefaultValue=false)]
        public bool IsOverwriteLifecycleStartTime { get; set; }

        /// <summary>
        /// Gets or Sets QuotaSize
        /// </summary>
        [DataMember(Name="quotaSize", EmitDefaultValue=false)]
        public int QuotaSize { get; set; }

        /// <summary>
        /// Gets or Sets SharingSettings
        /// </summary>
        [DataMember(Name="sharingSettings", EmitDefaultValue=true)]
        public GroupSharingSetting SharingSettings { get; set; }

        /// <summary>
        /// Gets or Sets LifecycleSettings
        /// </summary>
        [DataMember(Name="lifecycleSettings", EmitDefaultValue=true)]
        public GroupPolicyLifecycleSetting LifecycleSettings { get; set; }

        /// <summary>
        /// Gets or Sets InactivityThresholdSettings
        /// </summary>
        [DataMember(Name="inactivityThresholdSettings", EmitDefaultValue=true)]
        public GroupThresholdSetting InactivityThresholdSettings { get; set; }

        /// <summary>
        /// Gets or Sets LeaseThresholdSettings
        /// </summary>
        [DataMember(Name="leaseThresholdSettings", EmitDefaultValue=true)]
        public GroupThresholdSetting LeaseThresholdSettings { get; set; }

        /// <summary>
        /// Gets or Sets QuotaThresholdSettings
        /// </summary>
        [DataMember(Name="quotaThresholdSettings", EmitDefaultValue=true)]
        public GroupQuotaThresholdSetting QuotaThresholdSettings { get; set; }

        /// <summary>
        /// Gets or Sets RecertificationSettings
        /// </summary>
        [DataMember(Name="recertificationSettings", EmitDefaultValue=true)]
        public PolicyRecertificationSetting RecertificationSettings { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Category
        /// </summary>
        [DataMember(Name="category", EmitDefaultValue=true)]
        public string Category { get; set; }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name="tenantId", EmitDefaultValue=false)]
        public Guid TenantId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GroupPolicyModel {\n");
            sb.Append("  IsOverwriteLifecycleStartTime: ").Append(IsOverwriteLifecycleStartTime).Append("\n");
            sb.Append("  QuotaSize: ").Append(QuotaSize).Append("\n");
            sb.Append("  SharingSettings: ").Append(SharingSettings).Append("\n");
            sb.Append("  LifecycleSettings: ").Append(LifecycleSettings).Append("\n");
            sb.Append("  InactivityThresholdSettings: ").Append(InactivityThresholdSettings).Append("\n");
            sb.Append("  LeaseThresholdSettings: ").Append(LeaseThresholdSettings).Append("\n");
            sb.Append("  QuotaThresholdSettings: ").Append(QuotaThresholdSettings).Append("\n");
            sb.Append("  RecertificationSettings: ").Append(RecertificationSettings).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GroupPolicyModel);
        }

        /// <summary>
        /// Returns true if GroupPolicyModel instances are equal
        /// </summary>
        /// <param name="input">Instance of GroupPolicyModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GroupPolicyModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IsOverwriteLifecycleStartTime == input.IsOverwriteLifecycleStartTime ||
                    this.IsOverwriteLifecycleStartTime.Equals(input.IsOverwriteLifecycleStartTime)
                ) && 
                (
                    this.QuotaSize == input.QuotaSize ||
                    this.QuotaSize.Equals(input.QuotaSize)
                ) && 
                (
                    this.SharingSettings == input.SharingSettings ||
                    (this.SharingSettings != null &&
                    this.SharingSettings.Equals(input.SharingSettings))
                ) && 
                (
                    this.LifecycleSettings == input.LifecycleSettings ||
                    (this.LifecycleSettings != null &&
                    this.LifecycleSettings.Equals(input.LifecycleSettings))
                ) && 
                (
                    this.InactivityThresholdSettings == input.InactivityThresholdSettings ||
                    (this.InactivityThresholdSettings != null &&
                    this.InactivityThresholdSettings.Equals(input.InactivityThresholdSettings))
                ) && 
                (
                    this.LeaseThresholdSettings == input.LeaseThresholdSettings ||
                    (this.LeaseThresholdSettings != null &&
                    this.LeaseThresholdSettings.Equals(input.LeaseThresholdSettings))
                ) && 
                (
                    this.QuotaThresholdSettings == input.QuotaThresholdSettings ||
                    (this.QuotaThresholdSettings != null &&
                    this.QuotaThresholdSettings.Equals(input.QuotaThresholdSettings))
                ) && 
                (
                    this.RecertificationSettings == input.RecertificationSettings ||
                    (this.RecertificationSettings != null &&
                    this.RecertificationSettings.Equals(input.RecertificationSettings))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Category == input.Category ||
                    (this.Category != null &&
                    this.Category.Equals(input.Category))
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.IsOverwriteLifecycleStartTime.GetHashCode();
                hashCode = hashCode * 59 + this.QuotaSize.GetHashCode();
                if (this.SharingSettings != null)
                    hashCode = hashCode * 59 + this.SharingSettings.GetHashCode();
                if (this.LifecycleSettings != null)
                    hashCode = hashCode * 59 + this.LifecycleSettings.GetHashCode();
                if (this.InactivityThresholdSettings != null)
                    hashCode = hashCode * 59 + this.InactivityThresholdSettings.GetHashCode();
                if (this.LeaseThresholdSettings != null)
                    hashCode = hashCode * 59 + this.LeaseThresholdSettings.GetHashCode();
                if (this.QuotaThresholdSettings != null)
                    hashCode = hashCode * 59 + this.QuotaThresholdSettings.GetHashCode();
                if (this.RecertificationSettings != null)
                    hashCode = hashCode * 59 + this.RecertificationSettings.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Category != null)
                    hashCode = hashCode * 59 + this.Category.GetHashCode();
                if (this.TenantId != null)
                    hashCode = hashCode * 59 + this.TenantId.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PolicyElectionSetting model module.
 * @module model/PolicyElectionSetting
 * @version 1.0
 */
class PolicyElectionSetting {
    /**
     * Constructs a new <code>PolicyElectionSetting</code>.
     * @alias module:model/PolicyElectionSetting
     */
    constructor() { 
        
        PolicyElectionSetting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PolicyElectionSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyElectionSetting} obj Optional instance to populate.
     * @return {module:model/PolicyElectionSetting} The populated <code>PolicyElectionSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyElectionSetting();

            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('excludeUsers')) {
                obj['excludeUsers'] = ApiClient.convertToType(data['excludeUsers'], 'String');
            }
            if (data.hasOwnProperty('isNotifyTaskEnabled')) {
                obj['isNotifyTaskEnabled'] = ApiClient.convertToType(data['isNotifyTaskEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('taskEmailTemplate')) {
                obj['taskEmailTemplate'] = ApiClient.convertToType(data['taskEmailTemplate'], 'String');
            }
            if (data.hasOwnProperty('isNotifyPrimaryContactEnabled')) {
                obj['isNotifyPrimaryContactEnabled'] = ApiClient.convertToType(data['isNotifyPrimaryContactEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('notifyPrimaryContactTemplate')) {
                obj['notifyPrimaryContactTemplate'] = ApiClient.convertToType(data['notifyPrimaryContactTemplate'], 'String');
            }
            if (data.hasOwnProperty('isNotifySecondaryContactEnabled')) {
                obj['isNotifySecondaryContactEnabled'] = ApiClient.convertToType(data['isNotifySecondaryContactEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('notifySecondaryContactTemplate')) {
                obj['notifySecondaryContactTemplate'] = ApiClient.convertToType(data['notifySecondaryContactTemplate'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('durationType')) {
                obj['durationType'] = ApiClient.convertToType(data['durationType'], 'Number');
            }
            if (data.hasOwnProperty('isReminderEnabled')) {
                obj['isReminderEnabled'] = ApiClient.convertToType(data['isReminderEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('reminderProfileId')) {
                obj['reminderProfileId'] = ApiClient.convertToType(data['reminderProfileId'], 'String');
            }
            if (data.hasOwnProperty('enableOnlyOtherContactElection')) {
                obj['enableOnlyOtherContactElection'] = ApiClient.convertToType(data['enableOnlyOtherContactElection'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} isEnabled
 */
PolicyElectionSetting.prototype['isEnabled'] = undefined;

/**
 * @member {String} excludeUsers
 */
PolicyElectionSetting.prototype['excludeUsers'] = undefined;

/**
 * @member {Boolean} isNotifyTaskEnabled
 */
PolicyElectionSetting.prototype['isNotifyTaskEnabled'] = undefined;

/**
 * @member {String} taskEmailTemplate
 */
PolicyElectionSetting.prototype['taskEmailTemplate'] = undefined;

/**
 * @member {Boolean} isNotifyPrimaryContactEnabled
 */
PolicyElectionSetting.prototype['isNotifyPrimaryContactEnabled'] = undefined;

/**
 * @member {String} notifyPrimaryContactTemplate
 */
PolicyElectionSetting.prototype['notifyPrimaryContactTemplate'] = undefined;

/**
 * @member {Boolean} isNotifySecondaryContactEnabled
 */
PolicyElectionSetting.prototype['isNotifySecondaryContactEnabled'] = undefined;

/**
 * @member {String} notifySecondaryContactTemplate
 */
PolicyElectionSetting.prototype['notifySecondaryContactTemplate'] = undefined;

/**
 * @member {Number} duration
 */
PolicyElectionSetting.prototype['duration'] = undefined;

/**
 * @member {Number} durationType
 */
PolicyElectionSetting.prototype['durationType'] = undefined;

/**
 * @member {Boolean} isReminderEnabled
 */
PolicyElectionSetting.prototype['isReminderEnabled'] = undefined;

/**
 * @member {String} reminderProfileId
 */
PolicyElectionSetting.prototype['reminderProfileId'] = undefined;

/**
 * @member {Boolean} enableOnlyOtherContactElection
 */
PolicyElectionSetting.prototype['enableOnlyOtherContactElection'] = undefined;






export default PolicyElectionSetting;


/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.NewSdk.Client.OpenAPIDateConverter;

namespace Cloud.Governance.NewSdk.Model
{
    /// <summary>
    /// SiteInfo
    /// </summary>
    [DataContract]
    public partial class SiteInfo :  IEquatable<SiteInfo>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public SiteStatus? Status { get; set; }
        /// <summary>
        /// Gets or Sets ClaimStatus
        /// </summary>
        [DataMember(Name="claimStatus", EmitDefaultValue=false)]
        public ClaimStatus? ClaimStatus { get; set; }
        /// <summary>
        /// Gets or Sets PhaseDisplay
        /// </summary>
        [DataMember(Name="phaseDisplay", EmitDefaultValue=false)]
        public AutoImportPhase? PhaseDisplay { get; set; }
        /// <summary>
        /// Gets or Sets ApplyPolicyStatus
        /// </summary>
        [DataMember(Name="applyPolicyStatus", EmitDefaultValue=false)]
        public ApplyPolicyStatus? ApplyPolicyStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SiteInfo" /> class.
        /// </summary>
        /// <param name="fullUrl">fullUrl.</param>
        /// <param name="id">id.</param>
        /// <param name="hubSiteId">hubSiteId.</param>
        /// <param name="isHubSite">isHubSite.</param>
        /// <param name="hubSiteTitle">hubSiteTitle.</param>
        /// <param name="webAppId">webAppId.</param>
        /// <param name="isOnlineSite">isOnlineSite.</param>
        /// <param name="primarySiteContact">primarySiteContact.</param>
        /// <param name="primarySiteContactIdentityName">primarySiteContactIdentityName.</param>
        /// <param name="primarySiteContactEmail">primarySiteContactEmail.</param>
        /// <param name="secondarySiteContact">secondarySiteContact.</param>
        /// <param name="secondarySiteContactIdentityName">secondarySiteContactIdentityName.</param>
        /// <param name="secondarySiteContactEmail">secondarySiteContactEmail.</param>
        /// <param name="siteOwner">siteOwner.</param>
        /// <param name="siteOwnerEmail">siteOwnerEmail.</param>
        /// <param name="createdTime">createdTime.</param>
        /// <param name="status">status.</param>
        /// <param name="secondaryAdmin">secondaryAdmin.</param>
        /// <param name="additionalAdmin">additionalAdmin.</param>
        /// <param name="additionalAdminEmail">additionalAdminEmail.</param>
        /// <param name="farmId">farmId.</param>
        /// <param name="modifiedTime">modifiedTime.</param>
        /// <param name="hostHeader">hostHeader.</param>
        /// <param name="rootWebId">rootWebId.</param>
        /// <param name="quotaTemplateName">quotaTemplateName.</param>
        /// <param name="size">size.</param>
        /// <param name="sizeValue">sizeValue.</param>
        /// <param name="managedPath">managedPath.</param>
        /// <param name="isDeleted">isDeleted.</param>
        /// <param name="requestId">requestId.</param>
        /// <param name="contentDBName">contentDBName.</param>
        /// <param name="policyId">policyId.</param>
        /// <param name="lifecycleActionLockId">lifecycleActionLockId.</param>
        /// <param name="autoLifecycleLockId">autoLifecycleLockId.</param>
        /// <param name="siteTemplate">siteTemplate.</param>
        /// <param name="siteTemplateTitle">siteTemplateTitle.</param>
        /// <param name="serverRelativeUrl">serverRelativeUrl.</param>
        /// <param name="timeLastChecked">timeLastChecked.</param>
        /// <param name="lastAccessedTime">lastAccessedTime.</param>
        /// <param name="noAccessThreshold">noAccessThreshold.</param>
        /// <param name="expiredThreshold">expiredThreshold.</param>
        /// <param name="properties">properties.</param>
        /// <param name="quotaSize">quotaSize.</param>
        /// <param name="recurrenceProperties">recurrenceProperties.</param>
        /// <param name="claimStatus">claimStatus.</param>
        /// <param name="lockProperties">lockProperties.</param>
        /// <param name="enableManualArchive">enableManualArchive.</param>
        /// <param name="phase">phase.</param>
        /// <param name="phaseTime">phaseTime.</param>
        /// <param name="autoImportProfileId">autoImportProfileId.</param>
        /// <param name="sharingCapabilities">sharingCapabilities.</param>
        /// <param name="accessThresholdExpirationDate">accessThresholdExpirationDate.</param>
        /// <param name="leasePeriodExpirationDate">leasePeriodExpirationDate.</param>
        /// <param name="permissionRecertificationStatus">permissionRecertificationStatus.</param>
        /// <param name="ownershipRecertificationStatus">ownershipRecertificationStatus.</param>
        /// <param name="metadataRecertificationStatus">metadataRecertificationStatus.</param>
        /// <param name="extensionProperties">extensionProperties.</param>
        /// <param name="phaseTimeDisplay">phaseTimeDisplay.</param>
        /// <param name="currentRenewers">currentRenewers.</param>
        /// <param name="autoImportProfileName">autoImportProfileName.</param>
        /// <param name="phaseDisplay">phaseDisplay.</param>
        /// <param name="title">title.</param>
        /// <param name="department">department.</param>
        /// <param name="description">description.</param>
        /// <param name="policyName">policyName.</param>
        /// <param name="maxDepth">maxDepth.</param>
        /// <param name="quotaSizeValue">quotaSizeValue.</param>
        /// <param name="applyPolicyStatus">applyPolicyStatus.</param>
        /// <param name="appliedDeploymentPlans">appliedDeploymentPlans.</param>
        /// <param name="location">location.</param>
        public SiteInfo(string fullUrl = default(string), Guid id = default(Guid), Guid? hubSiteId = default(Guid?), bool isHubSite = default(bool), string hubSiteTitle = default(string), Guid webAppId = default(Guid), bool isOnlineSite = default(bool), string primarySiteContact = default(string), string primarySiteContactIdentityName = default(string), string primarySiteContactEmail = default(string), string secondarySiteContact = default(string), string secondarySiteContactIdentityName = default(string), string secondarySiteContactEmail = default(string), string siteOwner = default(string), string siteOwnerEmail = default(string), DateTime createdTime = default(DateTime), SiteStatus status = default(SiteStatus), string secondaryAdmin = default(string), string additionalAdmin = default(string), string additionalAdminEmail = default(string), Guid farmId = default(Guid), DateTime modifiedTime = default(DateTime), string hostHeader = default(string), Guid rootWebId = default(Guid), string quotaTemplateName = default(string), long size = default(long), SizeValue sizeValue = default(SizeValue), string managedPath = default(string), int isDeleted = default(int), Guid requestId = default(Guid), string contentDBName = default(string), Guid policyId = default(Guid), Guid? lifecycleActionLockId = default(Guid?), Guid? autoLifecycleLockId = default(Guid?), string siteTemplate = default(string), string siteTemplateTitle = default(string), string serverRelativeUrl = default(string), DateTime? timeLastChecked = default(DateTime?), DateTime lastAccessedTime = default(DateTime), DateTime? noAccessThreshold = default(DateTime?), DateTime? expiredThreshold = default(DateTime?), SiteProperty properties = default(SiteProperty), double? quotaSize = default(double?), SiteRecertificationProperty recurrenceProperties = default(SiteRecertificationProperty), ClaimStatus claimStatus = default(ClaimStatus), LockSiteInfo lockProperties = default(LockSiteInfo), bool enableManualArchive = default(bool), int phase = default(int), DateTime? phaseTime = default(DateTime?), Guid? autoImportProfileId = default(Guid?), int? sharingCapabilities = default(int?), DateTime? accessThresholdExpirationDate = default(DateTime?), DateTime? leasePeriodExpirationDate = default(DateTime?), int permissionRecertificationStatus = default(int), int ownershipRecertificationStatus = default(int), int metadataRecertificationStatus = default(int), Dictionary<string, string> extensionProperties = default(Dictionary<string, string>), string phaseTimeDisplay = default(string), string currentRenewers = default(string), string autoImportProfileName = default(string), AutoImportPhase phaseDisplay = default(AutoImportPhase), string title = default(string), string department = default(string), string description = default(string), string policyName = default(string), int maxDepth = default(int), long quotaSizeValue = default(long), ApplyPolicyStatus applyPolicyStatus = default(ApplyPolicyStatus), string appliedDeploymentPlans = default(string), string location = default(string))
        {
            this.FullUrl = fullUrl;
            this.HubSiteId = hubSiteId;
            this.HubSiteTitle = hubSiteTitle;
            this.PrimarySiteContact = primarySiteContact;
            this.PrimarySiteContactIdentityName = primarySiteContactIdentityName;
            this.PrimarySiteContactEmail = primarySiteContactEmail;
            this.SecondarySiteContact = secondarySiteContact;
            this.SecondarySiteContactIdentityName = secondarySiteContactIdentityName;
            this.SecondarySiteContactEmail = secondarySiteContactEmail;
            this.SiteOwner = siteOwner;
            this.SiteOwnerEmail = siteOwnerEmail;
            this.SecondaryAdmin = secondaryAdmin;
            this.AdditionalAdmin = additionalAdmin;
            this.AdditionalAdminEmail = additionalAdminEmail;
            this.HostHeader = hostHeader;
            this.QuotaTemplateName = quotaTemplateName;
            this.ManagedPath = managedPath;
            this.ContentDBName = contentDBName;
            this.LifecycleActionLockId = lifecycleActionLockId;
            this.AutoLifecycleLockId = autoLifecycleLockId;
            this.SiteTemplate = siteTemplate;
            this.SiteTemplateTitle = siteTemplateTitle;
            this.ServerRelativeUrl = serverRelativeUrl;
            this.TimeLastChecked = timeLastChecked;
            this.NoAccessThreshold = noAccessThreshold;
            this.ExpiredThreshold = expiredThreshold;
            this.QuotaSize = quotaSize;
            this.PhaseTime = phaseTime;
            this.AutoImportProfileId = autoImportProfileId;
            this.SharingCapabilities = sharingCapabilities;
            this.AccessThresholdExpirationDate = accessThresholdExpirationDate;
            this.LeasePeriodExpirationDate = leasePeriodExpirationDate;
            this.ExtensionProperties = extensionProperties;
            this.PhaseTimeDisplay = phaseTimeDisplay;
            this.CurrentRenewers = currentRenewers;
            this.AutoImportProfileName = autoImportProfileName;
            this.Title = title;
            this.Department = department;
            this.Description = description;
            this.PolicyName = policyName;
            this.AppliedDeploymentPlans = appliedDeploymentPlans;
            this.Location = location;
            this.FullUrl = fullUrl;
            this.Id = id;
            this.HubSiteId = hubSiteId;
            this.IsHubSite = isHubSite;
            this.HubSiteTitle = hubSiteTitle;
            this.WebAppId = webAppId;
            this.IsOnlineSite = isOnlineSite;
            this.PrimarySiteContact = primarySiteContact;
            this.PrimarySiteContactIdentityName = primarySiteContactIdentityName;
            this.PrimarySiteContactEmail = primarySiteContactEmail;
            this.SecondarySiteContact = secondarySiteContact;
            this.SecondarySiteContactIdentityName = secondarySiteContactIdentityName;
            this.SecondarySiteContactEmail = secondarySiteContactEmail;
            this.SiteOwner = siteOwner;
            this.SiteOwnerEmail = siteOwnerEmail;
            this.CreatedTime = createdTime;
            this.Status = status;
            this.SecondaryAdmin = secondaryAdmin;
            this.AdditionalAdmin = additionalAdmin;
            this.AdditionalAdminEmail = additionalAdminEmail;
            this.FarmId = farmId;
            this.ModifiedTime = modifiedTime;
            this.HostHeader = hostHeader;
            this.RootWebId = rootWebId;
            this.QuotaTemplateName = quotaTemplateName;
            this.Size = size;
            this.SizeValue = sizeValue;
            this.ManagedPath = managedPath;
            this.IsDeleted = isDeleted;
            this.RequestId = requestId;
            this.ContentDBName = contentDBName;
            this.PolicyId = policyId;
            this.LifecycleActionLockId = lifecycleActionLockId;
            this.AutoLifecycleLockId = autoLifecycleLockId;
            this.SiteTemplate = siteTemplate;
            this.SiteTemplateTitle = siteTemplateTitle;
            this.ServerRelativeUrl = serverRelativeUrl;
            this.TimeLastChecked = timeLastChecked;
            this.LastAccessedTime = lastAccessedTime;
            this.NoAccessThreshold = noAccessThreshold;
            this.ExpiredThreshold = expiredThreshold;
            this.Properties = properties;
            this.QuotaSize = quotaSize;
            this.RecurrenceProperties = recurrenceProperties;
            this.ClaimStatus = claimStatus;
            this.LockProperties = lockProperties;
            this.EnableManualArchive = enableManualArchive;
            this.Phase = phase;
            this.PhaseTime = phaseTime;
            this.AutoImportProfileId = autoImportProfileId;
            this.SharingCapabilities = sharingCapabilities;
            this.AccessThresholdExpirationDate = accessThresholdExpirationDate;
            this.LeasePeriodExpirationDate = leasePeriodExpirationDate;
            this.PermissionRecertificationStatus = permissionRecertificationStatus;
            this.OwnershipRecertificationStatus = ownershipRecertificationStatus;
            this.MetadataRecertificationStatus = metadataRecertificationStatus;
            this.ExtensionProperties = extensionProperties;
            this.PhaseTimeDisplay = phaseTimeDisplay;
            this.CurrentRenewers = currentRenewers;
            this.AutoImportProfileName = autoImportProfileName;
            this.PhaseDisplay = phaseDisplay;
            this.Title = title;
            this.Department = department;
            this.Description = description;
            this.PolicyName = policyName;
            this.MaxDepth = maxDepth;
            this.QuotaSizeValue = quotaSizeValue;
            this.ApplyPolicyStatus = applyPolicyStatus;
            this.AppliedDeploymentPlans = appliedDeploymentPlans;
            this.Location = location;
        }
        
        /// <summary>
        /// Gets or Sets FullUrl
        /// </summary>
        [DataMember(Name="fullUrl", EmitDefaultValue=true)]
        public string FullUrl { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets HubSiteId
        /// </summary>
        [DataMember(Name="hubSiteId", EmitDefaultValue=true)]
        public Guid? HubSiteId { get; set; }

        /// <summary>
        /// Gets or Sets IsHubSite
        /// </summary>
        [DataMember(Name="isHubSite", EmitDefaultValue=false)]
        public bool IsHubSite { get; set; }

        /// <summary>
        /// Gets or Sets HubSiteTitle
        /// </summary>
        [DataMember(Name="hubSiteTitle", EmitDefaultValue=true)]
        public string HubSiteTitle { get; set; }

        /// <summary>
        /// Gets or Sets WebAppId
        /// </summary>
        [DataMember(Name="webAppId", EmitDefaultValue=false)]
        public Guid WebAppId { get; set; }

        /// <summary>
        /// Gets or Sets IsOnlineSite
        /// </summary>
        [DataMember(Name="isOnlineSite", EmitDefaultValue=false)]
        public bool IsOnlineSite { get; set; }

        /// <summary>
        /// Gets or Sets PrimarySiteContact
        /// </summary>
        [DataMember(Name="primarySiteContact", EmitDefaultValue=true)]
        public string PrimarySiteContact { get; set; }

        /// <summary>
        /// Gets or Sets PrimarySiteContactIdentityName
        /// </summary>
        [DataMember(Name="primarySiteContactIdentityName", EmitDefaultValue=true)]
        public string PrimarySiteContactIdentityName { get; set; }

        /// <summary>
        /// Gets or Sets PrimarySiteContactEmail
        /// </summary>
        [DataMember(Name="primarySiteContactEmail", EmitDefaultValue=true)]
        public string PrimarySiteContactEmail { get; set; }

        /// <summary>
        /// Gets or Sets SecondarySiteContact
        /// </summary>
        [DataMember(Name="secondarySiteContact", EmitDefaultValue=true)]
        public string SecondarySiteContact { get; set; }

        /// <summary>
        /// Gets or Sets SecondarySiteContactIdentityName
        /// </summary>
        [DataMember(Name="secondarySiteContactIdentityName", EmitDefaultValue=true)]
        public string SecondarySiteContactIdentityName { get; set; }

        /// <summary>
        /// Gets or Sets SecondarySiteContactEmail
        /// </summary>
        [DataMember(Name="secondarySiteContactEmail", EmitDefaultValue=true)]
        public string SecondarySiteContactEmail { get; set; }

        /// <summary>
        /// Gets or Sets SiteOwner
        /// </summary>
        [DataMember(Name="siteOwner", EmitDefaultValue=true)]
        public string SiteOwner { get; set; }

        /// <summary>
        /// Gets or Sets SiteOwnerEmail
        /// </summary>
        [DataMember(Name="siteOwnerEmail", EmitDefaultValue=true)]
        public string SiteOwnerEmail { get; set; }

        /// <summary>
        /// Gets or Sets CreatedTime
        /// </summary>
        [DataMember(Name="createdTime", EmitDefaultValue=false)]
        public DateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryAdmin
        /// </summary>
        [DataMember(Name="secondaryAdmin", EmitDefaultValue=true)]
        public string SecondaryAdmin { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAdmin
        /// </summary>
        [DataMember(Name="additionalAdmin", EmitDefaultValue=true)]
        public string AdditionalAdmin { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalAdminEmail
        /// </summary>
        [DataMember(Name="additionalAdminEmail", EmitDefaultValue=true)]
        public string AdditionalAdminEmail { get; set; }

        /// <summary>
        /// Gets or Sets FarmId
        /// </summary>
        [DataMember(Name="farmId", EmitDefaultValue=false)]
        public Guid FarmId { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedTime
        /// </summary>
        [DataMember(Name="modifiedTime", EmitDefaultValue=false)]
        public DateTime ModifiedTime { get; set; }

        /// <summary>
        /// Gets or Sets HostHeader
        /// </summary>
        [DataMember(Name="hostHeader", EmitDefaultValue=true)]
        public string HostHeader { get; set; }

        /// <summary>
        /// Gets or Sets RootWebId
        /// </summary>
        [DataMember(Name="rootWebId", EmitDefaultValue=false)]
        public Guid RootWebId { get; set; }

        /// <summary>
        /// Gets or Sets QuotaTemplateName
        /// </summary>
        [DataMember(Name="quotaTemplateName", EmitDefaultValue=true)]
        public string QuotaTemplateName { get; set; }

        /// <summary>
        /// Gets or Sets Size
        /// </summary>
        [DataMember(Name="size", EmitDefaultValue=false)]
        public long Size { get; set; }

        /// <summary>
        /// Gets or Sets SizeValue
        /// </summary>
        [DataMember(Name="sizeValue", EmitDefaultValue=false)]
        public SizeValue SizeValue { get; set; }

        /// <summary>
        /// Gets or Sets ManagedPath
        /// </summary>
        [DataMember(Name="managedPath", EmitDefaultValue=true)]
        public string ManagedPath { get; set; }

        /// <summary>
        /// Gets or Sets IsDeleted
        /// </summary>
        [DataMember(Name="isDeleted", EmitDefaultValue=false)]
        public int IsDeleted { get; set; }

        /// <summary>
        /// Gets or Sets RequestId
        /// </summary>
        [DataMember(Name="requestId", EmitDefaultValue=false)]
        public Guid RequestId { get; set; }

        /// <summary>
        /// Gets or Sets ContentDBName
        /// </summary>
        [DataMember(Name="contentDBName", EmitDefaultValue=true)]
        public string ContentDBName { get; set; }

        /// <summary>
        /// Gets or Sets PolicyId
        /// </summary>
        [DataMember(Name="policyId", EmitDefaultValue=false)]
        public Guid PolicyId { get; set; }

        /// <summary>
        /// Gets or Sets LifecycleActionLockId
        /// </summary>
        [DataMember(Name="lifecycleActionLockId", EmitDefaultValue=true)]
        public Guid? LifecycleActionLockId { get; set; }

        /// <summary>
        /// Gets or Sets AutoLifecycleLockId
        /// </summary>
        [DataMember(Name="autoLifecycleLockId", EmitDefaultValue=true)]
        public Guid? AutoLifecycleLockId { get; set; }

        /// <summary>
        /// Gets or Sets SiteTemplate
        /// </summary>
        [DataMember(Name="siteTemplate", EmitDefaultValue=true)]
        public string SiteTemplate { get; set; }

        /// <summary>
        /// Gets or Sets SiteTemplateTitle
        /// </summary>
        [DataMember(Name="siteTemplateTitle", EmitDefaultValue=true)]
        public string SiteTemplateTitle { get; set; }

        /// <summary>
        /// Gets or Sets ServerRelativeUrl
        /// </summary>
        [DataMember(Name="serverRelativeUrl", EmitDefaultValue=true)]
        public string ServerRelativeUrl { get; set; }

        /// <summary>
        /// Gets or Sets TimeLastChecked
        /// </summary>
        [DataMember(Name="timeLastChecked", EmitDefaultValue=true)]
        public DateTime? TimeLastChecked { get; set; }

        /// <summary>
        /// Gets or Sets LastAccessedTime
        /// </summary>
        [DataMember(Name="lastAccessedTime", EmitDefaultValue=false)]
        public DateTime LastAccessedTime { get; set; }

        /// <summary>
        /// Gets or Sets NoAccessThreshold
        /// </summary>
        [DataMember(Name="noAccessThreshold", EmitDefaultValue=true)]
        public DateTime? NoAccessThreshold { get; set; }

        /// <summary>
        /// Gets or Sets ExpiredThreshold
        /// </summary>
        [DataMember(Name="expiredThreshold", EmitDefaultValue=true)]
        public DateTime? ExpiredThreshold { get; set; }

        /// <summary>
        /// Gets or Sets Properties
        /// </summary>
        [DataMember(Name="properties", EmitDefaultValue=false)]
        public SiteProperty Properties { get; set; }

        /// <summary>
        /// Gets or Sets QuotaSize
        /// </summary>
        [DataMember(Name="quotaSize", EmitDefaultValue=true)]
        public double? QuotaSize { get; set; }

        /// <summary>
        /// Gets or Sets RecurrenceProperties
        /// </summary>
        [DataMember(Name="recurrenceProperties", EmitDefaultValue=false)]
        public SiteRecertificationProperty RecurrenceProperties { get; set; }

        /// <summary>
        /// Gets or Sets LockProperties
        /// </summary>
        [DataMember(Name="lockProperties", EmitDefaultValue=false)]
        public LockSiteInfo LockProperties { get; set; }

        /// <summary>
        /// Gets or Sets EnableManualArchive
        /// </summary>
        [DataMember(Name="enableManualArchive", EmitDefaultValue=false)]
        public bool EnableManualArchive { get; set; }

        /// <summary>
        /// Gets or Sets Phase
        /// </summary>
        [DataMember(Name="phase", EmitDefaultValue=false)]
        public int Phase { get; set; }

        /// <summary>
        /// Gets or Sets PhaseTime
        /// </summary>
        [DataMember(Name="phaseTime", EmitDefaultValue=true)]
        public DateTime? PhaseTime { get; set; }

        /// <summary>
        /// Gets or Sets AutoImportProfileId
        /// </summary>
        [DataMember(Name="autoImportProfileId", EmitDefaultValue=true)]
        public Guid? AutoImportProfileId { get; set; }

        /// <summary>
        /// Gets or Sets SharingCapabilities
        /// </summary>
        [DataMember(Name="sharingCapabilities", EmitDefaultValue=true)]
        public int? SharingCapabilities { get; set; }

        /// <summary>
        /// Gets or Sets AccessThresholdExpirationDate
        /// </summary>
        [DataMember(Name="accessThresholdExpirationDate", EmitDefaultValue=true)]
        public DateTime? AccessThresholdExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets LeasePeriodExpirationDate
        /// </summary>
        [DataMember(Name="leasePeriodExpirationDate", EmitDefaultValue=true)]
        public DateTime? LeasePeriodExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets PermissionRecertificationStatus
        /// </summary>
        [DataMember(Name="permissionRecertificationStatus", EmitDefaultValue=false)]
        public int PermissionRecertificationStatus { get; set; }

        /// <summary>
        /// Gets or Sets OwnershipRecertificationStatus
        /// </summary>
        [DataMember(Name="ownershipRecertificationStatus", EmitDefaultValue=false)]
        public int OwnershipRecertificationStatus { get; set; }

        /// <summary>
        /// Gets or Sets MetadataRecertificationStatus
        /// </summary>
        [DataMember(Name="metadataRecertificationStatus", EmitDefaultValue=false)]
        public int MetadataRecertificationStatus { get; set; }

        /// <summary>
        /// Gets or Sets SharingCapabilitiesDesc
        /// </summary>
        [DataMember(Name="sharingCapabilitiesDesc", EmitDefaultValue=true)]
        public string SharingCapabilitiesDesc { get; private set; }

        /// <summary>
        /// Gets or Sets ExtensionProperties
        /// </summary>
        [DataMember(Name="extensionProperties", EmitDefaultValue=true)]
        public Dictionary<string, string> ExtensionProperties { get; set; }

        /// <summary>
        /// Gets or Sets PhaseTimeDisplay
        /// </summary>
        [DataMember(Name="phaseTimeDisplay", EmitDefaultValue=true)]
        public string PhaseTimeDisplay { get; set; }

        /// <summary>
        /// Gets or Sets CurrentRenewers
        /// </summary>
        [DataMember(Name="currentRenewers", EmitDefaultValue=true)]
        public string CurrentRenewers { get; set; }

        /// <summary>
        /// Gets or Sets AutoImportProfileName
        /// </summary>
        [DataMember(Name="autoImportProfileName", EmitDefaultValue=true)]
        public string AutoImportProfileName { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name="department", EmitDefaultValue=true)]
        public string Department { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets PolicyName
        /// </summary>
        [DataMember(Name="policyName", EmitDefaultValue=true)]
        public string PolicyName { get; set; }

        /// <summary>
        /// Gets or Sets MaxDepth
        /// </summary>
        [DataMember(Name="maxDepth", EmitDefaultValue=false)]
        public int MaxDepth { get; set; }

        /// <summary>
        /// Gets or Sets QuotaSizeValue
        /// </summary>
        [DataMember(Name="quotaSizeValue", EmitDefaultValue=false)]
        public long QuotaSizeValue { get; set; }

        /// <summary>
        /// Gets or Sets AppliedDeploymentPlans
        /// </summary>
        [DataMember(Name="appliedDeploymentPlans", EmitDefaultValue=true)]
        public string AppliedDeploymentPlans { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name="location", EmitDefaultValue=true)]
        public string Location { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SiteInfo {\n");
            sb.Append("  FullUrl: ").Append(FullUrl).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  HubSiteId: ").Append(HubSiteId).Append("\n");
            sb.Append("  IsHubSite: ").Append(IsHubSite).Append("\n");
            sb.Append("  HubSiteTitle: ").Append(HubSiteTitle).Append("\n");
            sb.Append("  WebAppId: ").Append(WebAppId).Append("\n");
            sb.Append("  IsOnlineSite: ").Append(IsOnlineSite).Append("\n");
            sb.Append("  PrimarySiteContact: ").Append(PrimarySiteContact).Append("\n");
            sb.Append("  PrimarySiteContactIdentityName: ").Append(PrimarySiteContactIdentityName).Append("\n");
            sb.Append("  PrimarySiteContactEmail: ").Append(PrimarySiteContactEmail).Append("\n");
            sb.Append("  SecondarySiteContact: ").Append(SecondarySiteContact).Append("\n");
            sb.Append("  SecondarySiteContactIdentityName: ").Append(SecondarySiteContactIdentityName).Append("\n");
            sb.Append("  SecondarySiteContactEmail: ").Append(SecondarySiteContactEmail).Append("\n");
            sb.Append("  SiteOwner: ").Append(SiteOwner).Append("\n");
            sb.Append("  SiteOwnerEmail: ").Append(SiteOwnerEmail).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  SecondaryAdmin: ").Append(SecondaryAdmin).Append("\n");
            sb.Append("  AdditionalAdmin: ").Append(AdditionalAdmin).Append("\n");
            sb.Append("  AdditionalAdminEmail: ").Append(AdditionalAdminEmail).Append("\n");
            sb.Append("  FarmId: ").Append(FarmId).Append("\n");
            sb.Append("  ModifiedTime: ").Append(ModifiedTime).Append("\n");
            sb.Append("  HostHeader: ").Append(HostHeader).Append("\n");
            sb.Append("  RootWebId: ").Append(RootWebId).Append("\n");
            sb.Append("  QuotaTemplateName: ").Append(QuotaTemplateName).Append("\n");
            sb.Append("  Size: ").Append(Size).Append("\n");
            sb.Append("  SizeValue: ").Append(SizeValue).Append("\n");
            sb.Append("  ManagedPath: ").Append(ManagedPath).Append("\n");
            sb.Append("  IsDeleted: ").Append(IsDeleted).Append("\n");
            sb.Append("  RequestId: ").Append(RequestId).Append("\n");
            sb.Append("  ContentDBName: ").Append(ContentDBName).Append("\n");
            sb.Append("  PolicyId: ").Append(PolicyId).Append("\n");
            sb.Append("  LifecycleActionLockId: ").Append(LifecycleActionLockId).Append("\n");
            sb.Append("  AutoLifecycleLockId: ").Append(AutoLifecycleLockId).Append("\n");
            sb.Append("  SiteTemplate: ").Append(SiteTemplate).Append("\n");
            sb.Append("  SiteTemplateTitle: ").Append(SiteTemplateTitle).Append("\n");
            sb.Append("  ServerRelativeUrl: ").Append(ServerRelativeUrl).Append("\n");
            sb.Append("  TimeLastChecked: ").Append(TimeLastChecked).Append("\n");
            sb.Append("  LastAccessedTime: ").Append(LastAccessedTime).Append("\n");
            sb.Append("  NoAccessThreshold: ").Append(NoAccessThreshold).Append("\n");
            sb.Append("  ExpiredThreshold: ").Append(ExpiredThreshold).Append("\n");
            sb.Append("  Properties: ").Append(Properties).Append("\n");
            sb.Append("  QuotaSize: ").Append(QuotaSize).Append("\n");
            sb.Append("  RecurrenceProperties: ").Append(RecurrenceProperties).Append("\n");
            sb.Append("  ClaimStatus: ").Append(ClaimStatus).Append("\n");
            sb.Append("  LockProperties: ").Append(LockProperties).Append("\n");
            sb.Append("  EnableManualArchive: ").Append(EnableManualArchive).Append("\n");
            sb.Append("  Phase: ").Append(Phase).Append("\n");
            sb.Append("  PhaseTime: ").Append(PhaseTime).Append("\n");
            sb.Append("  AutoImportProfileId: ").Append(AutoImportProfileId).Append("\n");
            sb.Append("  SharingCapabilities: ").Append(SharingCapabilities).Append("\n");
            sb.Append("  AccessThresholdExpirationDate: ").Append(AccessThresholdExpirationDate).Append("\n");
            sb.Append("  LeasePeriodExpirationDate: ").Append(LeasePeriodExpirationDate).Append("\n");
            sb.Append("  PermissionRecertificationStatus: ").Append(PermissionRecertificationStatus).Append("\n");
            sb.Append("  OwnershipRecertificationStatus: ").Append(OwnershipRecertificationStatus).Append("\n");
            sb.Append("  MetadataRecertificationStatus: ").Append(MetadataRecertificationStatus).Append("\n");
            sb.Append("  SharingCapabilitiesDesc: ").Append(SharingCapabilitiesDesc).Append("\n");
            sb.Append("  ExtensionProperties: ").Append(ExtensionProperties).Append("\n");
            sb.Append("  PhaseTimeDisplay: ").Append(PhaseTimeDisplay).Append("\n");
            sb.Append("  CurrentRenewers: ").Append(CurrentRenewers).Append("\n");
            sb.Append("  AutoImportProfileName: ").Append(AutoImportProfileName).Append("\n");
            sb.Append("  PhaseDisplay: ").Append(PhaseDisplay).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  PolicyName: ").Append(PolicyName).Append("\n");
            sb.Append("  MaxDepth: ").Append(MaxDepth).Append("\n");
            sb.Append("  QuotaSizeValue: ").Append(QuotaSizeValue).Append("\n");
            sb.Append("  ApplyPolicyStatus: ").Append(ApplyPolicyStatus).Append("\n");
            sb.Append("  AppliedDeploymentPlans: ").Append(AppliedDeploymentPlans).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SiteInfo);
        }

        /// <summary>
        /// Returns true if SiteInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of SiteInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SiteInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FullUrl == input.FullUrl ||
                    (this.FullUrl != null &&
                    this.FullUrl.Equals(input.FullUrl))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.HubSiteId == input.HubSiteId ||
                    (this.HubSiteId != null &&
                    this.HubSiteId.Equals(input.HubSiteId))
                ) && 
                (
                    this.IsHubSite == input.IsHubSite ||
                    this.IsHubSite.Equals(input.IsHubSite)
                ) && 
                (
                    this.HubSiteTitle == input.HubSiteTitle ||
                    (this.HubSiteTitle != null &&
                    this.HubSiteTitle.Equals(input.HubSiteTitle))
                ) && 
                (
                    this.WebAppId == input.WebAppId ||
                    (this.WebAppId != null &&
                    this.WebAppId.Equals(input.WebAppId))
                ) && 
                (
                    this.IsOnlineSite == input.IsOnlineSite ||
                    this.IsOnlineSite.Equals(input.IsOnlineSite)
                ) && 
                (
                    this.PrimarySiteContact == input.PrimarySiteContact ||
                    (this.PrimarySiteContact != null &&
                    this.PrimarySiteContact.Equals(input.PrimarySiteContact))
                ) && 
                (
                    this.PrimarySiteContactIdentityName == input.PrimarySiteContactIdentityName ||
                    (this.PrimarySiteContactIdentityName != null &&
                    this.PrimarySiteContactIdentityName.Equals(input.PrimarySiteContactIdentityName))
                ) && 
                (
                    this.PrimarySiteContactEmail == input.PrimarySiteContactEmail ||
                    (this.PrimarySiteContactEmail != null &&
                    this.PrimarySiteContactEmail.Equals(input.PrimarySiteContactEmail))
                ) && 
                (
                    this.SecondarySiteContact == input.SecondarySiteContact ||
                    (this.SecondarySiteContact != null &&
                    this.SecondarySiteContact.Equals(input.SecondarySiteContact))
                ) && 
                (
                    this.SecondarySiteContactIdentityName == input.SecondarySiteContactIdentityName ||
                    (this.SecondarySiteContactIdentityName != null &&
                    this.SecondarySiteContactIdentityName.Equals(input.SecondarySiteContactIdentityName))
                ) && 
                (
                    this.SecondarySiteContactEmail == input.SecondarySiteContactEmail ||
                    (this.SecondarySiteContactEmail != null &&
                    this.SecondarySiteContactEmail.Equals(input.SecondarySiteContactEmail))
                ) && 
                (
                    this.SiteOwner == input.SiteOwner ||
                    (this.SiteOwner != null &&
                    this.SiteOwner.Equals(input.SiteOwner))
                ) && 
                (
                    this.SiteOwnerEmail == input.SiteOwnerEmail ||
                    (this.SiteOwnerEmail != null &&
                    this.SiteOwnerEmail.Equals(input.SiteOwnerEmail))
                ) && 
                (
                    this.CreatedTime == input.CreatedTime ||
                    (this.CreatedTime != null &&
                    this.CreatedTime.Equals(input.CreatedTime))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.SecondaryAdmin == input.SecondaryAdmin ||
                    (this.SecondaryAdmin != null &&
                    this.SecondaryAdmin.Equals(input.SecondaryAdmin))
                ) && 
                (
                    this.AdditionalAdmin == input.AdditionalAdmin ||
                    (this.AdditionalAdmin != null &&
                    this.AdditionalAdmin.Equals(input.AdditionalAdmin))
                ) && 
                (
                    this.AdditionalAdminEmail == input.AdditionalAdminEmail ||
                    (this.AdditionalAdminEmail != null &&
                    this.AdditionalAdminEmail.Equals(input.AdditionalAdminEmail))
                ) && 
                (
                    this.FarmId == input.FarmId ||
                    (this.FarmId != null &&
                    this.FarmId.Equals(input.FarmId))
                ) && 
                (
                    this.ModifiedTime == input.ModifiedTime ||
                    (this.ModifiedTime != null &&
                    this.ModifiedTime.Equals(input.ModifiedTime))
                ) && 
                (
                    this.HostHeader == input.HostHeader ||
                    (this.HostHeader != null &&
                    this.HostHeader.Equals(input.HostHeader))
                ) && 
                (
                    this.RootWebId == input.RootWebId ||
                    (this.RootWebId != null &&
                    this.RootWebId.Equals(input.RootWebId))
                ) && 
                (
                    this.QuotaTemplateName == input.QuotaTemplateName ||
                    (this.QuotaTemplateName != null &&
                    this.QuotaTemplateName.Equals(input.QuotaTemplateName))
                ) && 
                (
                    this.Size == input.Size ||
                    this.Size.Equals(input.Size)
                ) && 
                (
                    this.SizeValue == input.SizeValue ||
                    (this.SizeValue != null &&
                    this.SizeValue.Equals(input.SizeValue))
                ) && 
                (
                    this.ManagedPath == input.ManagedPath ||
                    (this.ManagedPath != null &&
                    this.ManagedPath.Equals(input.ManagedPath))
                ) && 
                (
                    this.IsDeleted == input.IsDeleted ||
                    this.IsDeleted.Equals(input.IsDeleted)
                ) && 
                (
                    this.RequestId == input.RequestId ||
                    (this.RequestId != null &&
                    this.RequestId.Equals(input.RequestId))
                ) && 
                (
                    this.ContentDBName == input.ContentDBName ||
                    (this.ContentDBName != null &&
                    this.ContentDBName.Equals(input.ContentDBName))
                ) && 
                (
                    this.PolicyId == input.PolicyId ||
                    (this.PolicyId != null &&
                    this.PolicyId.Equals(input.PolicyId))
                ) && 
                (
                    this.LifecycleActionLockId == input.LifecycleActionLockId ||
                    (this.LifecycleActionLockId != null &&
                    this.LifecycleActionLockId.Equals(input.LifecycleActionLockId))
                ) && 
                (
                    this.AutoLifecycleLockId == input.AutoLifecycleLockId ||
                    (this.AutoLifecycleLockId != null &&
                    this.AutoLifecycleLockId.Equals(input.AutoLifecycleLockId))
                ) && 
                (
                    this.SiteTemplate == input.SiteTemplate ||
                    (this.SiteTemplate != null &&
                    this.SiteTemplate.Equals(input.SiteTemplate))
                ) && 
                (
                    this.SiteTemplateTitle == input.SiteTemplateTitle ||
                    (this.SiteTemplateTitle != null &&
                    this.SiteTemplateTitle.Equals(input.SiteTemplateTitle))
                ) && 
                (
                    this.ServerRelativeUrl == input.ServerRelativeUrl ||
                    (this.ServerRelativeUrl != null &&
                    this.ServerRelativeUrl.Equals(input.ServerRelativeUrl))
                ) && 
                (
                    this.TimeLastChecked == input.TimeLastChecked ||
                    (this.TimeLastChecked != null &&
                    this.TimeLastChecked.Equals(input.TimeLastChecked))
                ) && 
                (
                    this.LastAccessedTime == input.LastAccessedTime ||
                    (this.LastAccessedTime != null &&
                    this.LastAccessedTime.Equals(input.LastAccessedTime))
                ) && 
                (
                    this.NoAccessThreshold == input.NoAccessThreshold ||
                    (this.NoAccessThreshold != null &&
                    this.NoAccessThreshold.Equals(input.NoAccessThreshold))
                ) && 
                (
                    this.ExpiredThreshold == input.ExpiredThreshold ||
                    (this.ExpiredThreshold != null &&
                    this.ExpiredThreshold.Equals(input.ExpiredThreshold))
                ) && 
                (
                    this.Properties == input.Properties ||
                    (this.Properties != null &&
                    this.Properties.Equals(input.Properties))
                ) && 
                (
                    this.QuotaSize == input.QuotaSize ||
                    (this.QuotaSize != null &&
                    this.QuotaSize.Equals(input.QuotaSize))
                ) && 
                (
                    this.RecurrenceProperties == input.RecurrenceProperties ||
                    (this.RecurrenceProperties != null &&
                    this.RecurrenceProperties.Equals(input.RecurrenceProperties))
                ) && 
                (
                    this.ClaimStatus == input.ClaimStatus ||
                    this.ClaimStatus.Equals(input.ClaimStatus)
                ) && 
                (
                    this.LockProperties == input.LockProperties ||
                    (this.LockProperties != null &&
                    this.LockProperties.Equals(input.LockProperties))
                ) && 
                (
                    this.EnableManualArchive == input.EnableManualArchive ||
                    this.EnableManualArchive.Equals(input.EnableManualArchive)
                ) && 
                (
                    this.Phase == input.Phase ||
                    this.Phase.Equals(input.Phase)
                ) && 
                (
                    this.PhaseTime == input.PhaseTime ||
                    (this.PhaseTime != null &&
                    this.PhaseTime.Equals(input.PhaseTime))
                ) && 
                (
                    this.AutoImportProfileId == input.AutoImportProfileId ||
                    (this.AutoImportProfileId != null &&
                    this.AutoImportProfileId.Equals(input.AutoImportProfileId))
                ) && 
                (
                    this.SharingCapabilities == input.SharingCapabilities ||
                    (this.SharingCapabilities != null &&
                    this.SharingCapabilities.Equals(input.SharingCapabilities))
                ) && 
                (
                    this.AccessThresholdExpirationDate == input.AccessThresholdExpirationDate ||
                    (this.AccessThresholdExpirationDate != null &&
                    this.AccessThresholdExpirationDate.Equals(input.AccessThresholdExpirationDate))
                ) && 
                (
                    this.LeasePeriodExpirationDate == input.LeasePeriodExpirationDate ||
                    (this.LeasePeriodExpirationDate != null &&
                    this.LeasePeriodExpirationDate.Equals(input.LeasePeriodExpirationDate))
                ) && 
                (
                    this.PermissionRecertificationStatus == input.PermissionRecertificationStatus ||
                    this.PermissionRecertificationStatus.Equals(input.PermissionRecertificationStatus)
                ) && 
                (
                    this.OwnershipRecertificationStatus == input.OwnershipRecertificationStatus ||
                    this.OwnershipRecertificationStatus.Equals(input.OwnershipRecertificationStatus)
                ) && 
                (
                    this.MetadataRecertificationStatus == input.MetadataRecertificationStatus ||
                    this.MetadataRecertificationStatus.Equals(input.MetadataRecertificationStatus)
                ) && 
                (
                    this.SharingCapabilitiesDesc == input.SharingCapabilitiesDesc ||
                    (this.SharingCapabilitiesDesc != null &&
                    this.SharingCapabilitiesDesc.Equals(input.SharingCapabilitiesDesc))
                ) && 
                (
                    this.ExtensionProperties == input.ExtensionProperties ||
                    this.ExtensionProperties != null &&
                    input.ExtensionProperties != null &&
                    this.ExtensionProperties.SequenceEqual(input.ExtensionProperties)
                ) && 
                (
                    this.PhaseTimeDisplay == input.PhaseTimeDisplay ||
                    (this.PhaseTimeDisplay != null &&
                    this.PhaseTimeDisplay.Equals(input.PhaseTimeDisplay))
                ) && 
                (
                    this.CurrentRenewers == input.CurrentRenewers ||
                    (this.CurrentRenewers != null &&
                    this.CurrentRenewers.Equals(input.CurrentRenewers))
                ) && 
                (
                    this.AutoImportProfileName == input.AutoImportProfileName ||
                    (this.AutoImportProfileName != null &&
                    this.AutoImportProfileName.Equals(input.AutoImportProfileName))
                ) && 
                (
                    this.PhaseDisplay == input.PhaseDisplay ||
                    this.PhaseDisplay.Equals(input.PhaseDisplay)
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Department == input.Department ||
                    (this.Department != null &&
                    this.Department.Equals(input.Department))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.PolicyName == input.PolicyName ||
                    (this.PolicyName != null &&
                    this.PolicyName.Equals(input.PolicyName))
                ) && 
                (
                    this.MaxDepth == input.MaxDepth ||
                    this.MaxDepth.Equals(input.MaxDepth)
                ) && 
                (
                    this.QuotaSizeValue == input.QuotaSizeValue ||
                    this.QuotaSizeValue.Equals(input.QuotaSizeValue)
                ) && 
                (
                    this.ApplyPolicyStatus == input.ApplyPolicyStatus ||
                    this.ApplyPolicyStatus.Equals(input.ApplyPolicyStatus)
                ) && 
                (
                    this.AppliedDeploymentPlans == input.AppliedDeploymentPlans ||
                    (this.AppliedDeploymentPlans != null &&
                    this.AppliedDeploymentPlans.Equals(input.AppliedDeploymentPlans))
                ) && 
                (
                    this.Location == input.Location ||
                    (this.Location != null &&
                    this.Location.Equals(input.Location))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FullUrl != null)
                    hashCode = hashCode * 59 + this.FullUrl.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.HubSiteId != null)
                    hashCode = hashCode * 59 + this.HubSiteId.GetHashCode();
                hashCode = hashCode * 59 + this.IsHubSite.GetHashCode();
                if (this.HubSiteTitle != null)
                    hashCode = hashCode * 59 + this.HubSiteTitle.GetHashCode();
                if (this.WebAppId != null)
                    hashCode = hashCode * 59 + this.WebAppId.GetHashCode();
                hashCode = hashCode * 59 + this.IsOnlineSite.GetHashCode();
                if (this.PrimarySiteContact != null)
                    hashCode = hashCode * 59 + this.PrimarySiteContact.GetHashCode();
                if (this.PrimarySiteContactIdentityName != null)
                    hashCode = hashCode * 59 + this.PrimarySiteContactIdentityName.GetHashCode();
                if (this.PrimarySiteContactEmail != null)
                    hashCode = hashCode * 59 + this.PrimarySiteContactEmail.GetHashCode();
                if (this.SecondarySiteContact != null)
                    hashCode = hashCode * 59 + this.SecondarySiteContact.GetHashCode();
                if (this.SecondarySiteContactIdentityName != null)
                    hashCode = hashCode * 59 + this.SecondarySiteContactIdentityName.GetHashCode();
                if (this.SecondarySiteContactEmail != null)
                    hashCode = hashCode * 59 + this.SecondarySiteContactEmail.GetHashCode();
                if (this.SiteOwner != null)
                    hashCode = hashCode * 59 + this.SiteOwner.GetHashCode();
                if (this.SiteOwnerEmail != null)
                    hashCode = hashCode * 59 + this.SiteOwnerEmail.GetHashCode();
                if (this.CreatedTime != null)
                    hashCode = hashCode * 59 + this.CreatedTime.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.SecondaryAdmin != null)
                    hashCode = hashCode * 59 + this.SecondaryAdmin.GetHashCode();
                if (this.AdditionalAdmin != null)
                    hashCode = hashCode * 59 + this.AdditionalAdmin.GetHashCode();
                if (this.AdditionalAdminEmail != null)
                    hashCode = hashCode * 59 + this.AdditionalAdminEmail.GetHashCode();
                if (this.FarmId != null)
                    hashCode = hashCode * 59 + this.FarmId.GetHashCode();
                if (this.ModifiedTime != null)
                    hashCode = hashCode * 59 + this.ModifiedTime.GetHashCode();
                if (this.HostHeader != null)
                    hashCode = hashCode * 59 + this.HostHeader.GetHashCode();
                if (this.RootWebId != null)
                    hashCode = hashCode * 59 + this.RootWebId.GetHashCode();
                if (this.QuotaTemplateName != null)
                    hashCode = hashCode * 59 + this.QuotaTemplateName.GetHashCode();
                hashCode = hashCode * 59 + this.Size.GetHashCode();
                if (this.SizeValue != null)
                    hashCode = hashCode * 59 + this.SizeValue.GetHashCode();
                if (this.ManagedPath != null)
                    hashCode = hashCode * 59 + this.ManagedPath.GetHashCode();
                hashCode = hashCode * 59 + this.IsDeleted.GetHashCode();
                if (this.RequestId != null)
                    hashCode = hashCode * 59 + this.RequestId.GetHashCode();
                if (this.ContentDBName != null)
                    hashCode = hashCode * 59 + this.ContentDBName.GetHashCode();
                if (this.PolicyId != null)
                    hashCode = hashCode * 59 + this.PolicyId.GetHashCode();
                if (this.LifecycleActionLockId != null)
                    hashCode = hashCode * 59 + this.LifecycleActionLockId.GetHashCode();
                if (this.AutoLifecycleLockId != null)
                    hashCode = hashCode * 59 + this.AutoLifecycleLockId.GetHashCode();
                if (this.SiteTemplate != null)
                    hashCode = hashCode * 59 + this.SiteTemplate.GetHashCode();
                if (this.SiteTemplateTitle != null)
                    hashCode = hashCode * 59 + this.SiteTemplateTitle.GetHashCode();
                if (this.ServerRelativeUrl != null)
                    hashCode = hashCode * 59 + this.ServerRelativeUrl.GetHashCode();
                if (this.TimeLastChecked != null)
                    hashCode = hashCode * 59 + this.TimeLastChecked.GetHashCode();
                if (this.LastAccessedTime != null)
                    hashCode = hashCode * 59 + this.LastAccessedTime.GetHashCode();
                if (this.NoAccessThreshold != null)
                    hashCode = hashCode * 59 + this.NoAccessThreshold.GetHashCode();
                if (this.ExpiredThreshold != null)
                    hashCode = hashCode * 59 + this.ExpiredThreshold.GetHashCode();
                if (this.Properties != null)
                    hashCode = hashCode * 59 + this.Properties.GetHashCode();
                if (this.QuotaSize != null)
                    hashCode = hashCode * 59 + this.QuotaSize.GetHashCode();
                if (this.RecurrenceProperties != null)
                    hashCode = hashCode * 59 + this.RecurrenceProperties.GetHashCode();
                hashCode = hashCode * 59 + this.ClaimStatus.GetHashCode();
                if (this.LockProperties != null)
                    hashCode = hashCode * 59 + this.LockProperties.GetHashCode();
                hashCode = hashCode * 59 + this.EnableManualArchive.GetHashCode();
                hashCode = hashCode * 59 + this.Phase.GetHashCode();
                if (this.PhaseTime != null)
                    hashCode = hashCode * 59 + this.PhaseTime.GetHashCode();
                if (this.AutoImportProfileId != null)
                    hashCode = hashCode * 59 + this.AutoImportProfileId.GetHashCode();
                if (this.SharingCapabilities != null)
                    hashCode = hashCode * 59 + this.SharingCapabilities.GetHashCode();
                if (this.AccessThresholdExpirationDate != null)
                    hashCode = hashCode * 59 + this.AccessThresholdExpirationDate.GetHashCode();
                if (this.LeasePeriodExpirationDate != null)
                    hashCode = hashCode * 59 + this.LeasePeriodExpirationDate.GetHashCode();
                hashCode = hashCode * 59 + this.PermissionRecertificationStatus.GetHashCode();
                hashCode = hashCode * 59 + this.OwnershipRecertificationStatus.GetHashCode();
                hashCode = hashCode * 59 + this.MetadataRecertificationStatus.GetHashCode();
                if (this.SharingCapabilitiesDesc != null)
                    hashCode = hashCode * 59 + this.SharingCapabilitiesDesc.GetHashCode();
                if (this.ExtensionProperties != null)
                    hashCode = hashCode * 59 + this.ExtensionProperties.GetHashCode();
                if (this.PhaseTimeDisplay != null)
                    hashCode = hashCode * 59 + this.PhaseTimeDisplay.GetHashCode();
                if (this.CurrentRenewers != null)
                    hashCode = hashCode * 59 + this.CurrentRenewers.GetHashCode();
                if (this.AutoImportProfileName != null)
                    hashCode = hashCode * 59 + this.AutoImportProfileName.GetHashCode();
                hashCode = hashCode * 59 + this.PhaseDisplay.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Department != null)
                    hashCode = hashCode * 59 + this.Department.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.PolicyName != null)
                    hashCode = hashCode * 59 + this.PolicyName.GetHashCode();
                hashCode = hashCode * 59 + this.MaxDepth.GetHashCode();
                hashCode = hashCode * 59 + this.QuotaSizeValue.GetHashCode();
                hashCode = hashCode * 59 + this.ApplyPolicyStatus.GetHashCode();
                if (this.AppliedDeploymentPlans != null)
                    hashCode = hashCode * 59 + this.AppliedDeploymentPlans.GetHashCode();
                if (this.Location != null)
                    hashCode = hashCode * 59 + this.Location.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// SitePolicyInfo
    /// </summary>
    [DataContract]
    public partial class SitePolicyInfo :  IEquatable<SitePolicyInfo>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public PolicyType? Type { get; set; }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public CommonStatus? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SitePolicyInfo" /> class.
        /// </summary>
        /// <param name="quotaSetting">quotaSetting.</param>
        /// <param name="sharingSetting">sharingSetting.</param>
        /// <param name="isDesignerEnabled">isDesignerEnabled.</param>
        /// <param name="siteMaxDepth">siteMaxDepth.</param>
        /// <param name="iconSetting">iconSetting.</param>
        /// <param name="daoSetting">daoSetting.</param>
        /// <param name="leasePeriodSetting">leasePeriodSetting.</param>
        /// <param name="inactivitySetting">inactivitySetting.</param>
        /// <param name="lifecycleSetting">lifecycleSetting.</param>
        /// <param name="recertificationSetting">recertificationSetting.</param>
        /// <param name="renewalSetting">renewalSetting.</param>
        /// <param name="electionSetting">electionSetting.</param>
        /// <param name="quotaThresholdSetting">quotaThresholdSetting.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="category">category.</param>
        /// <param name="detail">detail.</param>
        /// <param name="type">type.</param>
        /// <param name="farmId">farmId.</param>
        /// <param name="createdTime">createdTime.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="isDeleted">isDeleted.</param>
        /// <param name="modifiedTime">modifiedTime.</param>
        /// <param name="modifiedBy">modifiedBy.</param>
        /// <param name="status">status.</param>
        /// <param name="isReferenced">isReferenced.</param>
        public SitePolicyInfo(PolicyQuotaSetting quotaSetting = default(PolicyQuotaSetting), PolicySharingSetting sharingSetting = default(PolicySharingSetting), bool isDesignerEnabled = default(bool), int siteMaxDepth = default(int), PolicyIconSetting iconSetting = default(PolicyIconSetting), PolicyDaoSetting daoSetting = default(PolicyDaoSetting), PolicyExpirationSetting leasePeriodSetting = default(PolicyExpirationSetting), PolicyExpirationSetting inactivitySetting = default(PolicyExpirationSetting), PolicyLifecycleSetting lifecycleSetting = default(PolicyLifecycleSetting), PolicyRecertificationSetting recertificationSetting = default(PolicyRecertificationSetting), PolicyRecertificationSetting renewalSetting = default(PolicyRecertificationSetting), PolicyElectionSetting electionSetting = default(PolicyElectionSetting), PolicyQuotaThresholdSetting quotaThresholdSetting = default(PolicyQuotaThresholdSetting), Guid id = default(Guid), string name = default(string), string description = default(string), string category = default(string), string detail = default(string), PolicyType type = default(PolicyType), Guid farmId = default(Guid), DateTime createdTime = default(DateTime), string createdBy = default(string), bool isDeleted = default(bool), DateTime modifiedTime = default(DateTime), string modifiedBy = default(string), CommonStatus status = default(CommonStatus), bool isReferenced = default(bool))
        {
            this.QuotaSetting = quotaSetting;
            this.SharingSetting = sharingSetting;
            this.IconSetting = iconSetting;
            this.DaoSetting = daoSetting;
            this.LeasePeriodSetting = leasePeriodSetting;
            this.InactivitySetting = inactivitySetting;
            this.LifecycleSetting = lifecycleSetting;
            this.RecertificationSetting = recertificationSetting;
            this.RenewalSetting = renewalSetting;
            this.ElectionSetting = electionSetting;
            this.QuotaThresholdSetting = quotaThresholdSetting;
            this.Name = name;
            this.Description = description;
            this.Category = category;
            this.Detail = detail;
            this.CreatedBy = createdBy;
            this.ModifiedBy = modifiedBy;
            this.QuotaSetting = quotaSetting;
            this.SharingSetting = sharingSetting;
            this.IsDesignerEnabled = isDesignerEnabled;
            this.SiteMaxDepth = siteMaxDepth;
            this.IconSetting = iconSetting;
            this.DaoSetting = daoSetting;
            this.LeasePeriodSetting = leasePeriodSetting;
            this.InactivitySetting = inactivitySetting;
            this.LifecycleSetting = lifecycleSetting;
            this.RecertificationSetting = recertificationSetting;
            this.RenewalSetting = renewalSetting;
            this.ElectionSetting = electionSetting;
            this.QuotaThresholdSetting = quotaThresholdSetting;
            this.Id = id;
            this.Name = name;
            this.Description = description;
            this.Category = category;
            this.Detail = detail;
            this.Type = type;
            this.FarmId = farmId;
            this.CreatedTime = createdTime;
            this.CreatedBy = createdBy;
            this.IsDeleted = isDeleted;
            this.ModifiedTime = modifiedTime;
            this.ModifiedBy = modifiedBy;
            this.Status = status;
            this.IsReferenced = isReferenced;
        }
        
        /// <summary>
        /// Gets or Sets QuotaSetting
        /// </summary>
        [DataMember(Name="quotaSetting", EmitDefaultValue=true)]
        public PolicyQuotaSetting QuotaSetting { get; set; }

        /// <summary>
        /// Gets or Sets SharingSetting
        /// </summary>
        [DataMember(Name="sharingSetting", EmitDefaultValue=true)]
        public PolicySharingSetting SharingSetting { get; set; }

        /// <summary>
        /// Gets or Sets IsDesignerEnabled
        /// </summary>
        [DataMember(Name="isDesignerEnabled", EmitDefaultValue=false)]
        public bool IsDesignerEnabled { get; set; }

        /// <summary>
        /// Gets or Sets SiteMaxDepth
        /// </summary>
        [DataMember(Name="siteMaxDepth", EmitDefaultValue=false)]
        public int SiteMaxDepth { get; set; }

        /// <summary>
        /// Gets or Sets IconSetting
        /// </summary>
        [DataMember(Name="iconSetting", EmitDefaultValue=true)]
        public PolicyIconSetting IconSetting { get; set; }

        /// <summary>
        /// Gets or Sets DaoSetting
        /// </summary>
        [DataMember(Name="daoSetting", EmitDefaultValue=true)]
        public PolicyDaoSetting DaoSetting { get; set; }

        /// <summary>
        /// Gets or Sets LeasePeriodSetting
        /// </summary>
        [DataMember(Name="leasePeriodSetting", EmitDefaultValue=true)]
        public PolicyExpirationSetting LeasePeriodSetting { get; set; }

        /// <summary>
        /// Gets or Sets InactivitySetting
        /// </summary>
        [DataMember(Name="inactivitySetting", EmitDefaultValue=true)]
        public PolicyExpirationSetting InactivitySetting { get; set; }

        /// <summary>
        /// Gets or Sets LifecycleSetting
        /// </summary>
        [DataMember(Name="lifecycleSetting", EmitDefaultValue=true)]
        public PolicyLifecycleSetting LifecycleSetting { get; set; }

        /// <summary>
        /// Gets or Sets RecertificationSetting
        /// </summary>
        [DataMember(Name="recertificationSetting", EmitDefaultValue=true)]
        public PolicyRecertificationSetting RecertificationSetting { get; set; }

        /// <summary>
        /// Gets or Sets RenewalSetting
        /// </summary>
        [DataMember(Name="renewalSetting", EmitDefaultValue=true)]
        public PolicyRecertificationSetting RenewalSetting { get; set; }

        /// <summary>
        /// Gets or Sets ElectionSetting
        /// </summary>
        [DataMember(Name="electionSetting", EmitDefaultValue=true)]
        public PolicyElectionSetting ElectionSetting { get; set; }

        /// <summary>
        /// Gets or Sets QuotaThresholdSetting
        /// </summary>
        [DataMember(Name="quotaThresholdSetting", EmitDefaultValue=true)]
        public PolicyQuotaThresholdSetting QuotaThresholdSetting { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Category
        /// </summary>
        [DataMember(Name="category", EmitDefaultValue=true)]
        public string Category { get; set; }

        /// <summary>
        /// Gets or Sets Detail
        /// </summary>
        [DataMember(Name="detail", EmitDefaultValue=true)]
        public string Detail { get; set; }

        /// <summary>
        /// Gets or Sets FarmId
        /// </summary>
        [DataMember(Name="farmId", EmitDefaultValue=false)]
        public Guid FarmId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedTime
        /// </summary>
        [DataMember(Name="createdTime", EmitDefaultValue=false)]
        public DateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name="createdBy", EmitDefaultValue=true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets IsDeleted
        /// </summary>
        [DataMember(Name="isDeleted", EmitDefaultValue=false)]
        public bool IsDeleted { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedTime
        /// </summary>
        [DataMember(Name="modifiedTime", EmitDefaultValue=false)]
        public DateTime ModifiedTime { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedBy
        /// </summary>
        [DataMember(Name="modifiedBy", EmitDefaultValue=true)]
        public string ModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets IsReferenced
        /// </summary>
        [DataMember(Name="isReferenced", EmitDefaultValue=false)]
        public bool IsReferenced { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SitePolicyInfo {\n");
            sb.Append("  QuotaSetting: ").Append(QuotaSetting).Append("\n");
            sb.Append("  SharingSetting: ").Append(SharingSetting).Append("\n");
            sb.Append("  IsDesignerEnabled: ").Append(IsDesignerEnabled).Append("\n");
            sb.Append("  SiteMaxDepth: ").Append(SiteMaxDepth).Append("\n");
            sb.Append("  IconSetting: ").Append(IconSetting).Append("\n");
            sb.Append("  DaoSetting: ").Append(DaoSetting).Append("\n");
            sb.Append("  LeasePeriodSetting: ").Append(LeasePeriodSetting).Append("\n");
            sb.Append("  InactivitySetting: ").Append(InactivitySetting).Append("\n");
            sb.Append("  LifecycleSetting: ").Append(LifecycleSetting).Append("\n");
            sb.Append("  RecertificationSetting: ").Append(RecertificationSetting).Append("\n");
            sb.Append("  RenewalSetting: ").Append(RenewalSetting).Append("\n");
            sb.Append("  ElectionSetting: ").Append(ElectionSetting).Append("\n");
            sb.Append("  QuotaThresholdSetting: ").Append(QuotaThresholdSetting).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("  Detail: ").Append(Detail).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  FarmId: ").Append(FarmId).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  IsDeleted: ").Append(IsDeleted).Append("\n");
            sb.Append("  ModifiedTime: ").Append(ModifiedTime).Append("\n");
            sb.Append("  ModifiedBy: ").Append(ModifiedBy).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  IsReferenced: ").Append(IsReferenced).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SitePolicyInfo);
        }

        /// <summary>
        /// Returns true if SitePolicyInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of SitePolicyInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SitePolicyInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.QuotaSetting == input.QuotaSetting ||
                    (this.QuotaSetting != null &&
                    this.QuotaSetting.Equals(input.QuotaSetting))
                ) && 
                (
                    this.SharingSetting == input.SharingSetting ||
                    (this.SharingSetting != null &&
                    this.SharingSetting.Equals(input.SharingSetting))
                ) && 
                (
                    this.IsDesignerEnabled == input.IsDesignerEnabled ||
                    this.IsDesignerEnabled.Equals(input.IsDesignerEnabled)
                ) && 
                (
                    this.SiteMaxDepth == input.SiteMaxDepth ||
                    this.SiteMaxDepth.Equals(input.SiteMaxDepth)
                ) && 
                (
                    this.IconSetting == input.IconSetting ||
                    (this.IconSetting != null &&
                    this.IconSetting.Equals(input.IconSetting))
                ) && 
                (
                    this.DaoSetting == input.DaoSetting ||
                    (this.DaoSetting != null &&
                    this.DaoSetting.Equals(input.DaoSetting))
                ) && 
                (
                    this.LeasePeriodSetting == input.LeasePeriodSetting ||
                    (this.LeasePeriodSetting != null &&
                    this.LeasePeriodSetting.Equals(input.LeasePeriodSetting))
                ) && 
                (
                    this.InactivitySetting == input.InactivitySetting ||
                    (this.InactivitySetting != null &&
                    this.InactivitySetting.Equals(input.InactivitySetting))
                ) && 
                (
                    this.LifecycleSetting == input.LifecycleSetting ||
                    (this.LifecycleSetting != null &&
                    this.LifecycleSetting.Equals(input.LifecycleSetting))
                ) && 
                (
                    this.RecertificationSetting == input.RecertificationSetting ||
                    (this.RecertificationSetting != null &&
                    this.RecertificationSetting.Equals(input.RecertificationSetting))
                ) && 
                (
                    this.RenewalSetting == input.RenewalSetting ||
                    (this.RenewalSetting != null &&
                    this.RenewalSetting.Equals(input.RenewalSetting))
                ) && 
                (
                    this.ElectionSetting == input.ElectionSetting ||
                    (this.ElectionSetting != null &&
                    this.ElectionSetting.Equals(input.ElectionSetting))
                ) && 
                (
                    this.QuotaThresholdSetting == input.QuotaThresholdSetting ||
                    (this.QuotaThresholdSetting != null &&
                    this.QuotaThresholdSetting.Equals(input.QuotaThresholdSetting))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Category == input.Category ||
                    (this.Category != null &&
                    this.Category.Equals(input.Category))
                ) && 
                (
                    this.Detail == input.Detail ||
                    (this.Detail != null &&
                    this.Detail.Equals(input.Detail))
                ) && 
                (
                    this.Type == input.Type ||
                    this.Type.Equals(input.Type)
                ) && 
                (
                    this.FarmId == input.FarmId ||
                    (this.FarmId != null &&
                    this.FarmId.Equals(input.FarmId))
                ) && 
                (
                    this.CreatedTime == input.CreatedTime ||
                    (this.CreatedTime != null &&
                    this.CreatedTime.Equals(input.CreatedTime))
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.IsDeleted == input.IsDeleted ||
                    this.IsDeleted.Equals(input.IsDeleted)
                ) && 
                (
                    this.ModifiedTime == input.ModifiedTime ||
                    (this.ModifiedTime != null &&
                    this.ModifiedTime.Equals(input.ModifiedTime))
                ) && 
                (
                    this.ModifiedBy == input.ModifiedBy ||
                    (this.ModifiedBy != null &&
                    this.ModifiedBy.Equals(input.ModifiedBy))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.IsReferenced == input.IsReferenced ||
                    this.IsReferenced.Equals(input.IsReferenced)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.QuotaSetting != null)
                    hashCode = hashCode * 59 + this.QuotaSetting.GetHashCode();
                if (this.SharingSetting != null)
                    hashCode = hashCode * 59 + this.SharingSetting.GetHashCode();
                hashCode = hashCode * 59 + this.IsDesignerEnabled.GetHashCode();
                hashCode = hashCode * 59 + this.SiteMaxDepth.GetHashCode();
                if (this.IconSetting != null)
                    hashCode = hashCode * 59 + this.IconSetting.GetHashCode();
                if (this.DaoSetting != null)
                    hashCode = hashCode * 59 + this.DaoSetting.GetHashCode();
                if (this.LeasePeriodSetting != null)
                    hashCode = hashCode * 59 + this.LeasePeriodSetting.GetHashCode();
                if (this.InactivitySetting != null)
                    hashCode = hashCode * 59 + this.InactivitySetting.GetHashCode();
                if (this.LifecycleSetting != null)
                    hashCode = hashCode * 59 + this.LifecycleSetting.GetHashCode();
                if (this.RecertificationSetting != null)
                    hashCode = hashCode * 59 + this.RecertificationSetting.GetHashCode();
                if (this.RenewalSetting != null)
                    hashCode = hashCode * 59 + this.RenewalSetting.GetHashCode();
                if (this.ElectionSetting != null)
                    hashCode = hashCode * 59 + this.ElectionSetting.GetHashCode();
                if (this.QuotaThresholdSetting != null)
                    hashCode = hashCode * 59 + this.QuotaThresholdSetting.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Category != null)
                    hashCode = hashCode * 59 + this.Category.GetHashCode();
                if (this.Detail != null)
                    hashCode = hashCode * 59 + this.Detail.GetHashCode();
                hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.FarmId != null)
                    hashCode = hashCode * 59 + this.FarmId.GetHashCode();
                if (this.CreatedTime != null)
                    hashCode = hashCode * 59 + this.CreatedTime.GetHashCode();
                if (this.CreatedBy != null)
                    hashCode = hashCode * 59 + this.CreatedBy.GetHashCode();
                hashCode = hashCode * 59 + this.IsDeleted.GetHashCode();
                if (this.ModifiedTime != null)
                    hashCode = hashCode * 59 + this.ModifiedTime.GetHashCode();
                if (this.ModifiedBy != null)
                    hashCode = hashCode * 59 + this.ModifiedBy.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                hashCode = hashCode * 59 + this.IsReferenced.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiUser from './ApiUser';
import AssignBy from './AssignBy';
import CommonStatus from './CommonStatus';
import CustomActivityInfo from './CustomActivityInfo';
import CustomMetadata from './CustomMetadata';
import GroupRestrictionType from './GroupRestrictionType';
import ServiceType from './ServiceType';
import UserLevelRestrictionType from './UserLevelRestrictionType';

/**
 * The ChangeGroupSettingService model module.
 * @module model/ChangeGroupSettingService
 * @version 1.0
 */
class ChangeGroupSettingService {
    /**
     * Constructs a new <code>ChangeGroupSettingService</code>.
     * @alias module:model/ChangeGroupSettingService
     */
    constructor() { 
        
        ChangeGroupSettingService.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChangeGroupSettingService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangeGroupSettingService} obj Optional instance to populate.
     * @return {module:model/ChangeGroupSettingService} The populated <code>ChangeGroupSettingService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangeGroupSettingService();

            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('groupRestriction')) {
                obj['groupRestriction'] = GroupRestrictionType.constructFromObject(data['groupRestriction']);
            }
            if (data.hasOwnProperty('enableChangeName')) {
                obj['enableChangeName'] = ApiClient.convertToType(data['enableChangeName'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeDescription')) {
                obj['enableChangeDescription'] = ApiClient.convertToType(data['enableChangeDescription'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeMemberSubscription')) {
                obj['enableChangeMemberSubscription'] = ApiClient.convertToType(data['enableChangeMemberSubscription'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeOutsideSenders')) {
                obj['enableChangeOutsideSenders'] = ApiClient.convertToType(data['enableChangeOutsideSenders'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangePrimaryContact')) {
                obj['enableChangePrimaryContact'] = ApiClient.convertToType(data['enableChangePrimaryContact'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeSecondaryContact')) {
                obj['enableChangeSecondaryContact'] = ApiClient.convertToType(data['enableChangeSecondaryContact'], 'Boolean');
            }
            if (data.hasOwnProperty('enableAddOwners')) {
                obj['enableAddOwners'] = ApiClient.convertToType(data['enableAddOwners'], 'Boolean');
            }
            if (data.hasOwnProperty('addOwnerRestriction')) {
                obj['addOwnerRestriction'] = UserLevelRestrictionType.constructFromObject(data['addOwnerRestriction']);
            }
            if (data.hasOwnProperty('enableRemoveOwners')) {
                obj['enableRemoveOwners'] = ApiClient.convertToType(data['enableRemoveOwners'], 'Boolean');
            }
            if (data.hasOwnProperty('enableAddMembers')) {
                obj['enableAddMembers'] = ApiClient.convertToType(data['enableAddMembers'], 'Boolean');
            }
            if (data.hasOwnProperty('addMemberRestriction')) {
                obj['addMemberRestriction'] = UserLevelRestrictionType.constructFromObject(data['addMemberRestriction']);
            }
            if (data.hasOwnProperty('enableRemoveMembers')) {
                obj['enableRemoveMembers'] = ApiClient.convertToType(data['enableRemoveMembers'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeDynamicMembershipRules')) {
                obj['enableChangeDynamicMembershipRules'] = ApiClient.convertToType(data['enableChangeDynamicMembershipRules'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeTeamCollaboration')) {
                obj['enableChangeTeamCollaboration'] = ApiClient.convertToType(data['enableChangeTeamCollaboration'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeHubSite')) {
                obj['enableChangeHubSite'] = ApiClient.convertToType(data['enableChangeHubSite'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChangeClassification')) {
                obj['enableChangeClassification'] = ApiClient.convertToType(data['enableChangeClassification'], 'Boolean');
            }
            if (data.hasOwnProperty('classificationList')) {
                obj['classificationList'] = ApiClient.convertToType(data['classificationList'], ['String']);
            }
            if (data.hasOwnProperty('enableChangeMetadata')) {
                obj['enableChangeMetadata'] = ApiClient.convertToType(data['enableChangeMetadata'], 'Boolean');
            }
            if (data.hasOwnProperty('enableAddOrDeleteMetadata')) {
                obj['enableAddOrDeleteMetadata'] = ApiClient.convertToType(data['enableAddOrDeleteMetadata'], 'Boolean');
            }
            if (data.hasOwnProperty('metadataList')) {
                obj['metadataList'] = ApiClient.convertToType(data['metadataList'], [CustomMetadata]);
            }
            if (data.hasOwnProperty('departmentAssignBy')) {
                obj['departmentAssignBy'] = AssignBy.constructFromObject(data['departmentAssignBy']);
            }
            if (data.hasOwnProperty('metadatas')) {
                obj['metadatas'] = ApiClient.convertToType(data['metadatas'], [CustomMetadata]);
            }
            if (data.hasOwnProperty('hideRequestSummary')) {
                obj['hideRequestSummary'] = ApiClient.convertToType(data['hideRequestSummary'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ServiceType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('department')) {
                obj['department'] = ApiClient.convertToType(data['department'], 'String');
            }
            if (data.hasOwnProperty('loadDepartmentFromUps')) {
                obj['loadDepartmentFromUps'] = ApiClient.convertToType(data['loadDepartmentFromUps'], 'Boolean');
            }
            if (data.hasOwnProperty('departments')) {
                obj['departments'] = ApiClient.convertToType(data['departments'], ['String']);
            }
            if (data.hasOwnProperty('serviceContact')) {
                obj['serviceContact'] = ApiUser.constructFromObject(data['serviceContact']);
            }
            if (data.hasOwnProperty('serviceAdminContact')) {
                obj['serviceAdminContact'] = ApiUser.constructFromObject(data['serviceAdminContact']);
            }
            if (data.hasOwnProperty('approversContainManagerRole')) {
                obj['approversContainManagerRole'] = ApiClient.convertToType(data['approversContainManagerRole'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = CommonStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('showServiceInCatalog')) {
                obj['showServiceInCatalog'] = ApiClient.convertToType(data['showServiceInCatalog'], 'Boolean');
            }
            if (data.hasOwnProperty('customActivity')) {
                obj['customActivity'] = CustomActivityInfo.constructFromObject(data['customActivity']);
            }
            if (data.hasOwnProperty('approvalProcessId')) {
                obj['approvalProcessId'] = ApiClient.convertToType(data['approvalProcessId'], 'String');
            }
            if (data.hasOwnProperty('languageId')) {
                obj['languageId'] = ApiClient.convertToType(data['languageId'], 'Number');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} tenantId
 */
ChangeGroupSettingService.prototype['tenantId'] = undefined;

/**
 * @member {module:model/GroupRestrictionType} groupRestriction
 */
ChangeGroupSettingService.prototype['groupRestriction'] = undefined;

/**
 * @member {Boolean} enableChangeName
 */
ChangeGroupSettingService.prototype['enableChangeName'] = undefined;

/**
 * @member {Boolean} enableChangeDescription
 */
ChangeGroupSettingService.prototype['enableChangeDescription'] = undefined;

/**
 * @member {Boolean} enableChangeMemberSubscription
 */
ChangeGroupSettingService.prototype['enableChangeMemberSubscription'] = undefined;

/**
 * @member {Boolean} enableChangeOutsideSenders
 */
ChangeGroupSettingService.prototype['enableChangeOutsideSenders'] = undefined;

/**
 * @member {Boolean} enableChangePrimaryContact
 */
ChangeGroupSettingService.prototype['enableChangePrimaryContact'] = undefined;

/**
 * @member {Boolean} enableChangeSecondaryContact
 */
ChangeGroupSettingService.prototype['enableChangeSecondaryContact'] = undefined;

/**
 * @member {Boolean} enableAddOwners
 */
ChangeGroupSettingService.prototype['enableAddOwners'] = undefined;

/**
 * @member {module:model/UserLevelRestrictionType} addOwnerRestriction
 */
ChangeGroupSettingService.prototype['addOwnerRestriction'] = undefined;

/**
 * @member {Boolean} enableRemoveOwners
 */
ChangeGroupSettingService.prototype['enableRemoveOwners'] = undefined;

/**
 * @member {Boolean} enableAddMembers
 */
ChangeGroupSettingService.prototype['enableAddMembers'] = undefined;

/**
 * @member {module:model/UserLevelRestrictionType} addMemberRestriction
 */
ChangeGroupSettingService.prototype['addMemberRestriction'] = undefined;

/**
 * @member {Boolean} enableRemoveMembers
 */
ChangeGroupSettingService.prototype['enableRemoveMembers'] = undefined;

/**
 * @member {Boolean} enableChangeDynamicMembershipRules
 */
ChangeGroupSettingService.prototype['enableChangeDynamicMembershipRules'] = undefined;

/**
 * @member {Boolean} enableChangeTeamCollaboration
 */
ChangeGroupSettingService.prototype['enableChangeTeamCollaboration'] = undefined;

/**
 * @member {Boolean} enableChangeHubSite
 */
ChangeGroupSettingService.prototype['enableChangeHubSite'] = undefined;

/**
 * @member {Boolean} enableChangeClassification
 */
ChangeGroupSettingService.prototype['enableChangeClassification'] = undefined;

/**
 * @member {Array.<String>} classificationList
 */
ChangeGroupSettingService.prototype['classificationList'] = undefined;

/**
 * @member {Boolean} enableChangeMetadata
 */
ChangeGroupSettingService.prototype['enableChangeMetadata'] = undefined;

/**
 * @member {Boolean} enableAddOrDeleteMetadata
 */
ChangeGroupSettingService.prototype['enableAddOrDeleteMetadata'] = undefined;

/**
 * @member {Array.<module:model/CustomMetadata>} metadataList
 */
ChangeGroupSettingService.prototype['metadataList'] = undefined;

/**
 * @member {module:model/AssignBy} departmentAssignBy
 */
ChangeGroupSettingService.prototype['departmentAssignBy'] = undefined;

/**
 * @member {Array.<module:model/CustomMetadata>} metadatas
 */
ChangeGroupSettingService.prototype['metadatas'] = undefined;

/**
 * @member {Boolean} hideRequestSummary
 */
ChangeGroupSettingService.prototype['hideRequestSummary'] = undefined;

/**
 * @member {String} id
 */
ChangeGroupSettingService.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ChangeGroupSettingService.prototype['name'] = undefined;

/**
 * @member {String} description
 */
ChangeGroupSettingService.prototype['description'] = undefined;

/**
 * @member {module:model/ServiceType} type
 */
ChangeGroupSettingService.prototype['type'] = undefined;

/**
 * @member {String} department
 */
ChangeGroupSettingService.prototype['department'] = undefined;

/**
 * @member {Boolean} loadDepartmentFromUps
 */
ChangeGroupSettingService.prototype['loadDepartmentFromUps'] = undefined;

/**
 * @member {Array.<String>} departments
 */
ChangeGroupSettingService.prototype['departments'] = undefined;

/**
 * @member {module:model/ApiUser} serviceContact
 */
ChangeGroupSettingService.prototype['serviceContact'] = undefined;

/**
 * @member {module:model/ApiUser} serviceAdminContact
 */
ChangeGroupSettingService.prototype['serviceAdminContact'] = undefined;

/**
 * @member {Boolean} approversContainManagerRole
 */
ChangeGroupSettingService.prototype['approversContainManagerRole'] = undefined;

/**
 * @member {module:model/CommonStatus} status
 */
ChangeGroupSettingService.prototype['status'] = undefined;

/**
 * @member {Boolean} showServiceInCatalog
 */
ChangeGroupSettingService.prototype['showServiceInCatalog'] = undefined;

/**
 * @member {module:model/CustomActivityInfo} customActivity
 */
ChangeGroupSettingService.prototype['customActivity'] = undefined;

/**
 * @member {String} approvalProcessId
 */
ChangeGroupSettingService.prototype['approvalProcessId'] = undefined;

/**
 * @member {Number} languageId
 */
ChangeGroupSettingService.prototype['languageId'] = undefined;

/**
 * @member {String} categoryId
 */
ChangeGroupSettingService.prototype['categoryId'] = undefined;






export default ChangeGroupSettingService;


// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApiDurationType,
    ApiDurationTypeFromJSON,
    ApiDurationTypeFromJSONTyped,
    ApiDurationTypeToJSON,
    GroupLeasePeriodType,
    GroupLeasePeriodTypeFromJSON,
    GroupLeasePeriodTypeFromJSONTyped,
    GroupLeasePeriodTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface GroupLeasePeriodSettings
 */
export interface GroupLeasePeriodSettings {
    /**
     * 
     * @type {boolean}
     * @memberof GroupLeasePeriodSettings
     */
    isEnabled?: boolean;
    /**
     * 
     * @type {GroupLeasePeriodType}
     * @memberof GroupLeasePeriodSettings
     */
    leaseType?: GroupLeasePeriodType;
    /**
     * 
     * @type {ApiDurationType}
     * @memberof GroupLeasePeriodSettings
     */
    durationType?: ApiDurationType;
    /**
     * 
     * @type {number}
     * @memberof GroupLeasePeriodSettings
     */
    durationInterval?: number;
    /**
     * 
     * @type {Date}
     * @memberof GroupLeasePeriodSettings
     */
    leaseExpirationDate?: Date | null;
}

export function GroupLeasePeriodSettingsFromJSON(json: any): GroupLeasePeriodSettings {
    return GroupLeasePeriodSettingsFromJSONTyped(json, false);
}

export function GroupLeasePeriodSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupLeasePeriodSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isEnabled': !exists(json, 'isEnabled') ? undefined : json['isEnabled'],
        'leaseType': !exists(json, 'leaseType') ? undefined : GroupLeasePeriodTypeFromJSON(json['leaseType']),
        'durationType': !exists(json, 'durationType') ? undefined : ApiDurationTypeFromJSON(json['durationType']),
        'durationInterval': !exists(json, 'durationInterval') ? undefined : json['durationInterval'],
        'leaseExpirationDate': !exists(json, 'leaseExpirationDate') ? undefined : new Date(json['leaseExpirationDate']),
    };
}

export function GroupLeasePeriodSettingsToJSON(value?: GroupLeasePeriodSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isEnabled': value.isEnabled,
        'leaseType': GroupLeasePeriodTypeToJSON(value.leaseType),
        'durationType': ApiDurationTypeToJSON(value.durationType),
        'durationInterval': value.durationInterval,
        'leaseExpirationDate': value.leaseExpirationDate == null ? undefined : value.leaseExpirationDate.toISOString(),
    };
}



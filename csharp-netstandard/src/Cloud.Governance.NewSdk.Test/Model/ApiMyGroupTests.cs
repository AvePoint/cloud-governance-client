/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;
using Cloud.Governance.NewSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing ApiMyGroup
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ApiMyGroupTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ApiMyGroup
        //private ApiMyGroup instance;

        public ApiMyGroupTests()
        {
            // TODO uncomment below to create an instance of ApiMyGroup
            //instance = new ApiMyGroup();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ApiMyGroup
        /// </summary>
        [Fact]
        public void ApiMyGroupInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ApiMyGroup
            //Assert.IsInstanceOfType<ApiMyGroup> (instance, "variable 'instance' is a ApiMyGroup");
        }


        /// <summary>
        /// Test the property 'ObjectId'
        /// </summary>
        [Fact]
        public void ObjectIdTest()
        {
            // TODO unit test for the property 'ObjectId'
        }
        /// <summary>
        /// Test the property 'PolicyId'
        /// </summary>
        [Fact]
        public void PolicyIdTest()
        {
            // TODO unit test for the property 'PolicyId'
        }
        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }
        /// <summary>
        /// Test the property 'GroupName'
        /// </summary>
        [Fact]
        public void GroupNameTest()
        {
            // TODO unit test for the property 'GroupName'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'Language'
        /// </summary>
        [Fact]
        public void LanguageTest()
        {
            // TODO unit test for the property 'Language'
        }
        /// <summary>
        /// Test the property 'ApplyPolicyStatus'
        /// </summary>
        [Fact]
        public void ApplyPolicyStatusTest()
        {
            // TODO unit test for the property 'ApplyPolicyStatus'
        }
        /// <summary>
        /// Test the property 'EnableTeamCollaboration'
        /// </summary>
        [Fact]
        public void EnableTeamCollaborationTest()
        {
            // TODO unit test for the property 'EnableTeamCollaboration'
        }
        /// <summary>
        /// Test the property 'GroupType'
        /// </summary>
        [Fact]
        public void GroupTypeTest()
        {
            // TODO unit test for the property 'GroupType'
        }
        /// <summary>
        /// Test the property 'CreatedTime'
        /// </summary>
        [Fact]
        public void CreatedTimeTest()
        {
            // TODO unit test for the property 'CreatedTime'
        }
        /// <summary>
        /// Test the property 'Owners'
        /// </summary>
        [Fact]
        public void OwnersTest()
        {
            // TODO unit test for the property 'Owners'
        }
        /// <summary>
        /// Test the property 'PreferredDataLocation'
        /// </summary>
        [Fact]
        public void PreferredDataLocationTest()
        {
            // TODO unit test for the property 'PreferredDataLocation'
        }
        /// <summary>
        /// Test the property 'PreferredDataLocationName'
        /// </summary>
        [Fact]
        public void PreferredDataLocationNameTest()
        {
            // TODO unit test for the property 'PreferredDataLocationName'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Phase'
        /// </summary>
        [Fact]
        public void PhaseTest()
        {
            // TODO unit test for the property 'Phase'
        }
        /// <summary>
        /// Test the property 'PhaseStartTime'
        /// </summary>
        [Fact]
        public void PhaseStartTimeTest()
        {
            // TODO unit test for the property 'PhaseStartTime'
        }
        /// <summary>
        /// Test the property 'PhaseDescription'
        /// </summary>
        [Fact]
        public void PhaseDescriptionTest()
        {
            // TODO unit test for the property 'PhaseDescription'
        }
        /// <summary>
        /// Test the property 'AutoImportProfileId'
        /// </summary>
        [Fact]
        public void AutoImportProfileIdTest()
        {
            // TODO unit test for the property 'AutoImportProfileId'
        }
        /// <summary>
        /// Test the property 'AutoImportProfileName'
        /// </summary>
        [Fact]
        public void AutoImportProfileNameTest()
        {
            // TODO unit test for the property 'AutoImportProfileName'
        }
        /// <summary>
        /// Test the property 'PolicyName'
        /// </summary>
        [Fact]
        public void PolicyNameTest()
        {
            // TODO unit test for the property 'PolicyName'
        }
        /// <summary>
        /// Test the property 'PolicyDescription'
        /// </summary>
        [Fact]
        public void PolicyDescriptionTest()
        {
            // TODO unit test for the property 'PolicyDescription'
        }
        /// <summary>
        /// Test the property 'IsCurrentRenewer'
        /// </summary>
        [Fact]
        public void IsCurrentRenewerTest()
        {
            // TODO unit test for the property 'IsCurrentRenewer'
        }
        /// <summary>
        /// Test the property 'PhaseAssignees'
        /// </summary>
        [Fact]
        public void PhaseAssigneesTest()
        {
            // TODO unit test for the property 'PhaseAssignees'
        }
        /// <summary>
        /// Test the property 'Metadatas'
        /// </summary>
        [Fact]
        public void MetadatasTest()
        {
            // TODO unit test for the property 'Metadatas'
        }
        /// <summary>
        /// Test the property 'PrimaryContact'
        /// </summary>
        [Fact]
        public void PrimaryContactTest()
        {
            // TODO unit test for the property 'PrimaryContact'
        }
        /// <summary>
        /// Test the property 'SecondaryContact'
        /// </summary>
        [Fact]
        public void SecondaryContactTest()
        {
            // TODO unit test for the property 'SecondaryContact'
        }

    }

}

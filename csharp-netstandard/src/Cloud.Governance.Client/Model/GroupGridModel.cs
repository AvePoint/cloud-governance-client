/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// GroupGridModel
    /// </summary>
    [DataContract]
    public partial class GroupGridModel :  IEquatable<GroupGridModel>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets GroupSharing
        /// </summary>
        [DataMember(Name="groupSharing", EmitDefaultValue=false)]
        public GroupEnableSharingStatus? GroupSharing { get; set; }
        /// <summary>
        /// Gets or Sets TeamsSiteSharing
        /// </summary>
        [DataMember(Name="teamsSiteSharing", EmitDefaultValue=false)]
        public TeamSiteEnableSharingStatus? TeamsSiteSharing { get; set; }
        /// <summary>
        /// Gets or Sets PermissionRecertificationStatus
        /// </summary>
        [DataMember(Name="permissionRecertificationStatus", EmitDefaultValue=false)]
        public RecertificationStatus? PermissionRecertificationStatus { get; set; }
        /// <summary>
        /// Gets or Sets MembershipRecertificationStatus
        /// </summary>
        [DataMember(Name="membershipRecertificationStatus", EmitDefaultValue=false)]
        public RecertificationStatus? MembershipRecertificationStatus { get; set; }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public GroupStatus? Status { get; set; }
        /// <summary>
        /// Gets or Sets Phase
        /// </summary>
        [DataMember(Name="phase", EmitDefaultValue=false)]
        public AutoImportPhase? Phase { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GroupGridModel" /> class.
        /// </summary>
        /// <param name="groupId">groupId.</param>
        /// <param name="groupName">groupName.</param>
        /// <param name="groupSharing">groupSharing.</param>
        /// <param name="id">id.</param>
        /// <param name="objectId">objectId.</param>
        /// <param name="primaryContact">primaryContact.</param>
        /// <param name="primaryContactDisplayName">primaryContactDisplayName.</param>
        /// <param name="secondaryContact">secondaryContact.</param>
        /// <param name="secondaryContactDisplayName">secondaryContactDisplayName.</param>
        /// <param name="owners">owners.</param>
        /// <param name="ownersDisplayName">ownersDisplayName.</param>
        /// <param name="policyName">policyName.</param>
        /// <param name="policyId">policyId.</param>
        /// <param name="privacy">privacy.</param>
        /// <param name="subscribeMembers">subscribeMembers.</param>
        /// <param name="teamsSiteSharing">teamsSiteSharing.</param>
        /// <param name="outsideSenders">outsideSenders.</param>
        /// <param name="language">language.</param>
        /// <param name="siteUrl">siteUrl.</param>
        /// <param name="siteQuota">siteQuota.</param>
        /// <param name="siteUsage">siteUsage.</param>
        /// <param name="leaseExpirationTime">leaseExpirationTime.</param>
        /// <param name="createdTime">createdTime.</param>
        /// <param name="enableLeaseExtension">enableLeaseExtension.</param>
        /// <param name="enablePolicyChange">enablePolicyChange.</param>
        /// <param name="enableDeletion">enableDeletion.</param>
        /// <param name="enableSiteQuotaChange">enableSiteQuotaChange.</param>
        /// <param name="enableLeaseManagement">enableLeaseManagement.</param>
        /// <param name="enableInactivityThreshold">enableInactivityThreshold.</param>
        /// <param name="inactivityThresholdTime">inactivityThresholdTime.</param>
        /// <param name="classification">classification.</param>
        /// <param name="enableHiddenMembership">enableHiddenMembership.</param>
        /// <param name="permissionRecertificationStatus">permissionRecertificationStatus.</param>
        /// <param name="membershipRecertificationStatus">membershipRecertificationStatus.</param>
        /// <param name="status">status.</param>
        /// <param name="hub">hub.</param>
        /// <param name="geoLocation">geoLocation.</param>
        /// <param name="phase">phase.</param>
        /// <param name="metadata">metadata.</param>
        public GroupGridModel(string groupId = default(string), string groupName = default(string), GroupEnableSharingStatus groupSharing = default(GroupEnableSharingStatus), Guid id = default(Guid), string objectId = default(string), string primaryContact = default(string), string primaryContactDisplayName = default(string), string secondaryContact = default(string), string secondaryContactDisplayName = default(string), string owners = default(string), string ownersDisplayName = default(string), string policyName = default(string), Guid policyId = default(Guid), bool privacy = default(bool), bool subscribeMembers = default(bool), TeamSiteEnableSharingStatus teamsSiteSharing = default(TeamSiteEnableSharingStatus), bool outsideSenders = default(bool), string language = default(string), string siteUrl = default(string), string siteQuota = default(string), string siteUsage = default(string), DateTime? leaseExpirationTime = default(DateTime?), DateTime createdTime = default(DateTime), bool enableLeaseExtension = default(bool), bool enablePolicyChange = default(bool), bool enableDeletion = default(bool), bool enableSiteQuotaChange = default(bool), bool enableLeaseManagement = default(bool), bool enableInactivityThreshold = default(bool), DateTime? inactivityThresholdTime = default(DateTime?), string classification = default(string), bool enableHiddenMembership = default(bool), RecertificationStatus permissionRecertificationStatus = default(RecertificationStatus), RecertificationStatus membershipRecertificationStatus = default(RecertificationStatus), GroupStatus status = default(GroupStatus), string hub = default(string), string geoLocation = default(string), AutoImportPhase phase = default(AutoImportPhase), List<ReportMetadata> metadata = default(List<ReportMetadata>))
        {
            this.GroupId = groupId;
            this.GroupName = groupName;
            this.GroupSharing = groupSharing;
            this.Id = id;
            this.ObjectId = objectId;
            this.PrimaryContact = primaryContact;
            this.PrimaryContactDisplayName = primaryContactDisplayName;
            this.SecondaryContact = secondaryContact;
            this.SecondaryContactDisplayName = secondaryContactDisplayName;
            this.Owners = owners;
            this.OwnersDisplayName = ownersDisplayName;
            this.PolicyName = policyName;
            this.PolicyId = policyId;
            this.Privacy = privacy;
            this.SubscribeMembers = subscribeMembers;
            this.TeamsSiteSharing = teamsSiteSharing;
            this.OutsideSenders = outsideSenders;
            this.Language = language;
            this.SiteUrl = siteUrl;
            this.SiteQuota = siteQuota;
            this.SiteUsage = siteUsage;
            this.LeaseExpirationTime = leaseExpirationTime;
            this.CreatedTime = createdTime;
            this.EnableLeaseExtension = enableLeaseExtension;
            this.EnablePolicyChange = enablePolicyChange;
            this.EnableDeletion = enableDeletion;
            this.EnableSiteQuotaChange = enableSiteQuotaChange;
            this.EnableLeaseManagement = enableLeaseManagement;
            this.EnableInactivityThreshold = enableInactivityThreshold;
            this.InactivityThresholdTime = inactivityThresholdTime;
            this.Classification = classification;
            this.EnableHiddenMembership = enableHiddenMembership;
            this.PermissionRecertificationStatus = permissionRecertificationStatus;
            this.MembershipRecertificationStatus = membershipRecertificationStatus;
            this.Status = status;
            this.Hub = hub;
            this.GeoLocation = geoLocation;
            this.Phase = phase;
            this.Metadata = metadata;
        }
        
        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [DataMember(Name="groupId", EmitDefaultValue=true)]
        public string GroupId { get; set; }

        /// <summary>
        /// Gets or Sets GroupName
        /// </summary>
        [DataMember(Name="groupName", EmitDefaultValue=true)]
        public string GroupName { get; set; }

        /// <summary>
        /// Gets or Sets GroupSharingDescription
        /// </summary>
        [DataMember(Name="groupSharingDescription", EmitDefaultValue=true)]
        public string GroupSharingDescription { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets ObjectId
        /// </summary>
        [DataMember(Name="objectId", EmitDefaultValue=true)]
        public string ObjectId { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContact
        /// </summary>
        [DataMember(Name="primaryContact", EmitDefaultValue=true)]
        public string PrimaryContact { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContactDisplayName
        /// </summary>
        [DataMember(Name="primaryContactDisplayName", EmitDefaultValue=true)]
        public string PrimaryContactDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryContact
        /// </summary>
        [DataMember(Name="secondaryContact", EmitDefaultValue=true)]
        public string SecondaryContact { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryContactDisplayName
        /// </summary>
        [DataMember(Name="secondaryContactDisplayName", EmitDefaultValue=true)]
        public string SecondaryContactDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets Owners
        /// </summary>
        [DataMember(Name="owners", EmitDefaultValue=true)]
        public string Owners { get; set; }

        /// <summary>
        /// Gets or Sets OwnersDisplayName
        /// </summary>
        [DataMember(Name="ownersDisplayName", EmitDefaultValue=true)]
        public string OwnersDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets PolicyName
        /// </summary>
        [DataMember(Name="policyName", EmitDefaultValue=true)]
        public string PolicyName { get; set; }

        /// <summary>
        /// Gets or Sets PolicyId
        /// </summary>
        [DataMember(Name="policyId", EmitDefaultValue=false)]
        public Guid PolicyId { get; set; }

        /// <summary>
        /// Gets or Sets Privacy
        /// </summary>
        [DataMember(Name="privacy", EmitDefaultValue=false)]
        public bool Privacy { get; set; }

        /// <summary>
        /// Gets or Sets PrivacyDescription
        /// </summary>
        [DataMember(Name="privacyDescription", EmitDefaultValue=true)]
        public string PrivacyDescription { get; private set; }

        /// <summary>
        /// Gets or Sets SubscribeMembers
        /// </summary>
        [DataMember(Name="subscribeMembers", EmitDefaultValue=false)]
        public bool SubscribeMembers { get; set; }

        /// <summary>
        /// Gets or Sets TeamsSharingDescription
        /// </summary>
        [DataMember(Name="teamsSharingDescription", EmitDefaultValue=true)]
        public string TeamsSharingDescription { get; private set; }

        /// <summary>
        /// Gets or Sets SubscribeMembersDescription
        /// </summary>
        [DataMember(Name="subscribeMembersDescription", EmitDefaultValue=true)]
        public string SubscribeMembersDescription { get; private set; }

        /// <summary>
        /// Gets or Sets OutsideSenders
        /// </summary>
        [DataMember(Name="outsideSenders", EmitDefaultValue=false)]
        public bool OutsideSenders { get; set; }

        /// <summary>
        /// Gets or Sets OutsideSendersDescription
        /// </summary>
        [DataMember(Name="outsideSendersDescription", EmitDefaultValue=true)]
        public string OutsideSendersDescription { get; private set; }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name="language", EmitDefaultValue=true)]
        public string Language { get; set; }

        /// <summary>
        /// Gets or Sets LanguageDescription
        /// </summary>
        [DataMember(Name="languageDescription", EmitDefaultValue=true)]
        public string LanguageDescription { get; private set; }

        /// <summary>
        /// Gets or Sets SiteUrl
        /// </summary>
        [DataMember(Name="siteUrl", EmitDefaultValue=true)]
        public string SiteUrl { get; set; }

        /// <summary>
        /// Gets or Sets SiteQuota
        /// </summary>
        [DataMember(Name="siteQuota", EmitDefaultValue=true)]
        public string SiteQuota { get; set; }

        /// <summary>
        /// Gets or Sets SiteUsage
        /// </summary>
        [DataMember(Name="siteUsage", EmitDefaultValue=true)]
        public string SiteUsage { get; set; }

        /// <summary>
        /// Gets or Sets LeaseExpirationTime
        /// </summary>
        [DataMember(Name="leaseExpirationTime", EmitDefaultValue=true)]
        public DateTime? LeaseExpirationTime { get; set; }

        /// <summary>
        /// Gets or Sets CreatedTime
        /// </summary>
        [DataMember(Name="createdTime", EmitDefaultValue=false)]
        public DateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or Sets EnableLeaseExtension
        /// </summary>
        [DataMember(Name="enableLeaseExtension", EmitDefaultValue=false)]
        public bool EnableLeaseExtension { get; set; }

        /// <summary>
        /// Gets or Sets EnablePolicyChange
        /// </summary>
        [DataMember(Name="enablePolicyChange", EmitDefaultValue=false)]
        public bool EnablePolicyChange { get; set; }

        /// <summary>
        /// Gets or Sets EnableDeletion
        /// </summary>
        [DataMember(Name="enableDeletion", EmitDefaultValue=false)]
        public bool EnableDeletion { get; set; }

        /// <summary>
        /// Gets or Sets EnableSiteQuotaChange
        /// </summary>
        [DataMember(Name="enableSiteQuotaChange", EmitDefaultValue=false)]
        public bool EnableSiteQuotaChange { get; set; }

        /// <summary>
        /// Gets or Sets EnableLeaseManagement
        /// </summary>
        [DataMember(Name="enableLeaseManagement", EmitDefaultValue=false)]
        public bool EnableLeaseManagement { get; set; }

        /// <summary>
        /// Gets or Sets EnableInactivityThreshold
        /// </summary>
        [DataMember(Name="enableInactivityThreshold", EmitDefaultValue=false)]
        public bool EnableInactivityThreshold { get; set; }

        /// <summary>
        /// Gets or Sets InactivityThresholdTime
        /// </summary>
        [DataMember(Name="inactivityThresholdTime", EmitDefaultValue=true)]
        public DateTime? InactivityThresholdTime { get; set; }

        /// <summary>
        /// Gets or Sets Classification
        /// </summary>
        [DataMember(Name="classification", EmitDefaultValue=true)]
        public string Classification { get; set; }

        /// <summary>
        /// Gets or Sets EnableHiddenMembership
        /// </summary>
        [DataMember(Name="enableHiddenMembership", EmitDefaultValue=false)]
        public bool EnableHiddenMembership { get; set; }

        /// <summary>
        /// Gets or Sets PermissionRecertificationStatusDescription
        /// </summary>
        [DataMember(Name="permissionRecertificationStatusDescription", EmitDefaultValue=true)]
        public string PermissionRecertificationStatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets MembershipRecertificationStatusDescription
        /// </summary>
        [DataMember(Name="membershipRecertificationStatusDescription", EmitDefaultValue=true)]
        public string MembershipRecertificationStatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets StatusDescription
        /// </summary>
        [DataMember(Name="statusDescription", EmitDefaultValue=true)]
        public string StatusDescription { get; private set; }

        /// <summary>
        /// Gets or Sets Hub
        /// </summary>
        [DataMember(Name="hub", EmitDefaultValue=true)]
        public string Hub { get; set; }

        /// <summary>
        /// Gets or Sets GeoLocation
        /// </summary>
        [DataMember(Name="geoLocation", EmitDefaultValue=true)]
        public string GeoLocation { get; set; }

        /// <summary>
        /// Gets or Sets GeoLocationDescription
        /// </summary>
        [DataMember(Name="geoLocationDescription", EmitDefaultValue=true)]
        public string GeoLocationDescription { get; private set; }

        /// <summary>
        /// Gets or Sets PhaseDescription
        /// </summary>
        [DataMember(Name="phaseDescription", EmitDefaultValue=true)]
        public string PhaseDescription { get; private set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name="metadata", EmitDefaultValue=true)]
        public List<ReportMetadata> Metadata { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GroupGridModel {\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  GroupName: ").Append(GroupName).Append("\n");
            sb.Append("  GroupSharing: ").Append(GroupSharing).Append("\n");
            sb.Append("  GroupSharingDescription: ").Append(GroupSharingDescription).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ObjectId: ").Append(ObjectId).Append("\n");
            sb.Append("  PrimaryContact: ").Append(PrimaryContact).Append("\n");
            sb.Append("  PrimaryContactDisplayName: ").Append(PrimaryContactDisplayName).Append("\n");
            sb.Append("  SecondaryContact: ").Append(SecondaryContact).Append("\n");
            sb.Append("  SecondaryContactDisplayName: ").Append(SecondaryContactDisplayName).Append("\n");
            sb.Append("  Owners: ").Append(Owners).Append("\n");
            sb.Append("  OwnersDisplayName: ").Append(OwnersDisplayName).Append("\n");
            sb.Append("  PolicyName: ").Append(PolicyName).Append("\n");
            sb.Append("  PolicyId: ").Append(PolicyId).Append("\n");
            sb.Append("  Privacy: ").Append(Privacy).Append("\n");
            sb.Append("  PrivacyDescription: ").Append(PrivacyDescription).Append("\n");
            sb.Append("  SubscribeMembers: ").Append(SubscribeMembers).Append("\n");
            sb.Append("  TeamsSiteSharing: ").Append(TeamsSiteSharing).Append("\n");
            sb.Append("  TeamsSharingDescription: ").Append(TeamsSharingDescription).Append("\n");
            sb.Append("  SubscribeMembersDescription: ").Append(SubscribeMembersDescription).Append("\n");
            sb.Append("  OutsideSenders: ").Append(OutsideSenders).Append("\n");
            sb.Append("  OutsideSendersDescription: ").Append(OutsideSendersDescription).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  LanguageDescription: ").Append(LanguageDescription).Append("\n");
            sb.Append("  SiteUrl: ").Append(SiteUrl).Append("\n");
            sb.Append("  SiteQuota: ").Append(SiteQuota).Append("\n");
            sb.Append("  SiteUsage: ").Append(SiteUsage).Append("\n");
            sb.Append("  LeaseExpirationTime: ").Append(LeaseExpirationTime).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  EnableLeaseExtension: ").Append(EnableLeaseExtension).Append("\n");
            sb.Append("  EnablePolicyChange: ").Append(EnablePolicyChange).Append("\n");
            sb.Append("  EnableDeletion: ").Append(EnableDeletion).Append("\n");
            sb.Append("  EnableSiteQuotaChange: ").Append(EnableSiteQuotaChange).Append("\n");
            sb.Append("  EnableLeaseManagement: ").Append(EnableLeaseManagement).Append("\n");
            sb.Append("  EnableInactivityThreshold: ").Append(EnableInactivityThreshold).Append("\n");
            sb.Append("  InactivityThresholdTime: ").Append(InactivityThresholdTime).Append("\n");
            sb.Append("  Classification: ").Append(Classification).Append("\n");
            sb.Append("  EnableHiddenMembership: ").Append(EnableHiddenMembership).Append("\n");
            sb.Append("  PermissionRecertificationStatus: ").Append(PermissionRecertificationStatus).Append("\n");
            sb.Append("  PermissionRecertificationStatusDescription: ").Append(PermissionRecertificationStatusDescription).Append("\n");
            sb.Append("  MembershipRecertificationStatus: ").Append(MembershipRecertificationStatus).Append("\n");
            sb.Append("  MembershipRecertificationStatusDescription: ").Append(MembershipRecertificationStatusDescription).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusDescription: ").Append(StatusDescription).Append("\n");
            sb.Append("  Hub: ").Append(Hub).Append("\n");
            sb.Append("  GeoLocation: ").Append(GeoLocation).Append("\n");
            sb.Append("  GeoLocationDescription: ").Append(GeoLocationDescription).Append("\n");
            sb.Append("  Phase: ").Append(Phase).Append("\n");
            sb.Append("  PhaseDescription: ").Append(PhaseDescription).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GroupGridModel);
        }

        /// <summary>
        /// Returns true if GroupGridModel instances are equal
        /// </summary>
        /// <param name="input">Instance of GroupGridModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GroupGridModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.GroupId == input.GroupId ||
                    (this.GroupId != null &&
                    this.GroupId.Equals(input.GroupId))
                ) && 
                (
                    this.GroupName == input.GroupName ||
                    (this.GroupName != null &&
                    this.GroupName.Equals(input.GroupName))
                ) && 
                (
                    this.GroupSharing == input.GroupSharing ||
                    this.GroupSharing.Equals(input.GroupSharing)
                ) && 
                (
                    this.GroupSharingDescription == input.GroupSharingDescription ||
                    (this.GroupSharingDescription != null &&
                    this.GroupSharingDescription.Equals(input.GroupSharingDescription))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ObjectId == input.ObjectId ||
                    (this.ObjectId != null &&
                    this.ObjectId.Equals(input.ObjectId))
                ) && 
                (
                    this.PrimaryContact == input.PrimaryContact ||
                    (this.PrimaryContact != null &&
                    this.PrimaryContact.Equals(input.PrimaryContact))
                ) && 
                (
                    this.PrimaryContactDisplayName == input.PrimaryContactDisplayName ||
                    (this.PrimaryContactDisplayName != null &&
                    this.PrimaryContactDisplayName.Equals(input.PrimaryContactDisplayName))
                ) && 
                (
                    this.SecondaryContact == input.SecondaryContact ||
                    (this.SecondaryContact != null &&
                    this.SecondaryContact.Equals(input.SecondaryContact))
                ) && 
                (
                    this.SecondaryContactDisplayName == input.SecondaryContactDisplayName ||
                    (this.SecondaryContactDisplayName != null &&
                    this.SecondaryContactDisplayName.Equals(input.SecondaryContactDisplayName))
                ) && 
                (
                    this.Owners == input.Owners ||
                    (this.Owners != null &&
                    this.Owners.Equals(input.Owners))
                ) && 
                (
                    this.OwnersDisplayName == input.OwnersDisplayName ||
                    (this.OwnersDisplayName != null &&
                    this.OwnersDisplayName.Equals(input.OwnersDisplayName))
                ) && 
                (
                    this.PolicyName == input.PolicyName ||
                    (this.PolicyName != null &&
                    this.PolicyName.Equals(input.PolicyName))
                ) && 
                (
                    this.PolicyId == input.PolicyId ||
                    (this.PolicyId != null &&
                    this.PolicyId.Equals(input.PolicyId))
                ) && 
                (
                    this.Privacy == input.Privacy ||
                    this.Privacy.Equals(input.Privacy)
                ) && 
                (
                    this.PrivacyDescription == input.PrivacyDescription ||
                    (this.PrivacyDescription != null &&
                    this.PrivacyDescription.Equals(input.PrivacyDescription))
                ) && 
                (
                    this.SubscribeMembers == input.SubscribeMembers ||
                    this.SubscribeMembers.Equals(input.SubscribeMembers)
                ) && 
                (
                    this.TeamsSiteSharing == input.TeamsSiteSharing ||
                    this.TeamsSiteSharing.Equals(input.TeamsSiteSharing)
                ) && 
                (
                    this.TeamsSharingDescription == input.TeamsSharingDescription ||
                    (this.TeamsSharingDescription != null &&
                    this.TeamsSharingDescription.Equals(input.TeamsSharingDescription))
                ) && 
                (
                    this.SubscribeMembersDescription == input.SubscribeMembersDescription ||
                    (this.SubscribeMembersDescription != null &&
                    this.SubscribeMembersDescription.Equals(input.SubscribeMembersDescription))
                ) && 
                (
                    this.OutsideSenders == input.OutsideSenders ||
                    this.OutsideSenders.Equals(input.OutsideSenders)
                ) && 
                (
                    this.OutsideSendersDescription == input.OutsideSendersDescription ||
                    (this.OutsideSendersDescription != null &&
                    this.OutsideSendersDescription.Equals(input.OutsideSendersDescription))
                ) && 
                (
                    this.Language == input.Language ||
                    (this.Language != null &&
                    this.Language.Equals(input.Language))
                ) && 
                (
                    this.LanguageDescription == input.LanguageDescription ||
                    (this.LanguageDescription != null &&
                    this.LanguageDescription.Equals(input.LanguageDescription))
                ) && 
                (
                    this.SiteUrl == input.SiteUrl ||
                    (this.SiteUrl != null &&
                    this.SiteUrl.Equals(input.SiteUrl))
                ) && 
                (
                    this.SiteQuota == input.SiteQuota ||
                    (this.SiteQuota != null &&
                    this.SiteQuota.Equals(input.SiteQuota))
                ) && 
                (
                    this.SiteUsage == input.SiteUsage ||
                    (this.SiteUsage != null &&
                    this.SiteUsage.Equals(input.SiteUsage))
                ) && 
                (
                    this.LeaseExpirationTime == input.LeaseExpirationTime ||
                    (this.LeaseExpirationTime != null &&
                    this.LeaseExpirationTime.Equals(input.LeaseExpirationTime))
                ) && 
                (
                    this.CreatedTime == input.CreatedTime ||
                    (this.CreatedTime != null &&
                    this.CreatedTime.Equals(input.CreatedTime))
                ) && 
                (
                    this.EnableLeaseExtension == input.EnableLeaseExtension ||
                    this.EnableLeaseExtension.Equals(input.EnableLeaseExtension)
                ) && 
                (
                    this.EnablePolicyChange == input.EnablePolicyChange ||
                    this.EnablePolicyChange.Equals(input.EnablePolicyChange)
                ) && 
                (
                    this.EnableDeletion == input.EnableDeletion ||
                    this.EnableDeletion.Equals(input.EnableDeletion)
                ) && 
                (
                    this.EnableSiteQuotaChange == input.EnableSiteQuotaChange ||
                    this.EnableSiteQuotaChange.Equals(input.EnableSiteQuotaChange)
                ) && 
                (
                    this.EnableLeaseManagement == input.EnableLeaseManagement ||
                    this.EnableLeaseManagement.Equals(input.EnableLeaseManagement)
                ) && 
                (
                    this.EnableInactivityThreshold == input.EnableInactivityThreshold ||
                    this.EnableInactivityThreshold.Equals(input.EnableInactivityThreshold)
                ) && 
                (
                    this.InactivityThresholdTime == input.InactivityThresholdTime ||
                    (this.InactivityThresholdTime != null &&
                    this.InactivityThresholdTime.Equals(input.InactivityThresholdTime))
                ) && 
                (
                    this.Classification == input.Classification ||
                    (this.Classification != null &&
                    this.Classification.Equals(input.Classification))
                ) && 
                (
                    this.EnableHiddenMembership == input.EnableHiddenMembership ||
                    this.EnableHiddenMembership.Equals(input.EnableHiddenMembership)
                ) && 
                (
                    this.PermissionRecertificationStatus == input.PermissionRecertificationStatus ||
                    this.PermissionRecertificationStatus.Equals(input.PermissionRecertificationStatus)
                ) && 
                (
                    this.PermissionRecertificationStatusDescription == input.PermissionRecertificationStatusDescription ||
                    (this.PermissionRecertificationStatusDescription != null &&
                    this.PermissionRecertificationStatusDescription.Equals(input.PermissionRecertificationStatusDescription))
                ) && 
                (
                    this.MembershipRecertificationStatus == input.MembershipRecertificationStatus ||
                    this.MembershipRecertificationStatus.Equals(input.MembershipRecertificationStatus)
                ) && 
                (
                    this.MembershipRecertificationStatusDescription == input.MembershipRecertificationStatusDescription ||
                    (this.MembershipRecertificationStatusDescription != null &&
                    this.MembershipRecertificationStatusDescription.Equals(input.MembershipRecertificationStatusDescription))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.StatusDescription == input.StatusDescription ||
                    (this.StatusDescription != null &&
                    this.StatusDescription.Equals(input.StatusDescription))
                ) && 
                (
                    this.Hub == input.Hub ||
                    (this.Hub != null &&
                    this.Hub.Equals(input.Hub))
                ) && 
                (
                    this.GeoLocation == input.GeoLocation ||
                    (this.GeoLocation != null &&
                    this.GeoLocation.Equals(input.GeoLocation))
                ) && 
                (
                    this.GeoLocationDescription == input.GeoLocationDescription ||
                    (this.GeoLocationDescription != null &&
                    this.GeoLocationDescription.Equals(input.GeoLocationDescription))
                ) && 
                (
                    this.Phase == input.Phase ||
                    this.Phase.Equals(input.Phase)
                ) && 
                (
                    this.PhaseDescription == input.PhaseDescription ||
                    (this.PhaseDescription != null &&
                    this.PhaseDescription.Equals(input.PhaseDescription))
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    this.Metadata != null &&
                    input.Metadata != null &&
                    this.Metadata.SequenceEqual(input.Metadata)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GroupId != null)
                    hashCode = hashCode * 59 + this.GroupId.GetHashCode();
                if (this.GroupName != null)
                    hashCode = hashCode * 59 + this.GroupName.GetHashCode();
                hashCode = hashCode * 59 + this.GroupSharing.GetHashCode();
                if (this.GroupSharingDescription != null)
                    hashCode = hashCode * 59 + this.GroupSharingDescription.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ObjectId != null)
                    hashCode = hashCode * 59 + this.ObjectId.GetHashCode();
                if (this.PrimaryContact != null)
                    hashCode = hashCode * 59 + this.PrimaryContact.GetHashCode();
                if (this.PrimaryContactDisplayName != null)
                    hashCode = hashCode * 59 + this.PrimaryContactDisplayName.GetHashCode();
                if (this.SecondaryContact != null)
                    hashCode = hashCode * 59 + this.SecondaryContact.GetHashCode();
                if (this.SecondaryContactDisplayName != null)
                    hashCode = hashCode * 59 + this.SecondaryContactDisplayName.GetHashCode();
                if (this.Owners != null)
                    hashCode = hashCode * 59 + this.Owners.GetHashCode();
                if (this.OwnersDisplayName != null)
                    hashCode = hashCode * 59 + this.OwnersDisplayName.GetHashCode();
                if (this.PolicyName != null)
                    hashCode = hashCode * 59 + this.PolicyName.GetHashCode();
                if (this.PolicyId != null)
                    hashCode = hashCode * 59 + this.PolicyId.GetHashCode();
                hashCode = hashCode * 59 + this.Privacy.GetHashCode();
                if (this.PrivacyDescription != null)
                    hashCode = hashCode * 59 + this.PrivacyDescription.GetHashCode();
                hashCode = hashCode * 59 + this.SubscribeMembers.GetHashCode();
                hashCode = hashCode * 59 + this.TeamsSiteSharing.GetHashCode();
                if (this.TeamsSharingDescription != null)
                    hashCode = hashCode * 59 + this.TeamsSharingDescription.GetHashCode();
                if (this.SubscribeMembersDescription != null)
                    hashCode = hashCode * 59 + this.SubscribeMembersDescription.GetHashCode();
                hashCode = hashCode * 59 + this.OutsideSenders.GetHashCode();
                if (this.OutsideSendersDescription != null)
                    hashCode = hashCode * 59 + this.OutsideSendersDescription.GetHashCode();
                if (this.Language != null)
                    hashCode = hashCode * 59 + this.Language.GetHashCode();
                if (this.LanguageDescription != null)
                    hashCode = hashCode * 59 + this.LanguageDescription.GetHashCode();
                if (this.SiteUrl != null)
                    hashCode = hashCode * 59 + this.SiteUrl.GetHashCode();
                if (this.SiteQuota != null)
                    hashCode = hashCode * 59 + this.SiteQuota.GetHashCode();
                if (this.SiteUsage != null)
                    hashCode = hashCode * 59 + this.SiteUsage.GetHashCode();
                if (this.LeaseExpirationTime != null)
                    hashCode = hashCode * 59 + this.LeaseExpirationTime.GetHashCode();
                if (this.CreatedTime != null)
                    hashCode = hashCode * 59 + this.CreatedTime.GetHashCode();
                hashCode = hashCode * 59 + this.EnableLeaseExtension.GetHashCode();
                hashCode = hashCode * 59 + this.EnablePolicyChange.GetHashCode();
                hashCode = hashCode * 59 + this.EnableDeletion.GetHashCode();
                hashCode = hashCode * 59 + this.EnableSiteQuotaChange.GetHashCode();
                hashCode = hashCode * 59 + this.EnableLeaseManagement.GetHashCode();
                hashCode = hashCode * 59 + this.EnableInactivityThreshold.GetHashCode();
                if (this.InactivityThresholdTime != null)
                    hashCode = hashCode * 59 + this.InactivityThresholdTime.GetHashCode();
                if (this.Classification != null)
                    hashCode = hashCode * 59 + this.Classification.GetHashCode();
                hashCode = hashCode * 59 + this.EnableHiddenMembership.GetHashCode();
                hashCode = hashCode * 59 + this.PermissionRecertificationStatus.GetHashCode();
                if (this.PermissionRecertificationStatusDescription != null)
                    hashCode = hashCode * 59 + this.PermissionRecertificationStatusDescription.GetHashCode();
                hashCode = hashCode * 59 + this.MembershipRecertificationStatus.GetHashCode();
                if (this.MembershipRecertificationStatusDescription != null)
                    hashCode = hashCode * 59 + this.MembershipRecertificationStatusDescription.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusDescription != null)
                    hashCode = hashCode * 59 + this.StatusDescription.GetHashCode();
                if (this.Hub != null)
                    hashCode = hashCode * 59 + this.Hub.GetHashCode();
                if (this.GeoLocation != null)
                    hashCode = hashCode * 59 + this.GeoLocation.GetHashCode();
                if (this.GeoLocationDescription != null)
                    hashCode = hashCode * 59 + this.GeoLocationDescription.GetHashCode();
                hashCode = hashCode * 59 + this.Phase.GetHashCode();
                if (this.PhaseDescription != null)
                    hashCode = hashCode * 59 + this.PhaseDescription.GetHashCode();
                if (this.Metadata != null)
                    hashCode = hashCode * 59 + this.Metadata.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

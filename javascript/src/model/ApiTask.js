/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiTaskDynamicProperties from './ApiTaskDynamicProperties';
import ServiceType from './ServiceType';
import TaskComment from './TaskComment';
import TaskDynamicActions from './TaskDynamicActions';
import TaskResult from './TaskResult';
import TaskType from './TaskType';

/**
 * The ApiTask model module.
 * @module model/ApiTask
 * @version 1.0
 */
class ApiTask {
    /**
     * Constructs a new <code>ApiTask</code>.
     * @alias module:model/ApiTask
     */
    constructor() { 
        
        ApiTask.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiTask} obj Optional instance to populate.
     * @return {module:model/ApiTask} The populated <code>ApiTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiTask();

            if (data.hasOwnProperty('dynamicProperties')) {
                obj['dynamicProperties'] = ApiTaskDynamicProperties.constructFromObject(data['dynamicProperties']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('requestGuid')) {
                obj['requestGuid'] = ApiClient.convertToType(data['requestGuid'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = TaskResult.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusDescription')) {
                obj['statusDescription'] = ApiClient.convertToType(data['statusDescription'], 'String');
            }
            if (data.hasOwnProperty('serviceType')) {
                obj['serviceType'] = ServiceType.constructFromObject(data['serviceType']);
            }
            if (data.hasOwnProperty('serviceTypeDescription')) {
                obj['serviceTypeDescription'] = ApiClient.convertToType(data['serviceTypeDescription'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('allComments')) {
                obj['allComments'] = ApiClient.convertToType(data['allComments'], [TaskComment]);
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('taskType')) {
                obj['taskType'] = TaskType.constructFromObject(data['taskType']);
            }
            if (data.hasOwnProperty('allowReassign')) {
                obj['allowReassign'] = ApiClient.convertToType(data['allowReassign'], 'Boolean');
            }
            if (data.hasOwnProperty('allowEdit')) {
                obj['allowEdit'] = ApiClient.convertToType(data['allowEdit'], 'Boolean');
            }
            if (data.hasOwnProperty('dynamicActions')) {
                obj['dynamicActions'] = ApiClient.convertToType(data['dynamicActions'], [TaskDynamicActions]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ApiTaskDynamicProperties} dynamicProperties
 */
ApiTask.prototype['dynamicProperties'] = undefined;

/**
 * @member {String} id
 */
ApiTask.prototype['id'] = undefined;

/**
 * @member {String} title
 */
ApiTask.prototype['title'] = undefined;

/**
 * @member {String} description
 */
ApiTask.prototype['description'] = undefined;

/**
 * @member {String} requestGuid
 */
ApiTask.prototype['requestGuid'] = undefined;

/**
 * @member {module:model/TaskResult} status
 */
ApiTask.prototype['status'] = undefined;

/**
 * @member {String} statusDescription
 */
ApiTask.prototype['statusDescription'] = undefined;

/**
 * @member {module:model/ServiceType} serviceType
 */
ApiTask.prototype['serviceType'] = undefined;

/**
 * @member {String} serviceTypeDescription
 */
ApiTask.prototype['serviceTypeDescription'] = undefined;

/**
 * @member {String} comments
 */
ApiTask.prototype['comments'] = undefined;

/**
 * @member {Array.<module:model/TaskComment>} allComments
 */
ApiTask.prototype['allComments'] = undefined;

/**
 * @member {String} errorMessage
 */
ApiTask.prototype['errorMessage'] = undefined;

/**
 * @member {Date} lastModifiedTime
 */
ApiTask.prototype['lastModifiedTime'] = undefined;

/**
 * @member {module:model/TaskType} taskType
 */
ApiTask.prototype['taskType'] = undefined;

/**
 * @member {Boolean} allowReassign
 */
ApiTask.prototype['allowReassign'] = undefined;

/**
 * @member {Boolean} allowEdit
 */
ApiTask.prototype['allowEdit'] = undefined;

/**
 * @member {Array.<module:model/TaskDynamicActions>} dynamicActions
 */
ApiTask.prototype['dynamicActions'] = undefined;






export default ApiTask;


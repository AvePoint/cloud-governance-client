/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;
using Cloud.Governance.NewSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing ConflictResolutionSetting
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ConflictResolutionSettingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ConflictResolutionSetting
        //private ConflictResolutionSetting instance;

        public ConflictResolutionSettingTests()
        {
            // TODO uncomment below to create an instance of ConflictResolutionSetting
            //instance = new ConflictResolutionSetting();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConflictResolutionSetting
        /// </summary>
        [Fact]
        public void ConflictResolutionSettingInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ConflictResolutionSetting
            //Assert.IsInstanceOfType<ConflictResolutionSetting> (instance, "variable 'instance' is a ConflictResolutionSetting");
        }


        /// <summary>
        /// Test the property 'ContainerConflictSolution'
        /// </summary>
        [Fact]
        public void ContainerConflictSolutionTest()
        {
            // TODO unit test for the property 'ContainerConflictSolution'
        }
        /// <summary>
        /// Test the property 'IsCheckLowerObject'
        /// </summary>
        [Fact]
        public void IsCheckLowerObjectTest()
        {
            // TODO unit test for the property 'IsCheckLowerObject'
        }
        /// <summary>
        /// Test the property 'IsEnableContentConflictResolution'
        /// </summary>
        [Fact]
        public void IsEnableContentConflictResolutionTest()
        {
            // TODO unit test for the property 'IsEnableContentConflictResolution'
        }
        /// <summary>
        /// Test the property 'ContentConflictSolution'
        /// </summary>
        [Fact]
        public void ContentConflictSolutionTest()
        {
            // TODO unit test for the property 'ContentConflictSolution'
        }
        /// <summary>
        /// Test the property 'AppConflictSolution'
        /// </summary>
        [Fact]
        public void AppConflictSolutionTest()
        {
            // TODO unit test for the property 'AppConflictSolution'
        }

    }

}

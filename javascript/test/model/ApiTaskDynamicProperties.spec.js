/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudGovernanceApi);
  }
}(this, function(expect, CloudGovernanceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudGovernanceApi.ApiTaskDynamicProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiTaskDynamicProperties', function() {
    it('should create an instance of ApiTaskDynamicProperties', function() {
      // uncomment below and update the code to test ApiTaskDynamicProperties
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be.a(CloudGovernanceApi.ApiTaskDynamicProperties);
    });

    it('should have the property none (base name: "None")', function() {
      // uncomment below and update the code to test the property none
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property primaryContact (base name: "PrimaryContact")', function() {
      // uncomment below and update the code to test the property primaryContact
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property secondaryContact (base name: "SecondaryContact")', function() {
      // uncomment below and update the code to test the property secondaryContact
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property siteId (base name: "SiteId")', function() {
      // uncomment below and update the code to test the property siteId
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property siteUrl (base name: "SiteUrl")', function() {
      // uncomment below and update the code to test the property siteUrl
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupName (base name: "GroupName")', function() {
      // uncomment below and update the code to test the property groupName
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "ExpirationDate")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupOwners (base name: "GroupOwners")', function() {
      // uncomment below and update the code to test the property groupOwners
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property autoTaskActionHistories (base name: "AutoTaskActionHistories")', function() {
      // uncomment below and update the code to test the property autoTaskActionHistories
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property inactivityThresholdDate (base name: "InactivityThresholdDate")', function() {
      // uncomment below and update the code to test the property inactivityThresholdDate
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupEmail (base name: "GroupEmail")', function() {
      // uncomment below and update the code to test the property groupEmail
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "GroupId")', function() {
      // uncomment below and update the code to test the property groupId
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property policyName (base name: "PolicyName")', function() {
      // uncomment below and update the code to test the property policyName
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property primaryAdministrator (base name: "PrimaryAdministrator")', function() {
      // uncomment below and update the code to test the property primaryAdministrator
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property siteTemplate (base name: "SiteTemplate")', function() {
      // uncomment below and update the code to test the property siteTemplate
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property siteTitle (base name: "SiteTitle")', function() {
      // uncomment below and update the code to test the property siteTitle
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property siteDescription (base name: "SiteDescription")', function() {
      // uncomment below and update the code to test the property siteDescription
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

    it('should have the property requester (base name: "Requester")', function() {
      // uncomment below and update the code to test the property requester
      //var instane = new CloudGovernanceApi.ApiTaskDynamicProperties();
      //expect(instance).to.be();
    });

  });

}));

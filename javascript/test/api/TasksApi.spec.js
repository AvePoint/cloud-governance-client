/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudGovernanceApi);
  }
}(this, function(expect, CloudGovernanceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudGovernanceApi.TasksApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TasksApi', function() {
    describe('addMembersForGroupMembershipRecertification', function() {
      it('should call addMembersForGroupMembershipRecertification successfully', function(done) {
        //uncomment below and update the code to test addMembersForGroupMembershipRecertification
        //instance.addMembersForGroupMembershipRecertification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addOwnersForGroupMembershipRecertification', function() {
      it('should call addOwnersForGroupMembershipRecertification successfully', function(done) {
        //uncomment below and update the code to test addOwnersForGroupMembershipRecertification
        //instance.addOwnersForGroupMembershipRecertification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('approveTask', function() {
      it('should call approveTask successfully', function(done) {
        //uncomment below and update the code to test approveTask
        //instance.approveTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('claimElectionTask', function() {
      it('should call claimElectionTask successfully', function(done) {
        //uncomment below and update the code to test claimElectionTask
        //instance.claimElectionTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('claimSiteOwnershipRecertificationTask', function() {
      it('should call claimSiteOwnershipRecertificationTask successfully', function(done) {
        //uncomment below and update the code to test claimSiteOwnershipRecertificationTask
        //instance.claimSiteOwnershipRecertificationTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('declineElectionTask', function() {
      it('should call declineElectionTask successfully', function(done) {
        //uncomment below and update the code to test declineElectionTask
        //instance.declineElectionTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('declineSiteOwnershipRecertificationTask', function() {
      it('should call declineSiteOwnershipRecertificationTask successfully', function(done) {
        //uncomment below and update the code to test declineSiteOwnershipRecertificationTask
        //instance.declineSiteOwnershipRecertificationTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('demoteAsMembersForGroupMembershipRecertification', function() {
      it('should call demoteAsMembersForGroupMembershipRecertification successfully', function(done) {
        //uncomment below and update the code to test demoteAsMembersForGroupMembershipRecertification
        //instance.demoteAsMembersForGroupMembershipRecertification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editArchiveGroupRequest', function() {
      it('should call editArchiveGroupRequest successfully', function(done) {
        //uncomment below and update the code to test editArchiveGroupRequest
        //instance.editArchiveGroupRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editArchiveSiteRequest', function() {
      it('should call editArchiveSiteRequest successfully', function(done) {
        //uncomment below and update the code to test editArchiveSiteRequest
        //instance.editArchiveSiteRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editArchiveWebRequest', function() {
      it('should call editArchiveWebRequest successfully', function(done) {
        //uncomment below and update the code to test editArchiveWebRequest
        //instance.editArchiveWebRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeGroupPolicyRequest', function() {
      it('should call editChangeGroupPolicyRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeGroupPolicyRequest
        //instance.editChangeGroupPolicyRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeGroupQuotaRequest', function() {
      it('should call editChangeGroupQuotaRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeGroupQuotaRequest
        //instance.editChangeGroupQuotaRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeGroupRequest', function() {
      it('should call editChangeGroupRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeGroupRequest
        //instance.editChangeGroupRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeListSettingRequest', function() {
      it('should call editChangeListSettingRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeListSettingRequest
        //instance.editChangeListSettingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangePermissionRequest', function() {
      it('should call editChangePermissionRequest successfully', function(done) {
        //uncomment below and update the code to test editChangePermissionRequest
        //instance.editChangePermissionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeSiteContactRequest', function() {
      it('should call editChangeSiteContactRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeSiteContactRequest
        //instance.editChangeSiteContactRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeSitePolicyRequest', function() {
      it('should call editChangeSitePolicyRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeSitePolicyRequest
        //instance.editChangeSitePolicyRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeSiteQuotaRequest', function() {
      it('should call editChangeSiteQuotaRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeSiteQuotaRequest
        //instance.editChangeSiteQuotaRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeSiteSettingRequest', function() {
      it('should call editChangeSiteSettingRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeSiteSettingRequest
        //instance.editChangeSiteSettingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeWebContactRequest', function() {
      it('should call editChangeWebContactRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeWebContactRequest
        //instance.editChangeWebContactRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editChangeWebSettingRequest', function() {
      it('should call editChangeWebSettingRequest successfully', function(done) {
        //uncomment below and update the code to test editChangeWebSettingRequest
        //instance.editChangeWebSettingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editClonePermissionRequest', function() {
      it('should call editClonePermissionRequest successfully', function(done) {
        //uncomment below and update the code to test editClonePermissionRequest
        //instance.editClonePermissionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editContentMoveRequest', function() {
      it('should call editContentMoveRequest successfully', function(done) {
        //uncomment below and update the code to test editContentMoveRequest
        //instance.editContentMoveRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editCreateGroupRequest', function() {
      it('should call editCreateGroupRequest successfully', function(done) {
        //uncomment below and update the code to test editCreateGroupRequest
        //instance.editCreateGroupRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editCreateListRequest', function() {
      it('should call editCreateListRequest successfully', function(done) {
        //uncomment below and update the code to test editCreateListRequest
        //instance.editCreateListRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editCreateSiteRequest', function() {
      it('should call editCreateSiteRequest successfully', function(done) {
        //uncomment below and update the code to test editCreateSiteRequest
        //instance.editCreateSiteRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editCreateWebRequest', function() {
      it('should call editCreateWebRequest successfully', function(done) {
        //uncomment below and update the code to test editCreateWebRequest
        //instance.editCreateWebRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editCustomRequest', function() {
      it('should call editCustomRequest successfully', function(done) {
        //uncomment below and update the code to test editCustomRequest
        //instance.editCustomRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editDeleteGroupRequest', function() {
      it('should call editDeleteGroupRequest successfully', function(done) {
        //uncomment below and update the code to test editDeleteGroupRequest
        //instance.editDeleteGroupRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editDeleteSiteRequest', function() {
      it('should call editDeleteSiteRequest successfully', function(done) {
        //uncomment below and update the code to test editDeleteSiteRequest
        //instance.editDeleteSiteRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editDeleteWebRequest', function() {
      it('should call editDeleteWebRequest successfully', function(done) {
        //uncomment below and update the code to test editDeleteWebRequest
        //instance.editDeleteWebRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editExtendGroupRequest', function() {
      it('should call editExtendGroupRequest successfully', function(done) {
        //uncomment below and update the code to test editExtendGroupRequest
        //instance.editExtendGroupRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editExtendSiteRequest', function() {
      it('should call editExtendSiteRequest successfully', function(done) {
        //uncomment below and update the code to test editExtendSiteRequest
        //instance.editExtendSiteRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editGrantPermissionRequest', function() {
      it('should call editGrantPermissionRequest successfully', function(done) {
        //uncomment below and update the code to test editGrantPermissionRequest
        //instance.editGrantPermissionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editLockSiteRequest', function() {
      it('should call editLockSiteRequest successfully', function(done) {
        //uncomment below and update the code to test editLockSiteRequest
        //instance.editLockSiteRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editManagePermissionRequest', function() {
      it('should call editManagePermissionRequest successfully', function(done) {
        //uncomment below and update the code to test editManagePermissionRequest
        //instance.editManagePermissionRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editRestoreGroupRequest', function() {
      it('should call editRestoreGroupRequest successfully', function(done) {
        //uncomment below and update the code to test editRestoreGroupRequest
        //instance.editRestoreGroupRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editUnLockSiteRequest', function() {
      it('should call editUnLockSiteRequest successfully', function(done) {
        //uncomment below and update the code to test editUnLockSiteRequest
        //instance.editUnLockSiteRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReport', function() {
      it('should call getChangePermissionReport successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReport
        //instance.getChangePermissionReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportByVersion', function() {
      it('should call getChangePermissionReportByVersion successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportByVersion
        //instance.getChangePermissionReportByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportFilters', function() {
      it('should call getChangePermissionReportFilters successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportFilters
        //instance.getChangePermissionReportFilters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportFiltersByVersion', function() {
      it('should call getChangePermissionReportFiltersByVersion successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportFiltersByVersion
        //instance.getChangePermissionReportFiltersByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportFiltersForSPGroup', function() {
      it('should call getChangePermissionReportFiltersForSPGroup successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportFiltersForSPGroup
        //instance.getChangePermissionReportFiltersForSPGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportFiltersForSPGroupByVersion', function() {
      it('should call getChangePermissionReportFiltersForSPGroupByVersion successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportFiltersForSPGroupByVersion
        //instance.getChangePermissionReportFiltersForSPGroupByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportForSPGroup', function() {
      it('should call getChangePermissionReportForSPGroup successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportForSPGroup
        //instance.getChangePermissionReportForSPGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportForSPGroupByVersion', function() {
      it('should call getChangePermissionReportForSPGroupByVersion successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportForSPGroupByVersion
        //instance.getChangePermissionReportForSPGroupByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportPermissionLevels', function() {
      it('should call getChangePermissionReportPermissionLevels successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportPermissionLevels
        //instance.getChangePermissionReportPermissionLevels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangePermissionReportProperties', function() {
      it('should call getChangePermissionReportProperties successfully', function(done) {
        //uncomment below and update the code to test getChangePermissionReportProperties
        //instance.getChangePermissionReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClonePermissionReport', function() {
      it('should call getClonePermissionReport successfully', function(done) {
        //uncomment below and update the code to test getClonePermissionReport
        //instance.getClonePermissionReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClonePermissionReportProperties', function() {
      it('should call getClonePermissionReportProperties successfully', function(done) {
        //uncomment below and update the code to test getClonePermissionReportProperties
        //instance.getClonePermissionReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGetManualArchiveReport', function() {
      it('should call getGetManualArchiveReport successfully', function(done) {
        //uncomment below and update the code to test getGetManualArchiveReport
        //instance.getGetManualArchiveReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGetManualArchiveReportFilters', function() {
      it('should call getGetManualArchiveReportFilters successfully', function(done) {
        //uncomment below and update the code to test getGetManualArchiveReportFilters
        //instance.getGetManualArchiveReportFilters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupMembershipRecertificationReport', function() {
      it('should call getGroupMembershipRecertificationReport successfully', function(done) {
        //uncomment below and update the code to test getGroupMembershipRecertificationReport
        //instance.getGroupMembershipRecertificationReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupMembershipRecertificationReportByVersion', function() {
      it('should call getGroupMembershipRecertificationReportByVersion successfully', function(done) {
        //uncomment below and update the code to test getGroupMembershipRecertificationReportByVersion
        //instance.getGroupMembershipRecertificationReportByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupMembershipRecertificationReportFilters', function() {
      it('should call getGroupMembershipRecertificationReportFilters successfully', function(done) {
        //uncomment below and update the code to test getGroupMembershipRecertificationReportFilters
        //instance.getGroupMembershipRecertificationReportFilters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupMembershipRecertificationReportFiltersByVersion', function() {
      it('should call getGroupMembershipRecertificationReportFiltersByVersion successfully', function(done) {
        //uncomment below and update the code to test getGroupMembershipRecertificationReportFiltersByVersion
        //instance.getGroupMembershipRecertificationReportFiltersByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupMembershipRecertificationReportProperties', function() {
      it('should call getGroupMembershipRecertificationReportProperties successfully', function(done) {
        //uncomment below and update the code to test getGroupMembershipRecertificationReportProperties
        //instance.getGroupMembershipRecertificationReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupPermissionRecertificationReport', function() {
      it('should call getGroupPermissionRecertificationReport successfully', function(done) {
        //uncomment below and update the code to test getGroupPermissionRecertificationReport
        //instance.getGroupPermissionRecertificationReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupPermissionRecertificationReportByVersion', function() {
      it('should call getGroupPermissionRecertificationReportByVersion successfully', function(done) {
        //uncomment below and update the code to test getGroupPermissionRecertificationReportByVersion
        //instance.getGroupPermissionRecertificationReportByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupPermissionRecertificationReportFilters', function() {
      it('should call getGroupPermissionRecertificationReportFilters successfully', function(done) {
        //uncomment below and update the code to test getGroupPermissionRecertificationReportFilters
        //instance.getGroupPermissionRecertificationReportFilters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupPermissionRecertificationReportFiltersForSPGroup', function() {
      it('should call getGroupPermissionRecertificationReportFiltersForSPGroup successfully', function(done) {
        //uncomment below and update the code to test getGroupPermissionRecertificationReportFiltersForSPGroup
        //instance.getGroupPermissionRecertificationReportFiltersForSPGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupPermissionRecertificationReportForSPGroup', function() {
      it('should call getGroupPermissionRecertificationReportForSPGroup successfully', function(done) {
        //uncomment below and update the code to test getGroupPermissionRecertificationReportForSPGroup
        //instance.getGroupPermissionRecertificationReportForSPGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupPermissionRecertificationReportProperties', function() {
      it('should call getGroupPermissionRecertificationReportProperties successfully', function(done) {
        //uncomment below and update the code to test getGroupPermissionRecertificationReportProperties
        //instance.getGroupPermissionRecertificationReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMyTaskFilters', function() {
      it('should call getMyTaskFilters successfully', function(done) {
        //uncomment below and update the code to test getMyTaskFilters
        //instance.getMyTaskFilters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMyTasks', function() {
      it('should call getMyTasks successfully', function(done) {
        //uncomment below and update the code to test getMyTasks
        //instance.getMyTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRemovePermissionReport', function() {
      it('should call getRemovePermissionReport successfully', function(done) {
        //uncomment below and update the code to test getRemovePermissionReport
        //instance.getRemovePermissionReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRemovePermissionReportProperties', function() {
      it('should call getRemovePermissionReportProperties successfully', function(done) {
        //uncomment below and update the code to test getRemovePermissionReportProperties
        //instance.getRemovePermissionReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteMetadataRecertificationReport', function() {
      it('should call getSiteMetadataRecertificationReport successfully', function(done) {
        //uncomment below and update the code to test getSiteMetadataRecertificationReport
        //instance.getSiteMetadataRecertificationReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteMetadataRecertificationReportProperties', function() {
      it('should call getSiteMetadataRecertificationReportProperties successfully', function(done) {
        //uncomment below and update the code to test getSiteMetadataRecertificationReportProperties
        //instance.getSiteMetadataRecertificationReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteOwnershipRecertificationReportProperties', function() {
      it('should call getSiteOwnershipRecertificationReportProperties successfully', function(done) {
        //uncomment below and update the code to test getSiteOwnershipRecertificationReportProperties
        //instance.getSiteOwnershipRecertificationReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificatioPermissionFilters', function() {
      it('should call getSitePermissionRecertificatioPermissionFilters successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificatioPermissionFilters
        //instance.getSitePermissionRecertificatioPermissionFilters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificatioReportFiltersByVersion', function() {
      it('should call getSitePermissionRecertificatioReportFiltersByVersion successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificatioReportFiltersByVersion
        //instance.getSitePermissionRecertificatioReportFiltersByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificatioReportFiltersForSPGroup', function() {
      it('should call getSitePermissionRecertificatioReportFiltersForSPGroup successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificatioReportFiltersForSPGroup
        //instance.getSitePermissionRecertificatioReportFiltersForSPGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificatioReportFiltersForSPGroupByVersion', function() {
      it('should call getSitePermissionRecertificatioReportFiltersForSPGroupByVersion successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificatioReportFiltersForSPGroupByVersion
        //instance.getSitePermissionRecertificatioReportFiltersForSPGroupByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificationPermissionLevels', function() {
      it('should call getSitePermissionRecertificationPermissionLevels successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificationPermissionLevels
        //instance.getSitePermissionRecertificationPermissionLevels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificationReport', function() {
      it('should call getSitePermissionRecertificationReport successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificationReport
        //instance.getSitePermissionRecertificationReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificationReportByVersion', function() {
      it('should call getSitePermissionRecertificationReportByVersion successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificationReportByVersion
        //instance.getSitePermissionRecertificationReportByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificationReportForSPGroup', function() {
      it('should call getSitePermissionRecertificationReportForSPGroup successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificationReportForSPGroup
        //instance.getSitePermissionRecertificationReportForSPGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificationReportForSPGroupByVersion', function() {
      it('should call getSitePermissionRecertificationReportForSPGroupByVersion successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificationReportForSPGroupByVersion
        //instance.getSitePermissionRecertificationReportForSPGroupByVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSitePermissionRecertificationReportProperties', function() {
      it('should call getSitePermissionRecertificationReportProperties successfully', function(done) {
        //uncomment below and update the code to test getSitePermissionRecertificationReportProperties
        //instance.getSitePermissionRecertificationReportProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTaskByBatchId', function() {
      it('should call getTaskByBatchId successfully', function(done) {
        //uncomment below and update the code to test getTaskByBatchId
        //instance.getTaskByBatchId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTaskById', function() {
      it('should call getTaskById successfully', function(done) {
        //uncomment below and update the code to test getTaskById
        //instance.getTaskById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('promoteAsOwnersForGroupMembershipRecertification', function() {
      it('should call promoteAsOwnersForGroupMembershipRecertification successfully', function(done) {
        //uncomment below and update the code to test promoteAsOwnersForGroupMembershipRecertification
        //instance.promoteAsOwnersForGroupMembershipRecertification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reassignTask', function() {
      it('should call reassignTask successfully', function(done) {
        //uncomment below and update the code to test reassignTask
        //instance.reassignTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectTask', function() {
      it('should call rejectTask successfully', function(done) {
        //uncomment below and update the code to test rejectTask
        //instance.rejectTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeUsersForGroupMembershipRecertification', function() {
      it('should call removeUsersForGroupMembershipRecertification successfully', function(done) {
        //uncomment below and update the code to test removeUsersForGroupMembershipRecertification
        //instance.removeUsersForGroupMembershipRecertification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reseAllChangesForChangePermissionTask', function() {
      it('should call reseAllChangesForChangePermissionTask successfully', function(done) {
        //uncomment below and update the code to test reseAllChangesForChangePermissionTask
        //instance.reseAllChangesForChangePermissionTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetAllChangesForRecertificationTask', function() {
      it('should call resetAllChangesForRecertificationTask successfully', function(done) {
        //uncomment below and update the code to test resetAllChangesForRecertificationTask
        //instance.resetAllChangesForRecertificationTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetMyChangesForChangePermissionTask', function() {
      it('should call resetMyChangesForChangePermissionTask successfully', function(done) {
        //uncomment below and update the code to test resetMyChangesForChangePermissionTask
        //instance.resetMyChangesForChangePermissionTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetMyChangesForRecertificationTask', function() {
      it('should call resetMyChangesForRecertificationTask successfully', function(done) {
        //uncomment below and update the code to test resetMyChangesForRecertificationTask
        //instance.resetMyChangesForRecertificationTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retryErrorTask', function() {
      it('should call retryErrorTask successfully', function(done) {
        //uncomment below and update the code to test retryErrorTask
        //instance.retryErrorTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveChangePermissionActions', function() {
      it('should call saveChangePermissionActions successfully', function(done) {
        //uncomment below and update the code to test saveChangePermissionActions
        //instance.saveChangePermissionActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveClonePermissionReport', function() {
      it('should call saveClonePermissionReport successfully', function(done) {
        //uncomment below and update the code to test saveClonePermissionReport
        //instance.saveClonePermissionReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveGetManualArchiveReport', function() {
      it('should call saveGetManualArchiveReport successfully', function(done) {
        //uncomment below and update the code to test saveGetManualArchiveReport
        //instance.saveGetManualArchiveReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveGroupPermissionRecertificationResults', function() {
      it('should call saveGroupPermissionRecertificationResults successfully', function(done) {
        //uncomment below and update the code to test saveGroupPermissionRecertificationResults
        //instance.saveGroupPermissionRecertificationResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveRemovePermissionReport', function() {
      it('should call saveRemovePermissionReport successfully', function(done) {
        //uncomment below and update the code to test saveRemovePermissionReport
        //instance.saveRemovePermissionReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveSiteMetadataRecertificationResult', function() {
      it('should call saveSiteMetadataRecertificationResult successfully', function(done) {
        //uncomment below and update the code to test saveSiteMetadataRecertificationResult
        //instance.saveSiteMetadataRecertificationResult(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveSitePermissionRecertificationResult', function() {
      it('should call saveSitePermissionRecertificationResult successfully', function(done) {
        //uncomment below and update the code to test saveSitePermissionRecertificationResult
        //instance.saveSitePermissionRecertificationResult(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('skipErrorTask', function() {
      it('should call skipErrorTask successfully', function(done) {
        //uncomment below and update the code to test skipErrorTask
        //instance.skipErrorTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('specifyPrimaryAndSecondaryContactWhenPrimaryContactIsDeactived', function() {
      it('should call specifyPrimaryAndSecondaryContactWhenPrimaryContactIsDeactived successfully', function(done) {
        //uncomment below and update the code to test specifyPrimaryAndSecondaryContactWhenPrimaryContactIsDeactived
        //instance.specifyPrimaryAndSecondaryContactWhenPrimaryContactIsDeactived(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('specifySecondaryContactWhenSecondaryContactIsDeactived', function() {
      it('should call specifySecondaryContactWhenSecondaryContactIsDeactived successfully', function(done) {
        //uncomment below and update the code to test specifySecondaryContactWhenSecondaryContactIsDeactived
        //instance.specifySecondaryContactWhenSecondaryContactIsDeactived(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitArchiveGroupAutoTask', function() {
      it('should call submitArchiveGroupAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitArchiveGroupAutoTask
        //instance.submitArchiveGroupAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitArchiveSiteAutoTask', function() {
      it('should call submitArchiveSiteAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitArchiveSiteAutoTask
        //instance.submitArchiveSiteAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitChangeSitePolicyAutoTask', function() {
      it('should call submitChangeSitePolicyAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitChangeSitePolicyAutoTask
        //instance.submitChangeSitePolicyAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitContinueAccessGroupAutoTask', function() {
      it('should call submitContinueAccessGroupAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitContinueAccessGroupAutoTask
        //instance.submitContinueAccessGroupAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitContinueAccessSiteAutoTask', function() {
      it('should call submitContinueAccessSiteAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitContinueAccessSiteAutoTask
        //instance.submitContinueAccessSiteAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitDeleteGroupAutoTask', function() {
      it('should call submitDeleteGroupAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitDeleteGroupAutoTask
        //instance.submitDeleteGroupAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitDeleteSiteAutoTask', function() {
      it('should call submitDeleteSiteAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitDeleteSiteAutoTask
        //instance.submitDeleteSiteAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitExtendGroupAutoTask', function() {
      it('should call submitExtendGroupAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitExtendGroupAutoTask
        //instance.submitExtendGroupAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitExtendSiteAutoTask', function() {
      it('should call submitExtendSiteAutoTask successfully', function(done) {
        //uncomment below and update the code to test submitExtendSiteAutoTask
        //instance.submitExtendSiteAutoTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitRecertificationTask', function() {
      it('should call submitRecertificationTask successfully', function(done) {
        //uncomment below and update the code to test submitRecertificationTask
        //instance.submitRecertificationTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewSiteOwnershipRecertificationTask', function() {
      it('should call viewSiteOwnershipRecertificationTask successfully', function(done) {
        //uncomment below and update the code to test viewSiteOwnershipRecertificationTask
        //instance.viewSiteOwnershipRecertificationTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

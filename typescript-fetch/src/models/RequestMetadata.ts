// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApiUser,
    ApiUserFromJSON,
    ApiUserFromJSONTyped,
    ApiUserToJSON,
    LinkValue,
    LinkValueFromJSON,
    LinkValueFromJSONTyped,
    LinkValueToJSON,
    LookupValue,
    LookupValueFromJSON,
    LookupValueFromJSONTyped,
    LookupValueToJSON,
    MetadataActionType,
    MetadataActionTypeFromJSON,
    MetadataActionTypeFromJSONTyped,
    MetadataActionTypeToJSON,
    MetadataFieldType,
    MetadataFieldTypeFromJSON,
    MetadataFieldTypeFromJSONTyped,
    MetadataFieldTypeToJSON,
    TermsValue,
    TermsValueFromJSON,
    TermsValueFromJSONTyped,
    TermsValueToJSON,
} from './';

/**
 * 
 * @export
 * @interface RequestMetadata
 */
export interface RequestMetadata {
    /**
     * 
     * @type {string}
     * @memberof RequestMetadata
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof RequestMetadata
     */
    name?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof RequestMetadata
     */
    booleanValue?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof RequestMetadata
     */
    singleLineOrMultipleLineValue?: string | null;
    /**
     * 
     * @type {LookupValue}
     * @memberof RequestMetadata
     */
    upsOrAzureAdValue?: LookupValue;
    /**
     * 
     * @type {TermsValue}
     * @memberof RequestMetadata
     */
    termsValue?: TermsValue;
    /**
     * 
     * @type {Array<ApiUser>}
     * @memberof RequestMetadata
     */
    userValue?: Array<ApiUser> | null;
    /**
     * 
     * @type {LinkValue}
     * @memberof RequestMetadata
     */
    linkValue?: LinkValue;
    /**
     * 
     * @type {Array<string>}
     * @memberof RequestMetadata
     */
    choiceValue?: Array<string> | null;
    /**
     * 
     * @type {MetadataFieldType}
     * @memberof RequestMetadata
     */
    type?: MetadataFieldType;
    /**
     * 
     * @type {string}
     * @memberof RequestMetadata
     */
    valueString?: string | null;
    /**
     * 
     * @type {MetadataActionType}
     * @memberof RequestMetadata
     */
    action?: MetadataActionType;
}

export function RequestMetadataFromJSON(json: any): RequestMetadata {
    return RequestMetadataFromJSONTyped(json, false);
}

export function RequestMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'booleanValue': !exists(json, 'booleanValue') ? undefined : json['booleanValue'],
        'singleLineOrMultipleLineValue': !exists(json, 'singleLineOrMultipleLineValue') ? undefined : json['singleLineOrMultipleLineValue'],
        'upsOrAzureAdValue': !exists(json, 'upsOrAzureAdValue') ? undefined : LookupValueFromJSON(json['upsOrAzureAdValue']),
        'termsValue': !exists(json, 'termsValue') ? undefined : TermsValueFromJSON(json['termsValue']),
        'userValue': !exists(json, 'userValue') ? undefined : (json['userValue'] as Array<any>).map(ApiUserFromJSON),
        'linkValue': !exists(json, 'linkValue') ? undefined : LinkValueFromJSON(json['linkValue']),
        'choiceValue': !exists(json, 'choiceValue') ? undefined : json['choiceValue'],
        'type': !exists(json, 'type') ? undefined : MetadataFieldTypeFromJSON(json['type']),
        'valueString': !exists(json, 'valueString') ? undefined : json['valueString'],
        'action': !exists(json, 'action') ? undefined : MetadataActionTypeFromJSON(json['action']),
    };
}

export function RequestMetadataToJSON(value?: RequestMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'booleanValue': value.booleanValue,
        'singleLineOrMultipleLineValue': value.singleLineOrMultipleLineValue,
        'upsOrAzureAdValue': LookupValueToJSON(value.upsOrAzureAdValue),
        'termsValue': TermsValueToJSON(value.termsValue),
        'userValue': value.userValue == null ? undefined : (value.userValue as Array<any>).map(ApiUserToJSON),
        'linkValue': LinkValueToJSON(value.linkValue),
        'choiceValue': value.choiceValue,
        'type': MetadataFieldTypeToJSON(value.type),
        'valueString': value.valueString,
        'action': MetadataActionTypeToJSON(value.action),
    };
}



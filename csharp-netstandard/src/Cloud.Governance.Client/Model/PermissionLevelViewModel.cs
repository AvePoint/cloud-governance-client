/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// PermissionLevelViewModel
    /// </summary>
    [DataContract]
    public partial class PermissionLevelViewModel :  IEquatable<PermissionLevelViewModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PermissionLevelViewModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PermissionLevelViewModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PermissionLevelViewModel" /> class.
        /// </summary>
        /// <param name="listPermissions">listPermissions.</param>
        /// <param name="sitePermissions">sitePermissions.</param>
        /// <param name="personalPermissions">personalPermissions.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name (required).</param>
        /// <param name="description">description.</param>
        /// <param name="permissions">permissions (required).</param>
        /// <param name="lastModifiedTime">lastModifiedTime.</param>
        public PermissionLevelViewModel(List<StringModel> listPermissions = default(List<StringModel>), List<StringModel> sitePermissions = default(List<StringModel>), List<StringModel> personalPermissions = default(List<StringModel>), Guid id = default(Guid), string name = default(string), string description = default(string), List<string> permissions = default(List<string>), DateTime lastModifiedTime = default(DateTime))
        {
            // to ensure "name" is required (not null)
            this.Name = name ?? throw new ArgumentNullException("name is a required property for PermissionLevelViewModel and cannot be null");;
            // to ensure "permissions" is required (not null)
            this.Permissions = permissions ?? throw new ArgumentNullException("permissions is a required property for PermissionLevelViewModel and cannot be null");;
            this.ListPermissions = listPermissions;
            this.SitePermissions = sitePermissions;
            this.PersonalPermissions = personalPermissions;
            this.Id = id;
            this.Description = description;
            this.LastModifiedTime = lastModifiedTime;
        }
        
        /// <summary>
        /// Gets or Sets ListPermissions
        /// </summary>
        [DataMember(Name="listPermissions", EmitDefaultValue=true)]
        public List<StringModel> ListPermissions { get; set; }

        /// <summary>
        /// Gets or Sets SitePermissions
        /// </summary>
        [DataMember(Name="sitePermissions", EmitDefaultValue=true)]
        public List<StringModel> SitePermissions { get; set; }

        /// <summary>
        /// Gets or Sets PersonalPermissions
        /// </summary>
        [DataMember(Name="personalPermissions", EmitDefaultValue=true)]
        public List<StringModel> PersonalPermissions { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Permissions
        /// </summary>
        [DataMember(Name="permissions", EmitDefaultValue=false)]
        public List<string> Permissions { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedTime
        /// </summary>
        [DataMember(Name="lastModifiedTime", EmitDefaultValue=false)]
        public DateTime LastModifiedTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PermissionLevelViewModel {\n");
            sb.Append("  ListPermissions: ").Append(ListPermissions).Append("\n");
            sb.Append("  SitePermissions: ").Append(SitePermissions).Append("\n");
            sb.Append("  PersonalPermissions: ").Append(PersonalPermissions).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Permissions: ").Append(Permissions).Append("\n");
            sb.Append("  LastModifiedTime: ").Append(LastModifiedTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PermissionLevelViewModel);
        }

        /// <summary>
        /// Returns true if PermissionLevelViewModel instances are equal
        /// </summary>
        /// <param name="input">Instance of PermissionLevelViewModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PermissionLevelViewModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ListPermissions == input.ListPermissions ||
                    this.ListPermissions != null &&
                    input.ListPermissions != null &&
                    this.ListPermissions.SequenceEqual(input.ListPermissions)
                ) && 
                (
                    this.SitePermissions == input.SitePermissions ||
                    this.SitePermissions != null &&
                    input.SitePermissions != null &&
                    this.SitePermissions.SequenceEqual(input.SitePermissions)
                ) && 
                (
                    this.PersonalPermissions == input.PersonalPermissions ||
                    this.PersonalPermissions != null &&
                    input.PersonalPermissions != null &&
                    this.PersonalPermissions.SequenceEqual(input.PersonalPermissions)
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Permissions == input.Permissions ||
                    this.Permissions != null &&
                    input.Permissions != null &&
                    this.Permissions.SequenceEqual(input.Permissions)
                ) && 
                (
                    this.LastModifiedTime == input.LastModifiedTime ||
                    (this.LastModifiedTime != null &&
                    this.LastModifiedTime.Equals(input.LastModifiedTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ListPermissions != null)
                    hashCode = hashCode * 59 + this.ListPermissions.GetHashCode();
                if (this.SitePermissions != null)
                    hashCode = hashCode * 59 + this.SitePermissions.GetHashCode();
                if (this.PersonalPermissions != null)
                    hashCode = hashCode * 59 + this.PersonalPermissions.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Permissions != null)
                    hashCode = hashCode * 59 + this.Permissions.GetHashCode();
                if (this.LastModifiedTime != null)
                    hashCode = hashCode * 59 + this.LastModifiedTime.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

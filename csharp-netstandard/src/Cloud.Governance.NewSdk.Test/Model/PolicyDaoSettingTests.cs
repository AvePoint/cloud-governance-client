/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;
using Cloud.Governance.NewSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing PolicyDaoSetting
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PolicyDaoSettingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PolicyDaoSetting
        //private PolicyDaoSetting instance;

        public PolicyDaoSettingTests()
        {
            // TODO uncomment below to create an instance of PolicyDaoSetting
            //instance = new PolicyDaoSetting();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PolicyDaoSetting
        /// </summary>
        [Fact]
        public void PolicyDaoSettingInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PolicyDaoSetting
            //Assert.IsInstanceOfType<PolicyDaoSetting> (instance, "variable 'instance' is a PolicyDaoSetting");
        }


        /// <summary>
        /// Test the property 'IsPolicyEnforcerEnabled'
        /// </summary>
        [Fact]
        public void IsPolicyEnforcerEnabledTest()
        {
            // TODO unit test for the property 'IsPolicyEnforcerEnabled'
        }
        /// <summary>
        /// Test the property 'PolicyEnforcerProfile'
        /// </summary>
        [Fact]
        public void PolicyEnforcerProfileTest()
        {
            // TODO unit test for the property 'PolicyEnforcerProfile'
        }
        /// <summary>
        /// Test the property 'IsDpmEnabled'
        /// </summary>
        [Fact]
        public void IsDpmEnabledTest()
        {
            // TODO unit test for the property 'IsDpmEnabled'
        }
        /// <summary>
        /// Test the property 'DpmPlan'
        /// </summary>
        [Fact]
        public void DpmPlanTest()
        {
            // TODO unit test for the property 'DpmPlan'
        }
        /// <summary>
        /// Test the property 'IsBackupEnabled'
        /// </summary>
        [Fact]
        public void IsBackupEnabledTest()
        {
            // TODO unit test for the property 'IsBackupEnabled'
        }
        /// <summary>
        /// Test the property 'IsAuditingEnabled'
        /// </summary>
        [Fact]
        public void IsAuditingEnabledTest()
        {
            // TODO unit test for the property 'IsAuditingEnabled'
        }
        /// <summary>
        /// Test the property 'IsArchiverEnabled'
        /// </summary>
        [Fact]
        public void IsArchiverEnabledTest()
        {
            // TODO unit test for the property 'IsArchiverEnabled'
        }
        /// <summary>
        /// Test the property 'ArchiverProfile'
        /// </summary>
        [Fact]
        public void ArchiverProfileTest()
        {
            // TODO unit test for the property 'ArchiverProfile'
        }
        /// <summary>
        /// Test the property 'ArchiverProcessId'
        /// </summary>
        [Fact]
        public void ArchiverProcessIdTest()
        {
            // TODO unit test for the property 'ArchiverProcessId'
        }

    }

}

/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudGovernanceApi);
  }
}(this, function(expect, CloudGovernanceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudGovernanceApi.SiteProperty();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SiteProperty', function() {
    it('should create an instance of SiteProperty', function() {
      // uncomment below and update the code to test SiteProperty
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be.a(CloudGovernanceApi.SiteProperty);
    });

    it('should have the property department (base name: "department")', function() {
      // uncomment below and update the code to test the property department
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property policy (base name: "policy")', function() {
      // uncomment below and update the code to test the property policy
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property customMetadatas (base name: "customMetadatas")', function() {
      // uncomment below and update the code to test the property customMetadatas
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property siteMaxDepth (base name: "siteMaxDepth")', function() {
      // uncomment below and update the code to test the property siteMaxDepth
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property warningExpiredTimeDate (base name: "warningExpiredTimeDate")', function() {
      // uncomment below and update the code to test the property warningExpiredTimeDate
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property warningExpiredTimeDateType (base name: "warningExpiredTimeDateType")', function() {
      // uncomment below and update the code to test the property warningExpiredTimeDateType
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property expiredTimeDate (base name: "expiredTimeDate")', function() {
      // uncomment below and update the code to test the property expiredTimeDate
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property expiredTimeDateType (base name: "expiredTimeDateType")', function() {
      // uncomment below and update the code to test the property expiredTimeDateType
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property expiredTimeDateWorkflowTemplate (base name: "expiredTimeDateWorkflowTemplate")', function() {
      // uncomment below and update the code to test the property expiredTimeDateWorkflowTemplate
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property expirationPeriodWorkflowStage (base name: "expirationPeriodWorkflowStage")', function() {
      // uncomment below and update the code to test the property expirationPeriodWorkflowStage
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property quotaSize (base name: "quotaSize")', function() {
      // uncomment below and update the code to test the property quotaSize
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property serverResourceQuota (base name: "serverResourceQuota")', function() {
      // uncomment below and update the code to test the property serverResourceQuota
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property caOrAdminCenterUrl (base name: "caOrAdminCenterUrl")', function() {
      // uncomment below and update the code to test the property caOrAdminCenterUrl
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property applyPolicy (base name: "applyPolicy")', function() {
      // uncomment below and update the code to test the property applyPolicy
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property appliedDeploymentPlans (base name: "appliedDeploymentPlans")', function() {
      // uncomment below and update the code to test the property appliedDeploymentPlans
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property additionalActionTime (base name: "additionalActionTime")', function() {
      // uncomment below and update the code to test the property additionalActionTime
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

    it('should have the property quotaThresholdWarningTimes (base name: "quotaThresholdWarningTimes")', function() {
      // uncomment below and update the code to test the property quotaThresholdWarningTimes
      //var instane = new CloudGovernanceApi.SiteProperty();
      //expect(instance).to.be();
    });

  });

}));

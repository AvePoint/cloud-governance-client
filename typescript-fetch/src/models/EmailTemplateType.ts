// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Assigned=0, Rejected=1, Approved=2, </br>Completed=3, NotifyTemplate=4, AdminContactTemplate=5, </br>ExpirationTemplate=6, WarningPeriodTemplate=7, PermissionBeforeExpired=8, </br>RequestModify=9, OwnershipNotifyContact=10, TaskReminderTemplate=11, </br>SiteCollectionStatus=12, UserStatus=13, GroupStatus=14, </br>SendUserPasswordTemplate=15, RequestFailedValidation=16, GroupQuotaThresholdWarning=17, </br>SiteCollectionRenewalReport=18, Office365GroupRenewalReport=19, SiteCollectionRenewalError=20, </br>Office365GroupRenewalError=21, SiteCollectionRenewalGeneratesFailed=22, Office365GroupRenewalGeneratesFailed=23, </br>SiteCollectionRenewalProcessOverdue=24, Office365GroupRenewalProcessOverdue=25, AutoRejectTask=26, </br>SiteQuotaThreshold=27, SCApplyInformation=28, GroupApplyInformation=29, </br>ImportResult=30, ApplyResult=31, DelayedEmailNotification=32, </br>ArchiveTeamEmailNotification=33, Cancelled=34, NotifyApproverRejected=35, </br>
 * @export
 * @enum {string}
 */
export enum EmailTemplateType {
    Assigned = 'Assigned',
    Rejected = 'Rejected',
    Approved = 'Approved',
    Completed = 'Completed',
    NotifyTemplate = 'NotifyTemplate',
    AdminContactTemplate = 'AdminContactTemplate',
    ExpirationTemplate = 'ExpirationTemplate',
    WarningPeriodTemplate = 'WarningPeriodTemplate',
    PermissionBeforeExpired = 'PermissionBeforeExpired',
    RequestModify = 'RequestModify',
    OwnershipNotifyContact = 'OwnershipNotifyContact',
    TaskReminderTemplate = 'TaskReminderTemplate',
    SiteCollectionStatus = 'SiteCollectionStatus',
    UserStatus = 'UserStatus',
    GroupStatus = 'GroupStatus',
    SendUserPasswordTemplate = 'SendUserPasswordTemplate',
    RequestFailedValidation = 'RequestFailedValidation',
    GroupQuotaThresholdWarning = 'GroupQuotaThresholdWarning',
    SiteCollectionRenewalReport = 'SiteCollectionRenewalReport',
    Office365GroupRenewalReport = 'Office365GroupRenewalReport',
    SiteCollectionRenewalError = 'SiteCollectionRenewalError',
    Office365GroupRenewalError = 'Office365GroupRenewalError',
    SiteCollectionRenewalGeneratesFailed = 'SiteCollectionRenewalGeneratesFailed',
    Office365GroupRenewalGeneratesFailed = 'Office365GroupRenewalGeneratesFailed',
    SiteCollectionRenewalProcessOverdue = 'SiteCollectionRenewalProcessOverdue',
    Office365GroupRenewalProcessOverdue = 'Office365GroupRenewalProcessOverdue',
    AutoRejectTask = 'AutoRejectTask',
    SiteQuotaThreshold = 'SiteQuotaThreshold',
    SCApplyInformation = 'SCApplyInformation',
    GroupApplyInformation = 'GroupApplyInformation',
    ImportResult = 'ImportResult',
    ApplyResult = 'ApplyResult',
    DelayedEmailNotification = 'DelayedEmailNotification',
    ArchiveTeamEmailNotification = 'ArchiveTeamEmailNotification',
    Cancelled = 'Cancelled',
    NotifyApproverRejected = 'NotifyApproverRejected'
}

export function EmailTemplateTypeFromJSON(json: any): EmailTemplateType {
    return EmailTemplateTypeFromJSONTyped(json, false);
}

export function EmailTemplateTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailTemplateType {
    return json as EmailTemplateType;
}

export function EmailTemplateTypeToJSON(value?: EmailTemplateType): any {
    return value as any;
}


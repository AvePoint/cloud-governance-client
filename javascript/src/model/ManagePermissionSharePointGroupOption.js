/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiUser from './ApiUser';
import AssignBy from './AssignBy';
import SPGroupEditOption from './SPGroupEditOption';
import SPGroupViewOption from './SPGroupViewOption';

/**
 * The ManagePermissionSharePointGroupOption model module.
 * @module model/ManagePermissionSharePointGroupOption
 * @version 1.0
 */
class ManagePermissionSharePointGroupOption {
    /**
     * Constructs a new <code>ManagePermissionSharePointGroupOption</code>.
     * @alias module:model/ManagePermissionSharePointGroupOption
     */
    constructor() { 
        
        ManagePermissionSharePointGroupOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagePermissionSharePointGroupOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagePermissionSharePointGroupOption} obj Optional instance to populate.
     * @return {module:model/ManagePermissionSharePointGroupOption} The populated <code>ManagePermissionSharePointGroupOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagePermissionSharePointGroupOption();

            if (data.hasOwnProperty('isEnableCreateSPGroup')) {
                obj['isEnableCreateSPGroup'] = ApiClient.convertToType(data['isEnableCreateSPGroup'], 'Boolean');
            }
            if (data.hasOwnProperty('isEnableDeleteSPGroup')) {
                obj['isEnableDeleteSPGroup'] = ApiClient.convertToType(data['isEnableDeleteSPGroup'], 'Boolean');
            }
            if (data.hasOwnProperty('isEnableManageGroupSettings')) {
                obj['isEnableManageGroupSettings'] = ApiClient.convertToType(data['isEnableManageGroupSettings'], 'Boolean');
            }
            if (data.hasOwnProperty('isEnableManageGroupMembers')) {
                obj['isEnableManageGroupMembers'] = ApiClient.convertToType(data['isEnableManageGroupMembers'], 'Boolean');
            }
            if (data.hasOwnProperty('groupOwner')) {
                obj['groupOwner'] = ApiUser.constructFromObject(data['groupOwner']);
            }
            if (data.hasOwnProperty('groupOwnerAssignBy')) {
                obj['groupOwnerAssignBy'] = AssignBy.constructFromObject(data['groupOwnerAssignBy']);
            }
            if (data.hasOwnProperty('spGroupViewType')) {
                obj['spGroupViewType'] = SPGroupViewOption.constructFromObject(data['spGroupViewType']);
            }
            if (data.hasOwnProperty('spGroupEditType')) {
                obj['spGroupEditType'] = SPGroupEditOption.constructFromObject(data['spGroupEditType']);
            }
            if (data.hasOwnProperty('spGroupOptionAssignBy')) {
                obj['spGroupOptionAssignBy'] = AssignBy.constructFromObject(data['spGroupOptionAssignBy']);
            }
            if (data.hasOwnProperty('isAllowJoinOrLeaveRequest')) {
                obj['isAllowJoinOrLeaveRequest'] = ApiClient.convertToType(data['isAllowJoinOrLeaveRequest'], 'Boolean');
            }
            if (data.hasOwnProperty('isAutoAcceptRequest')) {
                obj['isAutoAcceptRequest'] = ApiClient.convertToType(data['isAutoAcceptRequest'], 'Boolean');
            }
            if (data.hasOwnProperty('sendMembershipRequestEmailAddress')) {
                obj['sendMembershipRequestEmailAddress'] = ApiClient.convertToType(data['sendMembershipRequestEmailAddress'], 'String');
            }
            if (data.hasOwnProperty('groupRequestAssignBy')) {
                obj['groupRequestAssignBy'] = AssignBy.constructFromObject(data['groupRequestAssignBy']);
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} isEnableCreateSPGroup
 */
ManagePermissionSharePointGroupOption.prototype['isEnableCreateSPGroup'] = undefined;

/**
 * @member {Boolean} isEnableDeleteSPGroup
 */
ManagePermissionSharePointGroupOption.prototype['isEnableDeleteSPGroup'] = undefined;

/**
 * @member {Boolean} isEnableManageGroupSettings
 */
ManagePermissionSharePointGroupOption.prototype['isEnableManageGroupSettings'] = undefined;

/**
 * @member {Boolean} isEnableManageGroupMembers
 */
ManagePermissionSharePointGroupOption.prototype['isEnableManageGroupMembers'] = undefined;

/**
 * @member {module:model/ApiUser} groupOwner
 */
ManagePermissionSharePointGroupOption.prototype['groupOwner'] = undefined;

/**
 * @member {module:model/AssignBy} groupOwnerAssignBy
 */
ManagePermissionSharePointGroupOption.prototype['groupOwnerAssignBy'] = undefined;

/**
 * @member {module:model/SPGroupViewOption} spGroupViewType
 */
ManagePermissionSharePointGroupOption.prototype['spGroupViewType'] = undefined;

/**
 * @member {module:model/SPGroupEditOption} spGroupEditType
 */
ManagePermissionSharePointGroupOption.prototype['spGroupEditType'] = undefined;

/**
 * @member {module:model/AssignBy} spGroupOptionAssignBy
 */
ManagePermissionSharePointGroupOption.prototype['spGroupOptionAssignBy'] = undefined;

/**
 * @member {Boolean} isAllowJoinOrLeaveRequest
 */
ManagePermissionSharePointGroupOption.prototype['isAllowJoinOrLeaveRequest'] = undefined;

/**
 * @member {Boolean} isAutoAcceptRequest
 */
ManagePermissionSharePointGroupOption.prototype['isAutoAcceptRequest'] = undefined;

/**
 * @member {String} sendMembershipRequestEmailAddress
 */
ManagePermissionSharePointGroupOption.prototype['sendMembershipRequestEmailAddress'] = undefined;

/**
 * @member {module:model/AssignBy} groupRequestAssignBy
 */
ManagePermissionSharePointGroupOption.prototype['groupRequestAssignBy'] = undefined;






export default ManagePermissionSharePointGroupOption;


/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApiUser', 'model/LinkValue', 'model/LookupValue', 'model/MetadataActionType', 'model/MetadataFieldTypeNullable', 'model/TermsValue'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ApiUser'), require('./LinkValue'), require('./LookupValue'), require('./MetadataActionType'), require('./MetadataFieldTypeNullable'), require('./TermsValue'));
  } else {
    // Browser globals (root is window)
    if (!root.CgClient) {
      root.CgClient = {};
    }
    root.CgClient.RequestMetadata = factory(root.CgClient.ApiClient, root.CgClient.ApiUser, root.CgClient.LinkValue, root.CgClient.LookupValue, root.CgClient.MetadataActionType, root.CgClient.MetadataFieldTypeNullable, root.CgClient.TermsValue);
  }
}(this, function(ApiClient, ApiUser, LinkValue, LookupValue, MetadataActionType, MetadataFieldTypeNullable, TermsValue) {
  'use strict';



  /**
   * The RequestMetadata model module.
   * @module model/RequestMetadata
   * @version 1.0
   */

  /**
   * Constructs a new <code>RequestMetadata</code>.
   * @alias module:model/RequestMetadata
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>RequestMetadata</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RequestMetadata} obj Optional instance to populate.
   * @return {module:model/RequestMetadata} The populated <code>RequestMetadata</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('booleanValue')) {
        obj['booleanValue'] = ApiClient.convertToType(data['booleanValue'], 'Boolean');
      }
      if (data.hasOwnProperty('singleLineOrMultipleLineValue')) {
        obj['singleLineOrMultipleLineValue'] = ApiClient.convertToType(data['singleLineOrMultipleLineValue'], 'String');
      }
      if (data.hasOwnProperty('upsOrAzureAdValue')) {
        obj['upsOrAzureAdValue'] = LookupValue.constructFromObject(data['upsOrAzureAdValue']);
      }
      if (data.hasOwnProperty('termsValue')) {
        obj['termsValue'] = TermsValue.constructFromObject(data['termsValue']);
      }
      if (data.hasOwnProperty('userValue')) {
        obj['userValue'] = ApiClient.convertToType(data['userValue'], [ApiUser]);
      }
      if (data.hasOwnProperty('linkValue')) {
        obj['linkValue'] = LinkValue.constructFromObject(data['linkValue']);
      }
      if (data.hasOwnProperty('choiceValue')) {
        obj['choiceValue'] = ApiClient.convertToType(data['choiceValue'], ['String']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], MetadataFieldTypeNullable);
      }
      if (data.hasOwnProperty('valueString')) {
        obj['valueString'] = ApiClient.convertToType(data['valueString'], 'String');
      }
      if (data.hasOwnProperty('action')) {
        obj['action'] = MetadataActionType.constructFromObject(data['action']);
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Boolean} booleanValue
   */
  exports.prototype['booleanValue'] = undefined;
  /**
   * @member {String} singleLineOrMultipleLineValue
   */
  exports.prototype['singleLineOrMultipleLineValue'] = undefined;
  /**
   * @member {module:model/LookupValue} upsOrAzureAdValue
   */
  exports.prototype['upsOrAzureAdValue'] = undefined;
  /**
   * @member {module:model/TermsValue} termsValue
   */
  exports.prototype['termsValue'] = undefined;
  /**
   * @member {Array.<module:model/ApiUser>} userValue
   */
  exports.prototype['userValue'] = undefined;
  /**
   * @member {module:model/LinkValue} linkValue
   */
  exports.prototype['linkValue'] = undefined;
  /**
   * @member {Array.<String>} choiceValue
   */
  exports.prototype['choiceValue'] = undefined;
  /**
   * @member {module:model/MetadataFieldTypeNullable} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {String} valueString
   */
  exports.prototype['valueString'] = undefined;
  /**
   * @member {module:model/MetadataActionType} action
   */
  exports.prototype['action'] = undefined;



  return exports;
}));



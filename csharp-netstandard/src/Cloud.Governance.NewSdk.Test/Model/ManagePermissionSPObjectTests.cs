/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;
using Cloud.Governance.NewSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing ManagePermissionSPObject
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ManagePermissionSPObjectTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ManagePermissionSPObject
        //private ManagePermissionSPObject instance;

        public ManagePermissionSPObjectTests()
        {
            // TODO uncomment below to create an instance of ManagePermissionSPObject
            //instance = new ManagePermissionSPObject();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ManagePermissionSPObject
        /// </summary>
        [Fact]
        public void ManagePermissionSPObjectInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ManagePermissionSPObject
            //Assert.IsInstanceOfType<ManagePermissionSPObject> (instance, "variable 'instance' is a ManagePermissionSPObject");
        }


        /// <summary>
        /// Test the property 'ParentUrl'
        /// </summary>
        [Fact]
        public void ParentUrlTest()
        {
            // TODO unit test for the property 'ParentUrl'
        }
        /// <summary>
        /// Test the property 'ParentNodeType'
        /// </summary>
        [Fact]
        public void ParentNodeTypeTest()
        {
            // TODO unit test for the property 'ParentNodeType'
        }
        /// <summary>
        /// Test the property 'SiteUrl'
        /// </summary>
        [Fact]
        public void SiteUrlTest()
        {
            // TODO unit test for the property 'SiteUrl'
        }
        /// <summary>
        /// Test the property 'WebUrl'
        /// </summary>
        [Fact]
        public void WebUrlTest()
        {
            // TODO unit test for the property 'WebUrl'
        }
        /// <summary>
        /// Test the property 'PrimaryAdministrator'
        /// </summary>
        [Fact]
        public void PrimaryAdministratorTest()
        {
            // TODO unit test for the property 'PrimaryAdministrator'
        }
        /// <summary>
        /// Test the property 'PrimaryContact'
        /// </summary>
        [Fact]
        public void PrimaryContactTest()
        {
            // TODO unit test for the property 'PrimaryContact'
        }
        /// <summary>
        /// Test the property 'SecondaryContact'
        /// </summary>
        [Fact]
        public void SecondaryContactTest()
        {
            // TODO unit test for the property 'SecondaryContact'
        }
        /// <summary>
        /// Test the property 'TemporaryGroupTitle'
        /// </summary>
        [Fact]
        public void TemporaryGroupTitleTest()
        {
            // TODO unit test for the property 'TemporaryGroupTitle'
        }
        /// <summary>
        /// Test the property 'WebId'
        /// </summary>
        [Fact]
        public void WebIdTest()
        {
            // TODO unit test for the property 'WebId'
        }
        /// <summary>
        /// Test the property 'SiteId'
        /// </summary>
        [Fact]
        public void SiteIdTest()
        {
            // TODO unit test for the property 'SiteId'
        }
        /// <summary>
        /// Test the property 'WebServerRelativeUrl'
        /// </summary>
        [Fact]
        public void WebServerRelativeUrlTest()
        {
            // TODO unit test for the property 'WebServerRelativeUrl'
        }
        /// <summary>
        /// Test the property 'ListTitle'
        /// </summary>
        [Fact]
        public void ListTitleTest()
        {
            // TODO unit test for the property 'ListTitle'
        }
        /// <summary>
        /// Test the property 'TopInheritUrl'
        /// </summary>
        [Fact]
        public void TopInheritUrlTest()
        {
            // TODO unit test for the property 'TopInheritUrl'
        }
        /// <summary>
        /// Test the property 'InheritNodeType'
        /// </summary>
        [Fact]
        public void InheritNodeTypeTest()
        {
            // TODO unit test for the property 'InheritNodeType'
        }
        /// <summary>
        /// Test the property 'IsInheritedPermission'
        /// </summary>
        [Fact]
        public void IsInheritedPermissionTest()
        {
            // TODO unit test for the property 'IsInheritedPermission'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'FullUrl'
        /// </summary>
        [Fact]
        public void FullUrlTest()
        {
            // TODO unit test for the property 'FullUrl'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}

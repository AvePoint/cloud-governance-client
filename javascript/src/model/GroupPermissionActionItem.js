/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PermissionActionType from './PermissionActionType';
import PrincipalType from './PrincipalType';
import RecertificationActionType from './RecertificationActionType';
import UserAccessType from './UserAccessType';

/**
 * The GroupPermissionActionItem model module.
 * @module model/GroupPermissionActionItem
 * @version 1.0
 */
class GroupPermissionActionItem {
    /**
     * Constructs a new <code>GroupPermissionActionItem</code>.
     * @alias module:model/GroupPermissionActionItem
     */
    constructor() { 
        
        GroupPermissionActionItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupPermissionActionItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupPermissionActionItem} obj Optional instance to populate.
     * @return {module:model/GroupPermissionActionItem} The populated <code>GroupPermissionActionItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupPermissionActionItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = RecertificationActionType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('actionType')) {
                obj['actionType'] = PermissionActionType.constructFromObject(data['actionType']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('identityName')) {
                obj['identityName'] = ApiClient.convertToType(data['identityName'], 'String');
            }
            if (data.hasOwnProperty('permissionLevel')) {
                obj['permissionLevel'] = ApiClient.convertToType(data['permissionLevel'], 'String');
            }
            if (data.hasOwnProperty('permissionIds')) {
                obj['permissionIds'] = ApiClient.convertToType(data['permissionIds'], ['Number']);
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'Number');
            }
            if (data.hasOwnProperty('titleName')) {
                obj['titleName'] = ApiClient.convertToType(data['titleName'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('sharePointGroup')) {
                obj['sharePointGroup'] = ApiClient.convertToType(data['sharePointGroup'], 'String');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'String');
            }
            if (data.hasOwnProperty('idInSharepoint')) {
                obj['idInSharepoint'] = ApiClient.convertToType(data['idInSharepoint'], 'String');
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'Number');
            }
            if (data.hasOwnProperty('levelDescription')) {
                obj['levelDescription'] = ApiClient.convertToType(data['levelDescription'], 'String');
            }
            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = PrincipalType.constructFromObject(data['accountType']);
            }
            if (data.hasOwnProperty('accountTypeDescription')) {
                obj['accountTypeDescription'] = ApiClient.convertToType(data['accountTypeDescription'], 'String');
            }
            if (data.hasOwnProperty('accessType')) {
                obj['accessType'] = UserAccessType.constructFromObject(data['accessType']);
            }
            if (data.hasOwnProperty('accessTypeDescription')) {
                obj['accessTypeDescription'] = ApiClient.convertToType(data['accessTypeDescription'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
GroupPermissionActionItem.prototype['id'] = undefined;

/**
 * @member {String} instanceId
 */
GroupPermissionActionItem.prototype['instanceId'] = undefined;

/**
 * @member {module:model/RecertificationActionType} type
 */
GroupPermissionActionItem.prototype['type'] = undefined;

/**
 * @member {String} taskId
 */
GroupPermissionActionItem.prototype['taskId'] = undefined;

/**
 * @member {module:model/PermissionActionType} actionType
 */
GroupPermissionActionItem.prototype['actionType'] = undefined;

/**
 * @member {String} displayName
 */
GroupPermissionActionItem.prototype['displayName'] = undefined;

/**
 * @member {String} identityName
 */
GroupPermissionActionItem.prototype['identityName'] = undefined;

/**
 * @member {String} permissionLevel
 */
GroupPermissionActionItem.prototype['permissionLevel'] = undefined;

/**
 * @member {Array.<Number>} permissionIds
 */
GroupPermissionActionItem.prototype['permissionIds'] = undefined;

/**
 * @member {Number} memberId
 */
GroupPermissionActionItem.prototype['memberId'] = undefined;

/**
 * @member {String} titleName
 */
GroupPermissionActionItem.prototype['titleName'] = undefined;

/**
 * @member {String} path
 */
GroupPermissionActionItem.prototype['path'] = undefined;

/**
 * @member {String} sharePointGroup
 */
GroupPermissionActionItem.prototype['sharePointGroup'] = undefined;

/**
 * @member {String} parentId
 */
GroupPermissionActionItem.prototype['parentId'] = undefined;

/**
 * @member {String} idInSharepoint
 */
GroupPermissionActionItem.prototype['idInSharepoint'] = undefined;

/**
 * @member {Number} level
 */
GroupPermissionActionItem.prototype['level'] = undefined;

/**
 * @member {String} levelDescription
 */
GroupPermissionActionItem.prototype['levelDescription'] = undefined;

/**
 * @member {module:model/PrincipalType} accountType
 */
GroupPermissionActionItem.prototype['accountType'] = undefined;

/**
 * @member {String} accountTypeDescription
 */
GroupPermissionActionItem.prototype['accountTypeDescription'] = undefined;

/**
 * @member {module:model/UserAccessType} accessType
 */
GroupPermissionActionItem.prototype['accessType'] = undefined;

/**
 * @member {String} accessTypeDescription
 */
GroupPermissionActionItem.prototype['accessTypeDescription'] = undefined;






export default GroupPermissionActionItem;


// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Running=0, Approved=1, Rejected=2, </br>Canceled=3, TimeOut=4, Completed=5, </br>AutoActionApproved=6, Retried=7, Skipped=8, </br>Submited=9, WaitingForSubmission=10, AllStagesTimeOut=11, </br>Declined=12, WaitingForClaim=13, ElectionTaskTimeOut=14, </br>Claimed=15, AutoComplete=16, WaitingForSpecify=17, </br>PendingConfirm=19, ConfirmOverdue=20, PendingRenewal=21, </br>RenewalExpired=22, ConfirmException=23, RenewalException=24, </br>WaitingForSpecifyBothContacts=25
 * @export
 * @enum {string}
 */
export enum TaskResult {
    Running = 'Running',
    Approved = 'Approved',
    Rejected = 'Rejected',
    Canceled = 'Canceled',
    TimeOut = 'TimeOut',
    Completed = 'Completed',
    AutoActionApproved = 'AutoActionApproved',
    Retried = 'Retried',
    Skipped = 'Skipped',
    Submited = 'Submited',
    WaitingForSubmission = 'WaitingForSubmission',
    AllStagesTimeOut = 'AllStagesTimeOut',
    Declined = 'Declined',
    WaitingForClaim = 'WaitingForClaim',
    ElectionTaskTimeOut = 'ElectionTaskTimeOut',
    Claimed = 'Claimed',
    AutoComplete = 'AutoComplete',
    WaitingForSpecify = 'WaitingForSpecify',
    WaitingForSpecifyBothContacts = 'WaitingForSpecifyBothContacts',
    PendingConfirm = 'PendingConfirm',
    ConfirmOverdue = 'ConfirmOverdue',
    PendingRenewal = 'PendingRenewal',
    RenewalExpired = 'RenewalExpired',
    ConfirmException = 'ConfirmException',
    RenewalException = 'RenewalException'
}

export function TaskResultFromJSON(json: any): TaskResult {
    return TaskResultFromJSONTyped(json, false);
}

export function TaskResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskResult {
    return json as TaskResult;
}

export function TaskResultToJSON(value?: TaskResult): any {
    return value as any;
}


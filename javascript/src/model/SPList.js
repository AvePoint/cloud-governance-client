/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SPList model module.
 * @module model/SPList
 * @version 1.0
 */
class SPList {
    /**
     * Constructs a new <code>SPList</code>.
     * @alias module:model/SPList
     */
    constructor() { 
        
        SPList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SPList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SPList} obj Optional instance to populate.
     * @return {module:model/SPList} The populated <code>SPList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SPList();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isLibrary')) {
                obj['isLibrary'] = ApiClient.convertToType(data['isLibrary'], 'Boolean');
            }
            if (data.hasOwnProperty('isOnQuickLaunch')) {
                obj['isOnQuickLaunch'] = ApiClient.convertToType(data['isOnQuickLaunch'], 'Boolean');
            }
            if (data.hasOwnProperty('isEnableModeration')) {
                obj['isEnableModeration'] = ApiClient.convertToType(data['isEnableModeration'], 'Boolean');
            }
            if (data.hasOwnProperty('isEnableVersioning')) {
                obj['isEnableVersioning'] = ApiClient.convertToType(data['isEnableVersioning'], 'Boolean');
            }
            if (data.hasOwnProperty('isEnableMinorVersion')) {
                obj['isEnableMinorVersion'] = ApiClient.convertToType(data['isEnableMinorVersion'], 'Boolean');
            }
            if (data.hasOwnProperty('majorVersionLimit')) {
                obj['majorVersionLimit'] = ApiClient.convertToType(data['majorVersionLimit'], 'Number');
            }
            if (data.hasOwnProperty('majorWithMinorVersionsLimit')) {
                obj['majorWithMinorVersionsLimit'] = ApiClient.convertToType(data['majorWithMinorVersionsLimit'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
SPList.prototype['id'] = undefined;

/**
 * @member {String} title
 */
SPList.prototype['title'] = undefined;

/**
 * @member {String} url
 */
SPList.prototype['url'] = undefined;

/**
 * @member {String} description
 */
SPList.prototype['description'] = undefined;

/**
 * @member {Boolean} isLibrary
 */
SPList.prototype['isLibrary'] = undefined;

/**
 * @member {Boolean} isOnQuickLaunch
 */
SPList.prototype['isOnQuickLaunch'] = undefined;

/**
 * @member {Boolean} isEnableModeration
 */
SPList.prototype['isEnableModeration'] = undefined;

/**
 * @member {Boolean} isEnableVersioning
 */
SPList.prototype['isEnableVersioning'] = undefined;

/**
 * @member {Boolean} isEnableMinorVersion
 */
SPList.prototype['isEnableMinorVersion'] = undefined;

/**
 * @member {Number} majorVersionLimit
 */
SPList.prototype['majorVersionLimit'] = undefined;

/**
 * @member {Number} majorWithMinorVersionsLimit
 */
SPList.prototype['majorWithMinorVersionsLimit'] = undefined;






export default SPList;


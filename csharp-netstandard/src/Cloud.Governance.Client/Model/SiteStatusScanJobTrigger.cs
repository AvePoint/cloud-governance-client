/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.Client.Client.OpenAPIDateConverter;

namespace Cloud.Governance.Client.Model
{
    /// <summary>
    /// SiteStatusScanJobTrigger
    /// </summary>
    [DataContract]
    public partial class SiteStatusScanJobTrigger :  IEquatable<SiteStatusScanJobTrigger>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets JobType
        /// </summary>
        [DataMember(Name="jobType", EmitDefaultValue=false)]
        public StatusScanDemoJobType? JobType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SiteStatusScanJobTrigger" /> class.
        /// </summary>
        /// <param name="jobType">jobType.</param>
        /// <param name="url">url.</param>
        /// <param name="isEnabled">isEnabled.</param>
        public SiteStatusScanJobTrigger(StatusScanDemoJobType jobType = default(StatusScanDemoJobType), string url = default(string), bool isEnabled = default(bool))
        {
            this.JobType = jobType;
            this.Url = url;
            this.IsEnabled = isEnabled;
        }
        
        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="url", EmitDefaultValue=true)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets IsEnabled
        /// </summary>
        [DataMember(Name="isEnabled", EmitDefaultValue=false)]
        public bool IsEnabled { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SiteStatusScanJobTrigger {\n");
            sb.Append("  JobType: ").Append(JobType).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  IsEnabled: ").Append(IsEnabled).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SiteStatusScanJobTrigger);
        }

        /// <summary>
        /// Returns true if SiteStatusScanJobTrigger instances are equal
        /// </summary>
        /// <param name="input">Instance of SiteStatusScanJobTrigger to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SiteStatusScanJobTrigger input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.JobType == input.JobType ||
                    this.JobType.Equals(input.JobType)
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                ) && 
                (
                    this.IsEnabled == input.IsEnabled ||
                    this.IsEnabled.Equals(input.IsEnabled)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.JobType.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                hashCode = hashCode * 59 + this.IsEnabled.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

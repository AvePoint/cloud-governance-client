// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplyPolicyInfo,
    ApplyPolicyInfoFromJSON,
    ApplyPolicyInfoFromJSONTyped,
    ApplyPolicyInfoToJSON,
    ApprovalProcessStageCollection,
    ApprovalProcessStageCollectionFromJSON,
    ApprovalProcessStageCollectionFromJSONTyped,
    ApprovalProcessStageCollectionToJSON,
    RequestMetadataInfo,
    RequestMetadataInfoFromJSON,
    RequestMetadataInfoFromJSONTyped,
    RequestMetadataInfoToJSON,
    SitePolicyInfo,
    SitePolicyInfoFromJSON,
    SitePolicyInfoFromJSONTyped,
    SitePolicyInfoToJSON,
} from './';

/**
 * 
 * @export
 * @interface SiteProperty
 */
export interface SiteProperty {
    /**
     * 
     * @type {string}
     * @memberof SiteProperty
     */
    department?: string | null;
    /**
     * 
     * @type {SitePolicyInfo}
     * @memberof SiteProperty
     */
    policy?: SitePolicyInfo;
    /**
     * 
     * @type {Array<RequestMetadataInfo>}
     * @memberof SiteProperty
     */
    customMetadatas?: Array<RequestMetadataInfo> | null;
    /**
     * 
     * @type {string}
     * @memberof SiteProperty
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SiteProperty
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    siteMaxDepth?: number;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    warningExpiredTimeDate?: number;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    warningExpiredTimeDateType?: number;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    expiredTimeDate?: number;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    expiredTimeDateType?: number;
    /**
     * 
     * @type {string}
     * @memberof SiteProperty
     */
    expiredTimeDateWorkflowTemplate?: string;
    /**
     * 
     * @type {ApprovalProcessStageCollection}
     * @memberof SiteProperty
     */
    expirationPeriodWorkflowStage?: ApprovalProcessStageCollection;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    quotaSize?: number;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    serverResourceQuota?: number;
    /**
     * 
     * @type {string}
     * @memberof SiteProperty
     */
    caOrAdminCenterUrl?: string | null;
    /**
     * 
     * @type {ApplyPolicyInfo}
     * @memberof SiteProperty
     */
    applyPolicy?: ApplyPolicyInfo;
    /**
     * 
     * @type {string}
     * @memberof SiteProperty
     */
    appliedDeploymentPlans?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof SiteProperty
     */
    additionalActionTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof SiteProperty
     */
    quotaThresholdWarningTimes?: number;
}

export function SitePropertyFromJSON(json: any): SiteProperty {
    return SitePropertyFromJSONTyped(json, false);
}

export function SitePropertyFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteProperty {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'department': !exists(json, 'department') ? undefined : json['department'],
        'policy': !exists(json, 'policy') ? undefined : SitePolicyInfoFromJSON(json['policy']),
        'customMetadatas': !exists(json, 'customMetadatas') ? undefined : (json['customMetadatas'] as Array<any>).map(RequestMetadataInfoFromJSON),
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'siteMaxDepth': !exists(json, 'siteMaxDepth') ? undefined : json['siteMaxDepth'],
        'warningExpiredTimeDate': !exists(json, 'warningExpiredTimeDate') ? undefined : json['warningExpiredTimeDate'],
        'warningExpiredTimeDateType': !exists(json, 'warningExpiredTimeDateType') ? undefined : json['warningExpiredTimeDateType'],
        'expiredTimeDate': !exists(json, 'expiredTimeDate') ? undefined : json['expiredTimeDate'],
        'expiredTimeDateType': !exists(json, 'expiredTimeDateType') ? undefined : json['expiredTimeDateType'],
        'expiredTimeDateWorkflowTemplate': !exists(json, 'expiredTimeDateWorkflowTemplate') ? undefined : json['expiredTimeDateWorkflowTemplate'],
        'expirationPeriodWorkflowStage': !exists(json, 'expirationPeriodWorkflowStage') ? undefined : ApprovalProcessStageCollectionFromJSON(json['expirationPeriodWorkflowStage']),
        'quotaSize': !exists(json, 'quotaSize') ? undefined : json['quotaSize'],
        'serverResourceQuota': !exists(json, 'serverResourceQuota') ? undefined : json['serverResourceQuota'],
        'caOrAdminCenterUrl': !exists(json, 'caOrAdminCenterUrl') ? undefined : json['caOrAdminCenterUrl'],
        'applyPolicy': !exists(json, 'applyPolicy') ? undefined : ApplyPolicyInfoFromJSON(json['applyPolicy']),
        'appliedDeploymentPlans': !exists(json, 'appliedDeploymentPlans') ? undefined : json['appliedDeploymentPlans'],
        'additionalActionTime': !exists(json, 'additionalActionTime') ? undefined : new Date(json['additionalActionTime']),
        'quotaThresholdWarningTimes': !exists(json, 'quotaThresholdWarningTimes') ? undefined : json['quotaThresholdWarningTimes'],
    };
}

export function SitePropertyToJSON(value?: SiteProperty | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'department': value.department,
        'policy': SitePolicyInfoToJSON(value.policy),
        'customMetadatas': value.customMetadatas == null ? undefined : (value.customMetadatas as Array<any>).map(RequestMetadataInfoToJSON),
        'title': value.title,
        'description': value.description,
        'siteMaxDepth': value.siteMaxDepth,
        'warningExpiredTimeDate': value.warningExpiredTimeDate,
        'warningExpiredTimeDateType': value.warningExpiredTimeDateType,
        'expiredTimeDate': value.expiredTimeDate,
        'expiredTimeDateType': value.expiredTimeDateType,
        'expiredTimeDateWorkflowTemplate': value.expiredTimeDateWorkflowTemplate,
        'expirationPeriodWorkflowStage': ApprovalProcessStageCollectionToJSON(value.expirationPeriodWorkflowStage),
        'quotaSize': value.quotaSize,
        'serverResourceQuota': value.serverResourceQuota,
        'caOrAdminCenterUrl': value.caOrAdminCenterUrl,
        'applyPolicy': ApplyPolicyInfoToJSON(value.applyPolicy),
        'appliedDeploymentPlans': value.appliedDeploymentPlans,
        'additionalActionTime': value.additionalActionTime == null ? undefined : value.additionalActionTime.toISOString(),
        'quotaThresholdWarningTimes': value.quotaThresholdWarningTimes,
    };
}



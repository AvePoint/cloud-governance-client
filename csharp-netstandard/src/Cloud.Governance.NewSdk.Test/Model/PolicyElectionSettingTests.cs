/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloud.Governance.NewSdk.Api;
using Cloud.Governance.NewSdk.Model;
using Cloud.Governance.NewSdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloud.Governance.NewSdk.Test
{
    /// <summary>
    ///  Class for testing PolicyElectionSetting
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PolicyElectionSettingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PolicyElectionSetting
        //private PolicyElectionSetting instance;

        public PolicyElectionSettingTests()
        {
            // TODO uncomment below to create an instance of PolicyElectionSetting
            //instance = new PolicyElectionSetting();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PolicyElectionSetting
        /// </summary>
        [Fact]
        public void PolicyElectionSettingInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PolicyElectionSetting
            //Assert.IsInstanceOfType<PolicyElectionSetting> (instance, "variable 'instance' is a PolicyElectionSetting");
        }


        /// <summary>
        /// Test the property 'IsEnabled'
        /// </summary>
        [Fact]
        public void IsEnabledTest()
        {
            // TODO unit test for the property 'IsEnabled'
        }
        /// <summary>
        /// Test the property 'ExcludeUsers'
        /// </summary>
        [Fact]
        public void ExcludeUsersTest()
        {
            // TODO unit test for the property 'ExcludeUsers'
        }
        /// <summary>
        /// Test the property 'IsNotifyTaskEnabled'
        /// </summary>
        [Fact]
        public void IsNotifyTaskEnabledTest()
        {
            // TODO unit test for the property 'IsNotifyTaskEnabled'
        }
        /// <summary>
        /// Test the property 'TaskEmailTemplate'
        /// </summary>
        [Fact]
        public void TaskEmailTemplateTest()
        {
            // TODO unit test for the property 'TaskEmailTemplate'
        }
        /// <summary>
        /// Test the property 'IsNotifyPrimaryContactEnabled'
        /// </summary>
        [Fact]
        public void IsNotifyPrimaryContactEnabledTest()
        {
            // TODO unit test for the property 'IsNotifyPrimaryContactEnabled'
        }
        /// <summary>
        /// Test the property 'NotifyPrimaryContactTemplate'
        /// </summary>
        [Fact]
        public void NotifyPrimaryContactTemplateTest()
        {
            // TODO unit test for the property 'NotifyPrimaryContactTemplate'
        }
        /// <summary>
        /// Test the property 'IsNotifySecondaryContactEnabled'
        /// </summary>
        [Fact]
        public void IsNotifySecondaryContactEnabledTest()
        {
            // TODO unit test for the property 'IsNotifySecondaryContactEnabled'
        }
        /// <summary>
        /// Test the property 'NotifySecondaryContactTemplate'
        /// </summary>
        [Fact]
        public void NotifySecondaryContactTemplateTest()
        {
            // TODO unit test for the property 'NotifySecondaryContactTemplate'
        }
        /// <summary>
        /// Test the property 'Duration'
        /// </summary>
        [Fact]
        public void DurationTest()
        {
            // TODO unit test for the property 'Duration'
        }
        /// <summary>
        /// Test the property 'DurationType'
        /// </summary>
        [Fact]
        public void DurationTypeTest()
        {
            // TODO unit test for the property 'DurationType'
        }
        /// <summary>
        /// Test the property 'IsReminderEnabled'
        /// </summary>
        [Fact]
        public void IsReminderEnabledTest()
        {
            // TODO unit test for the property 'IsReminderEnabled'
        }
        /// <summary>
        /// Test the property 'ReminderProfileId'
        /// </summary>
        [Fact]
        public void ReminderProfileIdTest()
        {
            // TODO unit test for the property 'ReminderProfileId'
        }
        /// <summary>
        /// Test the property 'EnableOnlyOtherContactElection'
        /// </summary>
        [Fact]
        public void EnableOnlyOtherContactElectionTest()
        {
            // TODO unit test for the property 'EnableOnlyOtherContactElection'
        }

    }

}

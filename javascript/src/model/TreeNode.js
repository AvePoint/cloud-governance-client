/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TreeNodeExtension from './TreeNodeExtension';
import TreeNodeType from './TreeNodeType';

/**
 * The TreeNode model module.
 * @module model/TreeNode
 * @version 1.0
 */
class TreeNode {
    /**
     * Constructs a new <code>TreeNode</code>.
     * @alias module:model/TreeNode
     */
    constructor() { 
        
        TreeNode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TreeNode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TreeNode} obj Optional instance to populate.
     * @return {module:model/TreeNode} The populated <code>TreeNode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TreeNode();

            if (data.hasOwnProperty('webApplicationId')) {
                obj['webApplicationId'] = ApiClient.convertToType(data['webApplicationId'], 'String');
            }
            if (data.hasOwnProperty('webApplicationUri')) {
                obj['webApplicationUri'] = ApiClient.convertToType(data['webApplicationUri'], 'String');
            }
            if (data.hasOwnProperty('siteCollectionId')) {
                obj['siteCollectionId'] = ApiClient.convertToType(data['siteCollectionId'], 'String');
            }
            if (data.hasOwnProperty('siteCollectionUrl')) {
                obj['siteCollectionUrl'] = ApiClient.convertToType(data['siteCollectionUrl'], 'String');
            }
            if (data.hasOwnProperty('siteId')) {
                obj['siteId'] = ApiClient.convertToType(data['siteId'], 'String');
            }
            if (data.hasOwnProperty('nodeId')) {
                obj['nodeId'] = ApiClient.convertToType(data['nodeId'], 'String');
            }
            if (data.hasOwnProperty('startIndex')) {
                obj['startIndex'] = ApiClient.convertToType(data['startIndex'], 'Number');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pageIndex')) {
                obj['pageIndex'] = ApiClient.convertToType(data['pageIndex'], 'Number');
            }
            if (data.hasOwnProperty('fullCount')) {
                obj['fullCount'] = ApiClient.convertToType(data['fullCount'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('managedPath')) {
                obj['managedPath'] = ApiClient.convertToType(data['managedPath'], 'String');
            }
            if (data.hasOwnProperty('agentID')) {
                obj['agentID'] = ApiClient.convertToType(data['agentID'], 'String');
            }
            if (data.hasOwnProperty('fullPath')) {
                obj['fullPath'] = ApiClient.convertToType(data['fullPath'], 'String');
            }
            if (data.hasOwnProperty('farmName')) {
                obj['farmName'] = ApiClient.convertToType(data['farmName'], 'String');
            }
            if (data.hasOwnProperty('hasNextPage')) {
                obj['hasNextPage'] = ApiClient.convertToType(data['hasNextPage'], 'Boolean');
            }
            if (data.hasOwnProperty('farmID')) {
                obj['farmID'] = ApiClient.convertToType(data['farmID'], 'String');
            }
            if (data.hasOwnProperty('parentID')) {
                obj['parentID'] = ApiClient.convertToType(data['parentID'], 'String');
            }
            if (data.hasOwnProperty('extension')) {
                obj['extension'] = TreeNodeExtension.constructFromObject(data['extension']);
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = TreeNode.constructFromObject(data['parent']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = TreeNodeType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('spObjectID')) {
                obj['spObjectID'] = ApiClient.convertToType(data['spObjectID'], 'String');
            }
            if (data.hasOwnProperty('parentSPObjectID')) {
                obj['parentSPObjectID'] = ApiClient.convertToType(data['parentSPObjectID'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('loadManagedPath')) {
                obj['loadManagedPath'] = ApiClient.convertToType(data['loadManagedPath'], 'Boolean');
            }
            if (data.hasOwnProperty('loadChildrenFromDB')) {
                obj['loadChildrenFromDB'] = ApiClient.convertToType(data['loadChildrenFromDB'], 'Boolean');
            }
            if (data.hasOwnProperty('loadedPageCount')) {
                obj['loadedPageCount'] = ApiClient.convertToType(data['loadedPageCount'], 'Number');
            }
            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], [TreeNode]);
            }
            if (data.hasOwnProperty('selectedChildren')) {
                obj['selectedChildren'] = ApiClient.convertToType(data['selectedChildren'], [TreeNode]);
            }
            if (data.hasOwnProperty('filterUrls')) {
                obj['filterUrls'] = ApiClient.convertToType(data['filterUrls'], 'String');
            }
            if (data.hasOwnProperty('filterType')) {
                obj['filterType'] = ApiClient.convertToType(data['filterType'], 'Number');
            }
            if (data.hasOwnProperty('checkNumber')) {
                obj['checkNumber'] = ApiClient.convertToType(data['checkNumber'], 'Number');
            }
            if (data.hasOwnProperty('selectedWebAppId_SubSiteProvServ')) {
                obj['selectedWebAppId_SubSiteProvServ'] = ApiClient.convertToType(data['selectedWebAppId_SubSiteProvServ'], 'String');
            }
            if (data.hasOwnProperty('selectedSiteCollIds_SubSiteProvServ')) {
                obj['selectedSiteCollIds_SubSiteProvServ'] = ApiClient.convertToType(data['selectedSiteCollIds_SubSiteProvServ'], 'String');
            }
            if (data.hasOwnProperty('childrenType')) {
                obj['childrenType'] = ApiClient.convertToType(data['childrenType'], 'Number');
            }
            if (data.hasOwnProperty('listId')) {
                obj['listId'] = ApiClient.convertToType(data['listId'], 'String');
            }
            if (data.hasOwnProperty('serverRelativeUrl')) {
                obj['serverRelativeUrl'] = ApiClient.convertToType(data['serverRelativeUrl'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} webApplicationId
 */
TreeNode.prototype['webApplicationId'] = undefined;

/**
 * @member {String} webApplicationUri
 */
TreeNode.prototype['webApplicationUri'] = undefined;

/**
 * @member {String} siteCollectionId
 */
TreeNode.prototype['siteCollectionId'] = undefined;

/**
 * @member {String} siteCollectionUrl
 */
TreeNode.prototype['siteCollectionUrl'] = undefined;

/**
 * @member {String} siteId
 */
TreeNode.prototype['siteId'] = undefined;

/**
 * @member {String} nodeId
 */
TreeNode.prototype['nodeId'] = undefined;

/**
 * @member {Number} startIndex
 */
TreeNode.prototype['startIndex'] = undefined;

/**
 * @member {Number} pageSize
 */
TreeNode.prototype['pageSize'] = undefined;

/**
 * @member {Number} pageIndex
 */
TreeNode.prototype['pageIndex'] = undefined;

/**
 * @member {Number} fullCount
 */
TreeNode.prototype['fullCount'] = undefined;

/**
 * @member {String} name
 */
TreeNode.prototype['name'] = undefined;

/**
 * @member {String} title
 */
TreeNode.prototype['title'] = undefined;

/**
 * @member {String} description
 */
TreeNode.prototype['description'] = undefined;

/**
 * @member {String} displayName
 */
TreeNode.prototype['displayName'] = undefined;

/**
 * @member {String} managedPath
 */
TreeNode.prototype['managedPath'] = undefined;

/**
 * @member {String} agentID
 */
TreeNode.prototype['agentID'] = undefined;

/**
 * @member {String} fullPath
 */
TreeNode.prototype['fullPath'] = undefined;

/**
 * @member {String} farmName
 */
TreeNode.prototype['farmName'] = undefined;

/**
 * @member {Boolean} hasNextPage
 */
TreeNode.prototype['hasNextPage'] = undefined;

/**
 * @member {String} farmID
 */
TreeNode.prototype['farmID'] = undefined;

/**
 * @member {String} parentID
 */
TreeNode.prototype['parentID'] = undefined;

/**
 * @member {module:model/TreeNodeExtension} extension
 */
TreeNode.prototype['extension'] = undefined;

/**
 * @member {module:model/TreeNode} parent
 */
TreeNode.prototype['parent'] = undefined;

/**
 * @member {module:model/TreeNodeType} type
 */
TreeNode.prototype['type'] = undefined;

/**
 * @member {String} spObjectID
 */
TreeNode.prototype['spObjectID'] = undefined;

/**
 * @member {String} parentSPObjectID
 */
TreeNode.prototype['parentSPObjectID'] = undefined;

/**
 * @member {String} id
 */
TreeNode.prototype['id'] = undefined;

/**
 * @member {Boolean} loadManagedPath
 */
TreeNode.prototype['loadManagedPath'] = undefined;

/**
 * @member {Boolean} loadChildrenFromDB
 */
TreeNode.prototype['loadChildrenFromDB'] = undefined;

/**
 * @member {Number} loadedPageCount
 */
TreeNode.prototype['loadedPageCount'] = undefined;

/**
 * @member {Array.<module:model/TreeNode>} children
 */
TreeNode.prototype['children'] = undefined;

/**
 * @member {Array.<module:model/TreeNode>} selectedChildren
 */
TreeNode.prototype['selectedChildren'] = undefined;

/**
 * @member {String} filterUrls
 */
TreeNode.prototype['filterUrls'] = undefined;

/**
 * @member {Number} filterType
 */
TreeNode.prototype['filterType'] = undefined;

/**
 * @member {Number} checkNumber
 */
TreeNode.prototype['checkNumber'] = undefined;

/**
 * @member {String} selectedWebAppId_SubSiteProvServ
 */
TreeNode.prototype['selectedWebAppId_SubSiteProvServ'] = undefined;

/**
 * @member {String} selectedSiteCollIds_SubSiteProvServ
 */
TreeNode.prototype['selectedSiteCollIds_SubSiteProvServ'] = undefined;

/**
 * @member {Number} childrenType
 */
TreeNode.prototype['childrenType'] = undefined;

/**
 * @member {String} listId
 */
TreeNode.prototype['listId'] = undefined;

/**
 * @member {String} serverRelativeUrl
 */
TreeNode.prototype['serverRelativeUrl'] = undefined;

/**
 * @member {String} userName
 */
TreeNode.prototype['userName'] = undefined;






export default TreeNode;


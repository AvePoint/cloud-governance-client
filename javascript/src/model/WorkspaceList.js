/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoImportPhase from './AutoImportPhase';
import SiteStatus from './SiteStatus';
import WorkspaceType from './WorkspaceType';

/**
 * The WorkspaceList model module.
 * @module model/WorkspaceList
 * @version 1.0
 */
class WorkspaceList {
    /**
     * Constructs a new <code>WorkspaceList</code>.
     * @alias module:model/WorkspaceList
     */
    constructor() { 
        
        WorkspaceList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkspaceList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkspaceList} obj Optional instance to populate.
     * @return {module:model/WorkspaceList} The populated <code>WorkspaceList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkspaceList();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = WorkspaceType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('siteUrl')) {
                obj['siteUrl'] = ApiClient.convertToType(data['siteUrl'], 'String');
            }
            if (data.hasOwnProperty('groupEmail')) {
                obj['groupEmail'] = ApiClient.convertToType(data['groupEmail'], 'String');
            }
            if (data.hasOwnProperty('typeDescription')) {
                obj['typeDescription'] = ApiClient.convertToType(data['typeDescription'], 'String');
            }
            if (data.hasOwnProperty('primaryContact')) {
                obj['primaryContact'] = ApiClient.convertToType(data['primaryContact'], 'String');
            }
            if (data.hasOwnProperty('primaryContactEmail')) {
                obj['primaryContactEmail'] = ApiClient.convertToType(data['primaryContactEmail'], 'String');
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = AutoImportPhase.constructFromObject(data['phase']);
            }
            if (data.hasOwnProperty('phaseDescription')) {
                obj['phaseDescription'] = ApiClient.convertToType(data['phaseDescription'], 'String');
            }
            if (data.hasOwnProperty('isCurrentRenewer')) {
                obj['isCurrentRenewer'] = ApiClient.convertToType(data['isCurrentRenewer'], 'Boolean');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = SiteStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('autoImportProfileId')) {
                obj['autoImportProfileId'] = ApiClient.convertToType(data['autoImportProfileId'], 'String');
            }
            if (data.hasOwnProperty('pendingAction')) {
                obj['pendingAction'] = ApiClient.convertToType(data['pendingAction'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
WorkspaceList.prototype['id'] = undefined;

/**
 * @member {String} name
 */
WorkspaceList.prototype['name'] = undefined;

/**
 * @member {module:model/WorkspaceType} type
 */
WorkspaceList.prototype['type'] = undefined;

/**
 * @member {String} siteUrl
 */
WorkspaceList.prototype['siteUrl'] = undefined;

/**
 * @member {String} groupEmail
 */
WorkspaceList.prototype['groupEmail'] = undefined;

/**
 * @member {String} typeDescription
 */
WorkspaceList.prototype['typeDescription'] = undefined;

/**
 * @member {String} primaryContact
 */
WorkspaceList.prototype['primaryContact'] = undefined;

/**
 * @member {String} primaryContactEmail
 */
WorkspaceList.prototype['primaryContactEmail'] = undefined;

/**
 * @member {module:model/AutoImportPhase} phase
 */
WorkspaceList.prototype['phase'] = undefined;

/**
 * @member {String} phaseDescription
 */
WorkspaceList.prototype['phaseDescription'] = undefined;

/**
 * @member {Boolean} isCurrentRenewer
 */
WorkspaceList.prototype['isCurrentRenewer'] = undefined;

/**
 * @member {Date} createdTime
 */
WorkspaceList.prototype['createdTime'] = undefined;

/**
 * @member {module:model/SiteStatus} status
 */
WorkspaceList.prototype['status'] = undefined;

/**
 * @member {String} autoImportProfileId
 */
WorkspaceList.prototype['autoImportProfileId'] = undefined;

/**
 * @member {Number} pendingAction
 */
WorkspaceList.prototype['pendingAction'] = undefined;






export default WorkspaceList;


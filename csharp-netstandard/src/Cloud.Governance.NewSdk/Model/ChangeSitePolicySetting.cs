/* 
 * Cloud Governance Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloud.Governance.NewSdk.Client.OpenAPIDateConverter;

namespace Cloud.Governance.NewSdk.Model
{
    /// <summary>
    /// ChangeSitePolicySetting
    /// </summary>
    [DataContract]
    public partial class ChangeSitePolicySetting :  IEquatable<ChangeSitePolicySetting>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChangeSitePolicySetting" /> class.
        /// </summary>
        /// <param name="currentPolicy">currentPolicy.</param>
        /// <param name="allPolicies">allPolicies.</param>
        public ChangeSitePolicySetting(GuidModel currentPolicy = default(GuidModel), List<GuidModel> allPolicies = default(List<GuidModel>))
        {
            this.AllPolicies = allPolicies;
            this.CurrentPolicy = currentPolicy;
            this.AllPolicies = allPolicies;
        }
        
        /// <summary>
        /// Gets or Sets CurrentPolicy
        /// </summary>
        [DataMember(Name="currentPolicy", EmitDefaultValue=false)]
        public GuidModel CurrentPolicy { get; set; }

        /// <summary>
        /// Gets or Sets AllPolicies
        /// </summary>
        [DataMember(Name="allPolicies", EmitDefaultValue=true)]
        public List<GuidModel> AllPolicies { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ChangeSitePolicySetting {\n");
            sb.Append("  CurrentPolicy: ").Append(CurrentPolicy).Append("\n");
            sb.Append("  AllPolicies: ").Append(AllPolicies).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ChangeSitePolicySetting);
        }

        /// <summary>
        /// Returns true if ChangeSitePolicySetting instances are equal
        /// </summary>
        /// <param name="input">Instance of ChangeSitePolicySetting to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ChangeSitePolicySetting input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CurrentPolicy == input.CurrentPolicy ||
                    (this.CurrentPolicy != null &&
                    this.CurrentPolicy.Equals(input.CurrentPolicy))
                ) && 
                (
                    this.AllPolicies == input.AllPolicies ||
                    this.AllPolicies != null &&
                    input.AllPolicies != null &&
                    this.AllPolicies.SequenceEqual(input.AllPolicies)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CurrentPolicy != null)
                    hashCode = hashCode * 59 + this.CurrentPolicy.GetHashCode();
                if (this.AllPolicies != null)
                    hashCode = hashCode * 59 + this.AllPolicies.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

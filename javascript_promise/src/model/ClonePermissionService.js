/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApiUser', 'model/AssignBy', 'model/ClonePermissionAdditionalOption', 'model/ClonePermissionOption', 'model/CommonStatus', 'model/CustomActionSettings', 'model/CustomMetadata', 'model/ServiceScopeSettings', 'model/ServiceType', 'model/TreeNode', 'model/UserLevelRestrictionType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ApiUser'), require('./AssignBy'), require('./ClonePermissionAdditionalOption'), require('./ClonePermissionOption'), require('./CommonStatus'), require('./CustomActionSettings'), require('./CustomMetadata'), require('./ServiceScopeSettings'), require('./ServiceType'), require('./TreeNode'), require('./UserLevelRestrictionType'));
  } else {
    // Browser globals (root is window)
    if (!root.CgClient) {
      root.CgClient = {};
    }
    root.CgClient.ClonePermissionService = factory(root.CgClient.ApiClient, root.CgClient.ApiUser, root.CgClient.AssignBy, root.CgClient.ClonePermissionAdditionalOption, root.CgClient.ClonePermissionOption, root.CgClient.CommonStatus, root.CgClient.CustomActionSettings, root.CgClient.CustomMetadata, root.CgClient.ServiceScopeSettings, root.CgClient.ServiceType, root.CgClient.TreeNode, root.CgClient.UserLevelRestrictionType);
  }
}(this, function(ApiClient, ApiUser, AssignBy, ClonePermissionAdditionalOption, ClonePermissionOption, CommonStatus, CustomActionSettings, CustomMetadata, ServiceScopeSettings, ServiceType, TreeNode, UserLevelRestrictionType) {
  'use strict';



  /**
   * The ClonePermissionService model module.
   * @module model/ClonePermissionService
   * @version 1.0
   */

  /**
   * Constructs a new <code>ClonePermissionService</code>.
   * @alias module:model/ClonePermissionService
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ClonePermissionService</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ClonePermissionService} obj Optional instance to populate.
   * @return {module:model/ClonePermissionService} The populated <code>ClonePermissionService</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('selectedNodes')) {
        obj['selectedNodes'] = ApiClient.convertToType(data['selectedNodes'], [TreeNode]);
      }
      if (data.hasOwnProperty('uncheckedNodes')) {
        obj['uncheckedNodes'] = ApiClient.convertToType(data['uncheckedNodes'], [TreeNode]);
      }
      if (data.hasOwnProperty('sourceUserRestrictionType')) {
        obj['sourceUserRestrictionType'] = UserLevelRestrictionType.constructFromObject(data['sourceUserRestrictionType']);
      }
      if (data.hasOwnProperty('targetUserRestrictionType')) {
        obj['targetUserRestrictionType'] = UserLevelRestrictionType.constructFromObject(data['targetUserRestrictionType']);
      }
      if (data.hasOwnProperty('cloneOption')) {
        obj['cloneOption'] = ClonePermissionOption.constructFromObject(data['cloneOption']);
      }
      if (data.hasOwnProperty('clonePermissionAssignBy')) {
        obj['clonePermissionAssignBy'] = AssignBy.constructFromObject(data['clonePermissionAssignBy']);
      }
      if (data.hasOwnProperty('additionalCloneOption')) {
        obj['additionalCloneOption'] = ClonePermissionAdditionalOption.constructFromObject(data['additionalCloneOption']);
      }
      if (data.hasOwnProperty('cloneAdditionalOptionAssignBy')) {
        obj['cloneAdditionalOptionAssignBy'] = AssignBy.constructFromObject(data['cloneAdditionalOptionAssignBy']);
      }
      if (data.hasOwnProperty('enabledRemoveExplicitPermission')) {
        obj['enabledRemoveExplicitPermission'] = ApiClient.convertToType(data['enabledRemoveExplicitPermission'], 'Boolean');
      }
      if (data.hasOwnProperty('enabledRemoveUserFromSPGroup')) {
        obj['enabledRemoveUserFromSPGroup'] = ApiClient.convertToType(data['enabledRemoveUserFromSPGroup'], 'Boolean');
      }
      if (data.hasOwnProperty('enabledDeleteUserPermission')) {
        obj['enabledDeleteUserPermission'] = ApiClient.convertToType(data['enabledDeleteUserPermission'], 'Boolean');
      }
      if (data.hasOwnProperty('transferOptionValueAssignBy')) {
        obj['transferOptionValueAssignBy'] = AssignBy.constructFromObject(data['transferOptionValueAssignBy']);
      }
      if (data.hasOwnProperty('isHideTree')) {
        obj['isHideTree'] = ApiClient.convertToType(data['isHideTree'], 'Boolean');
      }
      if (data.hasOwnProperty('scopeSettings')) {
        obj['scopeSettings'] = ServiceScopeSettings.constructFromObject(data['scopeSettings']);
      }
      if (data.hasOwnProperty('departmentAssignBy')) {
        obj['departmentAssignBy'] = AssignBy.constructFromObject(data['departmentAssignBy']);
      }
      if (data.hasOwnProperty('metadatas')) {
        obj['metadatas'] = ApiClient.convertToType(data['metadatas'], [CustomMetadata]);
      }
      if (data.hasOwnProperty('hideRequestSummary')) {
        obj['hideRequestSummary'] = ApiClient.convertToType(data['hideRequestSummary'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ServiceType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('department')) {
        obj['department'] = ApiClient.convertToType(data['department'], 'String');
      }
      if (data.hasOwnProperty('loadDepartmentFromUps')) {
        obj['loadDepartmentFromUps'] = ApiClient.convertToType(data['loadDepartmentFromUps'], 'Boolean');
      }
      if (data.hasOwnProperty('departments')) {
        obj['departments'] = ApiClient.convertToType(data['departments'], ['String']);
      }
      if (data.hasOwnProperty('serviceContact')) {
        obj['serviceContact'] = ApiUser.constructFromObject(data['serviceContact']);
      }
      if (data.hasOwnProperty('serviceAdminContact')) {
        obj['serviceAdminContact'] = ApiUser.constructFromObject(data['serviceAdminContact']);
      }
      if (data.hasOwnProperty('approversContainManagerRole')) {
        obj['approversContainManagerRole'] = ApiClient.convertToType(data['approversContainManagerRole'], 'Boolean');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = CommonStatus.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('showServiceInCatalog')) {
        obj['showServiceInCatalog'] = ApiClient.convertToType(data['showServiceInCatalog'], 'Boolean');
      }
      if (data.hasOwnProperty('customActions')) {
        obj['customActions'] = CustomActionSettings.constructFromObject(data['customActions']);
      }
      if (data.hasOwnProperty('approvalProcessId')) {
        obj['approvalProcessId'] = ApiClient.convertToType(data['approvalProcessId'], 'String');
      }
      if (data.hasOwnProperty('languageId')) {
        obj['languageId'] = ApiClient.convertToType(data['languageId'], 'Number');
      }
      if (data.hasOwnProperty('categoryId')) {
        obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/TreeNode>} selectedNodes
   */
  exports.prototype['selectedNodes'] = undefined;
  /**
   * @member {Array.<module:model/TreeNode>} uncheckedNodes
   */
  exports.prototype['uncheckedNodes'] = undefined;
  /**
   * @member {module:model/UserLevelRestrictionType} sourceUserRestrictionType
   */
  exports.prototype['sourceUserRestrictionType'] = undefined;
  /**
   * @member {module:model/UserLevelRestrictionType} targetUserRestrictionType
   */
  exports.prototype['targetUserRestrictionType'] = undefined;
  /**
   * @member {module:model/ClonePermissionOption} cloneOption
   */
  exports.prototype['cloneOption'] = undefined;
  /**
   * @member {module:model/AssignBy} clonePermissionAssignBy
   */
  exports.prototype['clonePermissionAssignBy'] = undefined;
  /**
   * @member {module:model/ClonePermissionAdditionalOption} additionalCloneOption
   */
  exports.prototype['additionalCloneOption'] = undefined;
  /**
   * @member {module:model/AssignBy} cloneAdditionalOptionAssignBy
   */
  exports.prototype['cloneAdditionalOptionAssignBy'] = undefined;
  /**
   * @member {Boolean} enabledRemoveExplicitPermission
   */
  exports.prototype['enabledRemoveExplicitPermission'] = undefined;
  /**
   * @member {Boolean} enabledRemoveUserFromSPGroup
   */
  exports.prototype['enabledRemoveUserFromSPGroup'] = undefined;
  /**
   * @member {Boolean} enabledDeleteUserPermission
   */
  exports.prototype['enabledDeleteUserPermission'] = undefined;
  /**
   * @member {module:model/AssignBy} transferOptionValueAssignBy
   */
  exports.prototype['transferOptionValueAssignBy'] = undefined;
  /**
   * @member {Boolean} isHideTree
   */
  exports.prototype['isHideTree'] = undefined;
  /**
   * @member {module:model/ServiceScopeSettings} scopeSettings
   */
  exports.prototype['scopeSettings'] = undefined;
  /**
   * @member {module:model/AssignBy} departmentAssignBy
   */
  exports.prototype['departmentAssignBy'] = undefined;
  /**
   * @member {Array.<module:model/CustomMetadata>} metadatas
   */
  exports.prototype['metadatas'] = undefined;
  /**
   * @member {Boolean} hideRequestSummary
   */
  exports.prototype['hideRequestSummary'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/ServiceType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {String} department
   */
  exports.prototype['department'] = undefined;
  /**
   * @member {Boolean} loadDepartmentFromUps
   */
  exports.prototype['loadDepartmentFromUps'] = undefined;
  /**
   * @member {Array.<String>} departments
   */
  exports.prototype['departments'] = undefined;
  /**
   * @member {module:model/ApiUser} serviceContact
   */
  exports.prototype['serviceContact'] = undefined;
  /**
   * @member {module:model/ApiUser} serviceAdminContact
   */
  exports.prototype['serviceAdminContact'] = undefined;
  /**
   * @member {Boolean} approversContainManagerRole
   */
  exports.prototype['approversContainManagerRole'] = undefined;
  /**
   * @member {module:model/CommonStatus} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {Boolean} showServiceInCatalog
   */
  exports.prototype['showServiceInCatalog'] = undefined;
  /**
   * @member {module:model/CustomActionSettings} customActions
   */
  exports.prototype['customActions'] = undefined;
  /**
   * @member {String} approvalProcessId
   */
  exports.prototype['approvalProcessId'] = undefined;
  /**
   * @member {Number} languageId
   */
  exports.prototype['languageId'] = undefined;
  /**
   * @member {String} categoryId
   */
  exports.prototype['categoryId'] = undefined;



  return exports;
}));



/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.2.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Terminology'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Terminology'));
  } else {
    // Browser globals (root is window)
    if (!root.CgClient) {
      root.CgClient = {};
    }
    root.CgClient.ApplicationSettings = factory(root.CgClient.ApiClient, root.CgClient.Terminology);
  }
}(this, function(ApiClient, Terminology) {
  'use strict';



  /**
   * The ApplicationSettings model module.
   * @module model/ApplicationSettings
   * @version 1.0
   */

  /**
   * Constructs a new <code>ApplicationSettings</code>.
   * @alias module:model/ApplicationSettings
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ApplicationSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApplicationSettings} obj Optional instance to populate.
   * @return {module:model/ApplicationSettings} The populated <code>ApplicationSettings</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('localeId')) {
        obj['localeId'] = ApiClient.convertToType(data['localeId'], 'Number');
      }
      if (data.hasOwnProperty('locale')) {
        obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
      }
      if (data.hasOwnProperty('timezoneId')) {
        obj['timezoneId'] = ApiClient.convertToType(data['timezoneId'], 'Number');
      }
      if (data.hasOwnProperty('terminologies')) {
        obj['terminologies'] = ApiClient.convertToType(data['terminologies'], [Terminology]);
      }
    }
    return obj;
  }

  /**
   * @member {Number} localeId
   */
  exports.prototype['localeId'] = undefined;
  /**
   * @member {String} locale
   */
  exports.prototype['locale'] = undefined;
  /**
   * @member {Number} timezoneId
   */
  exports.prototype['timezoneId'] = undefined;
  /**
   * @member {Array.<module:model/Terminology>} terminologies
   */
  exports.prototype['terminologies'] = undefined;



  return exports;
}));



/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GuidModel from './GuidModel';

/**
 * The TeamsTemplateSettings model module.
 * @module model/TeamsTemplateSettings
 * @version 1.0
 */
class TeamsTemplateSettings {
    /**
     * Constructs a new <code>TeamsTemplateSettings</code>.
     * @alias module:model/TeamsTemplateSettings
     */
    constructor() { 
        
        TeamsTemplateSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamsTemplateSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamsTemplateSettings} obj Optional instance to populate.
     * @return {module:model/TeamsTemplateSettings} The populated <code>TeamsTemplateSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamsTemplateSettings();

            if (data.hasOwnProperty('enableCreateTeamFromScratch')) {
                obj['enableCreateTeamFromScratch'] = ApiClient.convertToType(data['enableCreateTeamFromScratch'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCreateTeamFromExistTeam')) {
                obj['enableCreateTeamFromExistTeam'] = ApiClient.convertToType(data['enableCreateTeamFromExistTeam'], 'Boolean');
            }
            if (data.hasOwnProperty('selectedTemplate')) {
                obj['selectedTemplate'] = GuidModel.constructFromObject(data['selectedTemplate']);
            }
            if (data.hasOwnProperty('enableCloneChannels')) {
                obj['enableCloneChannels'] = ApiClient.convertToType(data['enableCloneChannels'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCloneApps')) {
                obj['enableCloneApps'] = ApiClient.convertToType(data['enableCloneApps'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCloneTabs')) {
                obj['enableCloneTabs'] = ApiClient.convertToType(data['enableCloneTabs'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCloneMembers')) {
                obj['enableCloneMembers'] = ApiClient.convertToType(data['enableCloneMembers'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCloneTeamSetting')) {
                obj['enableCloneTeamSetting'] = ApiClient.convertToType(data['enableCloneTeamSetting'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCloneTeamPrivacy')) {
                obj['enableCloneTeamPrivacy'] = ApiClient.convertToType(data['enableCloneTeamPrivacy'], 'Boolean');
            }
            if (data.hasOwnProperty('enableCloneTeamClassification')) {
                obj['enableCloneTeamClassification'] = ApiClient.convertToType(data['enableCloneTeamClassification'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} enableCreateTeamFromScratch
 */
TeamsTemplateSettings.prototype['enableCreateTeamFromScratch'] = undefined;

/**
 * @member {Boolean} enableCreateTeamFromExistTeam
 */
TeamsTemplateSettings.prototype['enableCreateTeamFromExistTeam'] = undefined;

/**
 * @member {module:model/GuidModel} selectedTemplate
 */
TeamsTemplateSettings.prototype['selectedTemplate'] = undefined;

/**
 * @member {Boolean} enableCloneChannels
 */
TeamsTemplateSettings.prototype['enableCloneChannels'] = undefined;

/**
 * @member {Boolean} enableCloneApps
 */
TeamsTemplateSettings.prototype['enableCloneApps'] = undefined;

/**
 * @member {Boolean} enableCloneTabs
 */
TeamsTemplateSettings.prototype['enableCloneTabs'] = undefined;

/**
 * @member {Boolean} enableCloneMembers
 */
TeamsTemplateSettings.prototype['enableCloneMembers'] = undefined;

/**
 * @member {Boolean} enableCloneTeamSetting
 */
TeamsTemplateSettings.prototype['enableCloneTeamSetting'] = undefined;

/**
 * @member {Boolean} enableCloneTeamPrivacy
 */
TeamsTemplateSettings.prototype['enableCloneTeamPrivacy'] = undefined;

/**
 * @member {Boolean} enableCloneTeamClassification
 */
TeamsTemplateSettings.prototype['enableCloneTeamClassification'] = undefined;






export default TeamsTemplateSettings;


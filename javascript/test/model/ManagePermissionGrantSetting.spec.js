/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudGovernanceApi);
  }
}(this, function(expect, CloudGovernanceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudGovernanceApi.ManagePermissionGrantSetting();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ManagePermissionGrantSetting', function() {
    it('should create an instance of ManagePermissionGrantSetting', function() {
      // uncomment below and update the code to test ManagePermissionGrantSetting
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be.a(CloudGovernanceApi.ManagePermissionGrantSetting);
    });

    it('should have the property isEnableGrantPermission (base name: "isEnableGrantPermission")', function() {
      // uncomment below and update the code to test the property isEnableGrantPermission
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property isGrantTemporaryPermission (base name: "isGrantTemporaryPermission")', function() {
      // uncomment below and update the code to test the property isGrantTemporaryPermission
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property grantPermissionAssignBy (base name: "grantPermissionAssignBy")', function() {
      // uncomment below and update the code to test the property grantPermissionAssignBy
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property temporaryPermissionDuration (base name: "temporaryPermissionDuration")', function() {
      // uncomment below and update the code to test the property temporaryPermissionDuration
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property temporaryDurationType (base name: "temporaryDurationType")', function() {
      // uncomment below and update the code to test the property temporaryDurationType
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property isMaxTemporaryDurationSetted (base name: "isMaxTemporaryDurationSetted")', function() {
      // uncomment below and update the code to test the property isMaxTemporaryDurationSetted
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property temporaryPermissionMaxDuration (base name: "temporaryPermissionMaxDuration")', function() {
      // uncomment below and update the code to test the property temporaryPermissionMaxDuration
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property temporaryPermissionMaxDurationType (base name: "temporaryPermissionMaxDurationType")', function() {
      // uncomment below and update the code to test the property temporaryPermissionMaxDurationType
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property isEnableExpireNotify (base name: "isEnableExpireNotify")', function() {
      // uncomment below and update the code to test the property isEnableExpireNotify
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property expireNotifyDuration (base name: "expireNotifyDuration")', function() {
      // uncomment below and update the code to test the property expireNotifyDuration
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property expireNotifyDurationType (base name: "expireNotifyDurationType")', function() {
      // uncomment below and update the code to test the property expireNotifyDurationType
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property expireNotifyEmailTemplate (base name: "expireNotifyEmailTemplate")', function() {
      // uncomment below and update the code to test the property expireNotifyEmailTemplate
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property isEnableWelcomeNotify (base name: "isEnableWelcomeNotify")', function() {
      // uncomment below and update the code to test the property isEnableWelcomeNotify
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property welcomeEmailSubject (base name: "welcomeEmailSubject")', function() {
      // uncomment below and update the code to test the property welcomeEmailSubject
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property welcomeEmailBody (base name: "welcomeEmailBody")', function() {
      // uncomment below and update the code to test the property welcomeEmailBody
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property welcomeEmailAssignBy (base name: "welcomeEmailAssignBy")', function() {
      // uncomment below and update the code to test the property welcomeEmailAssignBy
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

    it('should have the property allowSpecifyTemporayPermissionDuration (base name: "allowSpecifyTemporayPermissionDuration")', function() {
      // uncomment below and update the code to test the property allowSpecifyTemporayPermissionDuration
      //var instane = new CloudGovernanceApi.ManagePermissionGrantSetting();
      //expect(instance).to.be();
    });

  });

}));

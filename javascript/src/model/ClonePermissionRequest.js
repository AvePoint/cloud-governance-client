/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiUser from './ApiUser';
import ClonePermissionAdditionalOption from './ClonePermissionAdditionalOption';
import ClonePermissionOption from './ClonePermissionOption';
import RequestMetadata from './RequestMetadata';
import RequestStatus from './RequestStatus';
import ServiceType from './ServiceType';

/**
 * The ClonePermissionRequest model module.
 * @module model/ClonePermissionRequest
 * @version 1.0
 */
class ClonePermissionRequest {
    /**
     * Constructs a new <code>ClonePermissionRequest</code>.
     * @alias module:model/ClonePermissionRequest
     */
    constructor() { 
        
        ClonePermissionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClonePermissionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClonePermissionRequest} obj Optional instance to populate.
     * @return {module:model/ClonePermissionRequest} The populated <code>ClonePermissionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClonePermissionRequest();

            if (data.hasOwnProperty('urls')) {
                obj['urls'] = ApiClient.convertToType(data['urls'], ['String']);
            }
            if (data.hasOwnProperty('sourceUser')) {
                obj['sourceUser'] = ApiUser.constructFromObject(data['sourceUser']);
            }
            if (data.hasOwnProperty('targetUser')) {
                obj['targetUser'] = ApiUser.constructFromObject(data['targetUser']);
            }
            if (data.hasOwnProperty('cloneOption')) {
                obj['cloneOption'] = ClonePermissionOption.constructFromObject(data['cloneOption']);
            }
            if (data.hasOwnProperty('additionalCloneOption')) {
                obj['additionalCloneOption'] = ClonePermissionAdditionalOption.constructFromObject(data['additionalCloneOption']);
            }
            if (data.hasOwnProperty('enabledRemoveExplicitPermission')) {
                obj['enabledRemoveExplicitPermission'] = ApiClient.convertToType(data['enabledRemoveExplicitPermission'], 'Boolean');
            }
            if (data.hasOwnProperty('enabledRemoveUserFromSPGroup')) {
                obj['enabledRemoveUserFromSPGroup'] = ApiClient.convertToType(data['enabledRemoveUserFromSPGroup'], 'Boolean');
            }
            if (data.hasOwnProperty('enabledDeleteUserPermission')) {
                obj['enabledDeleteUserPermission'] = ApiClient.convertToType(data['enabledDeleteUserPermission'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('department')) {
                obj['department'] = ApiClient.convertToType(data['department'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('notesToApprovers')) {
                obj['notesToApprovers'] = ApiClient.convertToType(data['notesToApprovers'], 'String');
            }
            if (data.hasOwnProperty('questionnaireId')) {
                obj['questionnaireId'] = ApiClient.convertToType(data['questionnaireId'], 'String');
            }
            if (data.hasOwnProperty('metadatas')) {
                obj['metadatas'] = ApiClient.convertToType(data['metadatas'], [RequestMetadata]);
            }
            if (data.hasOwnProperty('ticketNumber')) {
                obj['ticketNumber'] = ApiClient.convertToType(data['ticketNumber'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ServiceType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('typeDescription')) {
                obj['typeDescription'] = ApiClient.convertToType(data['typeDescription'], 'String');
            }
            if (data.hasOwnProperty('requester')) {
                obj['requester'] = ApiClient.convertToType(data['requester'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = RequestStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('progressStatus')) {
                obj['progressStatus'] = ApiClient.convertToType(data['progressStatus'], 'Number');
            }
            if (data.hasOwnProperty('progressStatusDescription')) {
                obj['progressStatusDescription'] = ApiClient.convertToType(data['progressStatusDescription'], 'String');
            }
            if (data.hasOwnProperty('submittedTime')) {
                obj['submittedTime'] = ApiClient.convertToType(data['submittedTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('assignTo')) {
                obj['assignTo'] = ApiClient.convertToType(data['assignTo'], 'String');
            }
            if (data.hasOwnProperty('fullPath')) {
                obj['fullPath'] = ApiClient.convertToType(data['fullPath'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} urls
 */
ClonePermissionRequest.prototype['urls'] = undefined;

/**
 * @member {module:model/ApiUser} sourceUser
 */
ClonePermissionRequest.prototype['sourceUser'] = undefined;

/**
 * @member {module:model/ApiUser} targetUser
 */
ClonePermissionRequest.prototype['targetUser'] = undefined;

/**
 * @member {module:model/ClonePermissionOption} cloneOption
 */
ClonePermissionRequest.prototype['cloneOption'] = undefined;

/**
 * @member {module:model/ClonePermissionAdditionalOption} additionalCloneOption
 */
ClonePermissionRequest.prototype['additionalCloneOption'] = undefined;

/**
 * @member {Boolean} enabledRemoveExplicitPermission
 */
ClonePermissionRequest.prototype['enabledRemoveExplicitPermission'] = undefined;

/**
 * @member {Boolean} enabledRemoveUserFromSPGroup
 */
ClonePermissionRequest.prototype['enabledRemoveUserFromSPGroup'] = undefined;

/**
 * @member {Boolean} enabledDeleteUserPermission
 */
ClonePermissionRequest.prototype['enabledDeleteUserPermission'] = undefined;

/**
 * @member {String} id
 */
ClonePermissionRequest.prototype['id'] = undefined;

/**
 * @member {String} serviceId
 */
ClonePermissionRequest.prototype['serviceId'] = undefined;

/**
 * @member {String} department
 */
ClonePermissionRequest.prototype['department'] = undefined;

/**
 * @member {String} summary
 */
ClonePermissionRequest.prototype['summary'] = undefined;

/**
 * @member {String} notesToApprovers
 */
ClonePermissionRequest.prototype['notesToApprovers'] = undefined;

/**
 * @member {String} questionnaireId
 */
ClonePermissionRequest.prototype['questionnaireId'] = undefined;

/**
 * @member {Array.<module:model/RequestMetadata>} metadatas
 */
ClonePermissionRequest.prototype['metadatas'] = undefined;

/**
 * @member {Number} ticketNumber
 */
ClonePermissionRequest.prototype['ticketNumber'] = undefined;

/**
 * @member {module:model/ServiceType} type
 */
ClonePermissionRequest.prototype['type'] = undefined;

/**
 * @member {String} typeDescription
 */
ClonePermissionRequest.prototype['typeDescription'] = undefined;

/**
 * @member {String} requester
 */
ClonePermissionRequest.prototype['requester'] = undefined;

/**
 * @member {module:model/RequestStatus} status
 */
ClonePermissionRequest.prototype['status'] = undefined;

/**
 * @member {Number} progressStatus
 */
ClonePermissionRequest.prototype['progressStatus'] = undefined;

/**
 * @member {String} progressStatusDescription
 */
ClonePermissionRequest.prototype['progressStatusDescription'] = undefined;

/**
 * @member {Date} submittedTime
 */
ClonePermissionRequest.prototype['submittedTime'] = undefined;

/**
 * @member {Date} lastUpdated
 */
ClonePermissionRequest.prototype['lastUpdated'] = undefined;

/**
 * @member {Date} createdTime
 */
ClonePermissionRequest.prototype['createdTime'] = undefined;

/**
 * @member {String} assignTo
 */
ClonePermissionRequest.prototype['assignTo'] = undefined;

/**
 * @member {String} fullPath
 */
ClonePermissionRequest.prototype['fullPath'] = undefined;






export default ClonePermissionRequest;


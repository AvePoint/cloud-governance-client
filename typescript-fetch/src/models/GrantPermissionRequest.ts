// tslint:disable
/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ExternalUserSharingSettings,
    ExternalUserSharingSettingsFromJSON,
    ExternalUserSharingSettingsFromJSONTyped,
    ExternalUserSharingSettingsToJSON,
    GrantPermissionRequestDurationSettings,
    GrantPermissionRequestDurationSettingsFromJSON,
    GrantPermissionRequestDurationSettingsFromJSONTyped,
    GrantPermissionRequestDurationSettingsToJSON,
    GrantPermissionRequestPermissionSettings,
    GrantPermissionRequestPermissionSettingsFromJSON,
    GrantPermissionRequestPermissionSettingsFromJSONTyped,
    GrantPermissionRequestPermissionSettingsToJSON,
    GrantPermissionSPObject,
    GrantPermissionSPObjectFromJSON,
    GrantPermissionSPObjectFromJSONTyped,
    GrantPermissionSPObjectToJSON,
    RequestMetadata,
    RequestMetadataFromJSON,
    RequestMetadataFromJSONTyped,
    RequestMetadataToJSON,
    RequestStatus,
    RequestStatusFromJSON,
    RequestStatusFromJSONTyped,
    RequestStatusToJSON,
    ServiceType,
    ServiceTypeFromJSON,
    ServiceTypeFromJSONTyped,
    ServiceTypeToJSON,
    SharingEnabledUser,
    SharingEnabledUserFromJSON,
    SharingEnabledUserFromJSONTyped,
    SharingEnabledUserToJSON,
    WelcomeEmailSettings,
    WelcomeEmailSettingsFromJSON,
    WelcomeEmailSettingsFromJSONTyped,
    WelcomeEmailSettingsToJSON,
} from './';

/**
 * 
 * @export
 * @interface GrantPermissionRequest
 */
export interface GrantPermissionRequest {
    /**
     * 
     * @type {GrantPermissionSPObject}
     * @memberof GrantPermissionRequest
     */
    url?: GrantPermissionSPObject;
    /**
     * 
     * @type {GrantPermissionRequestPermissionSettings}
     * @memberof GrantPermissionRequest
     */
    permissionSettings?: GrantPermissionRequestPermissionSettings;
    /**
     * 
     * @type {GrantPermissionRequestDurationSettings}
     * @memberof GrantPermissionRequest
     */
    permissionDurationSettings?: GrantPermissionRequestDurationSettings;
    /**
     * 
     * @type {Array<SharingEnabledUser>}
     * @memberof GrantPermissionRequest
     */
    selectedUsers?: Array<SharingEnabledUser> | null;
    /**
     * 
     * @type {ExternalUserSharingSettings}
     * @memberof GrantPermissionRequest
     */
    externalUserSharingSettings?: ExternalUserSharingSettings;
    /**
     * 
     * @type {WelcomeEmailSettings}
     * @memberof GrantPermissionRequest
     */
    welcomeEmailSettings?: WelcomeEmailSettings;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    serviceId?: string;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    department?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    summary?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    notesToApprovers?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    questionnaireId?: string | null;
    /**
     * 
     * @type {Array<RequestMetadata>}
     * @memberof GrantPermissionRequest
     */
    metadatas?: Array<RequestMetadata> | null;
    /**
     * 
     * @type {number}
     * @memberof GrantPermissionRequest
     */
    ticketNumber?: number | null;
    /**
     * 
     * @type {ServiceType}
     * @memberof GrantPermissionRequest
     */
    type?: ServiceType;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    readonly typeDescription?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    requester?: string | null;
    /**
     * 
     * @type {RequestStatus}
     * @memberof GrantPermissionRequest
     */
    status?: RequestStatus;
    /**
     * 
     * @type {number}
     * @memberof GrantPermissionRequest
     */
    readonly progressStatus?: number;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    readonly progressStatusDescription?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof GrantPermissionRequest
     */
    submittedTime?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GrantPermissionRequest
     */
    lastUpdated?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GrantPermissionRequest
     */
    createdTime?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    assignTo?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GrantPermissionRequest
     */
    fullPath?: string | null;
}

export function GrantPermissionRequestFromJSON(json: any): GrantPermissionRequest {
    return GrantPermissionRequestFromJSONTyped(json, false);
}

export function GrantPermissionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrantPermissionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : GrantPermissionSPObjectFromJSON(json['url']),
        'permissionSettings': !exists(json, 'permissionSettings') ? undefined : GrantPermissionRequestPermissionSettingsFromJSON(json['permissionSettings']),
        'permissionDurationSettings': !exists(json, 'permissionDurationSettings') ? undefined : GrantPermissionRequestDurationSettingsFromJSON(json['permissionDurationSettings']),
        'selectedUsers': !exists(json, 'selectedUsers') ? undefined : (json['selectedUsers'] as Array<any>).map(SharingEnabledUserFromJSON),
        'externalUserSharingSettings': !exists(json, 'externalUserSharingSettings') ? undefined : ExternalUserSharingSettingsFromJSON(json['externalUserSharingSettings']),
        'welcomeEmailSettings': !exists(json, 'welcomeEmailSettings') ? undefined : WelcomeEmailSettingsFromJSON(json['welcomeEmailSettings']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'serviceId': !exists(json, 'serviceId') ? undefined : json['serviceId'],
        'department': !exists(json, 'department') ? undefined : json['department'],
        'summary': !exists(json, 'summary') ? undefined : json['summary'],
        'notesToApprovers': !exists(json, 'notesToApprovers') ? undefined : json['notesToApprovers'],
        'questionnaireId': !exists(json, 'questionnaireId') ? undefined : json['questionnaireId'],
        'metadatas': !exists(json, 'metadatas') ? undefined : (json['metadatas'] as Array<any>).map(RequestMetadataFromJSON),
        'ticketNumber': !exists(json, 'ticketNumber') ? undefined : json['ticketNumber'],
        'type': !exists(json, 'type') ? undefined : ServiceTypeFromJSON(json['type']),
        'typeDescription': !exists(json, 'typeDescription') ? undefined : json['typeDescription'],
        'requester': !exists(json, 'requester') ? undefined : json['requester'],
        'status': !exists(json, 'status') ? undefined : RequestStatusFromJSON(json['status']),
        'progressStatus': !exists(json, 'progressStatus') ? undefined : json['progressStatus'],
        'progressStatusDescription': !exists(json, 'progressStatusDescription') ? undefined : json['progressStatusDescription'],
        'submittedTime': !exists(json, 'submittedTime') ? undefined : new Date(json['submittedTime']),
        'lastUpdated': !exists(json, 'lastUpdated') ? undefined : new Date(json['lastUpdated']),
        'createdTime': !exists(json, 'createdTime') ? undefined : new Date(json['createdTime']),
        'assignTo': !exists(json, 'assignTo') ? undefined : json['assignTo'],
        'fullPath': !exists(json, 'fullPath') ? undefined : json['fullPath'],
    };
}

export function GrantPermissionRequestToJSON(value?: GrantPermissionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': GrantPermissionSPObjectToJSON(value.url),
        'permissionSettings': GrantPermissionRequestPermissionSettingsToJSON(value.permissionSettings),
        'permissionDurationSettings': GrantPermissionRequestDurationSettingsToJSON(value.permissionDurationSettings),
        'selectedUsers': value.selectedUsers == null ? undefined : (value.selectedUsers as Array<any>).map(SharingEnabledUserToJSON),
        'externalUserSharingSettings': ExternalUserSharingSettingsToJSON(value.externalUserSharingSettings),
        'welcomeEmailSettings': WelcomeEmailSettingsToJSON(value.welcomeEmailSettings),
        'id': value.id,
        'serviceId': value.serviceId,
        'department': value.department,
        'summary': value.summary,
        'notesToApprovers': value.notesToApprovers,
        'questionnaireId': value.questionnaireId,
        'metadatas': value.metadatas == null ? undefined : (value.metadatas as Array<any>).map(RequestMetadataToJSON),
        'ticketNumber': value.ticketNumber,
        'type': ServiceTypeToJSON(value.type),
        'requester': value.requester,
        'status': RequestStatusToJSON(value.status),
        'submittedTime': value.submittedTime == null ? undefined : value.submittedTime.toISOString(),
        'lastUpdated': value.lastUpdated == null ? undefined : value.lastUpdated.toISOString(),
        'createdTime': value.createdTime == null ? undefined : value.createdTime.toISOString(),
        'assignTo': value.assignTo,
        'fullPath': value.fullPath,
    };
}



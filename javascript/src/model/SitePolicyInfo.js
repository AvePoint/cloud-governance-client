/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommonStatus from './CommonStatus';
import PolicyDaoSetting from './PolicyDaoSetting';
import PolicyElectionSetting from './PolicyElectionSetting';
import PolicyExpirationSetting from './PolicyExpirationSetting';
import PolicyIconSetting from './PolicyIconSetting';
import PolicyLifecycleSetting from './PolicyLifecycleSetting';
import PolicyQuotaSetting from './PolicyQuotaSetting';
import PolicyQuotaThresholdSetting from './PolicyQuotaThresholdSetting';
import PolicyRecertificationSetting from './PolicyRecertificationSetting';
import PolicySharingSetting from './PolicySharingSetting';
import PolicyType from './PolicyType';
import ReapplyPolicySetting from './ReapplyPolicySetting';

/**
 * The SitePolicyInfo model module.
 * @module model/SitePolicyInfo
 * @version 1.0
 */
class SitePolicyInfo {
    /**
     * Constructs a new <code>SitePolicyInfo</code>.
     * @alias module:model/SitePolicyInfo
     */
    constructor() { 
        
        SitePolicyInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SitePolicyInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SitePolicyInfo} obj Optional instance to populate.
     * @return {module:model/SitePolicyInfo} The populated <code>SitePolicyInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SitePolicyInfo();

            if (data.hasOwnProperty('quotaSetting')) {
                obj['quotaSetting'] = PolicyQuotaSetting.constructFromObject(data['quotaSetting']);
            }
            if (data.hasOwnProperty('sharingSetting')) {
                obj['sharingSetting'] = PolicySharingSetting.constructFromObject(data['sharingSetting']);
            }
            if (data.hasOwnProperty('isDesignerEnabled')) {
                obj['isDesignerEnabled'] = ApiClient.convertToType(data['isDesignerEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('siteMaxDepth')) {
                obj['siteMaxDepth'] = ApiClient.convertToType(data['siteMaxDepth'], 'Number');
            }
            if (data.hasOwnProperty('iconSetting')) {
                obj['iconSetting'] = PolicyIconSetting.constructFromObject(data['iconSetting']);
            }
            if (data.hasOwnProperty('daoSetting')) {
                obj['daoSetting'] = PolicyDaoSetting.constructFromObject(data['daoSetting']);
            }
            if (data.hasOwnProperty('leasePeriodSetting')) {
                obj['leasePeriodSetting'] = PolicyExpirationSetting.constructFromObject(data['leasePeriodSetting']);
            }
            if (data.hasOwnProperty('inactivitySetting')) {
                obj['inactivitySetting'] = PolicyExpirationSetting.constructFromObject(data['inactivitySetting']);
            }
            if (data.hasOwnProperty('lifecycleSetting')) {
                obj['lifecycleSetting'] = PolicyLifecycleSetting.constructFromObject(data['lifecycleSetting']);
            }
            if (data.hasOwnProperty('recertificationSetting')) {
                obj['recertificationSetting'] = PolicyRecertificationSetting.constructFromObject(data['recertificationSetting']);
            }
            if (data.hasOwnProperty('renewalSetting')) {
                obj['renewalSetting'] = PolicyRecertificationSetting.constructFromObject(data['renewalSetting']);
            }
            if (data.hasOwnProperty('electionSetting')) {
                obj['electionSetting'] = PolicyElectionSetting.constructFromObject(data['electionSetting']);
            }
            if (data.hasOwnProperty('quotaThresholdSetting')) {
                obj['quotaThresholdSetting'] = PolicyQuotaThresholdSetting.constructFromObject(data['quotaThresholdSetting']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = PolicyType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('farmId')) {
                obj['farmId'] = ApiClient.convertToType(data['farmId'], 'String');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('modifiedTime')) {
                obj['modifiedTime'] = ApiClient.convertToType(data['modifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('modifiedBy')) {
                obj['modifiedBy'] = ApiClient.convertToType(data['modifiedBy'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = CommonStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('isReferenced')) {
                obj['isReferenced'] = ApiClient.convertToType(data['isReferenced'], 'Boolean');
            }
            if (data.hasOwnProperty('reapplyPolicySetting')) {
                obj['reapplyPolicySetting'] = ReapplyPolicySetting.constructFromObject(data['reapplyPolicySetting']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/PolicyQuotaSetting} quotaSetting
 */
SitePolicyInfo.prototype['quotaSetting'] = undefined;

/**
 * @member {module:model/PolicySharingSetting} sharingSetting
 */
SitePolicyInfo.prototype['sharingSetting'] = undefined;

/**
 * @member {Boolean} isDesignerEnabled
 */
SitePolicyInfo.prototype['isDesignerEnabled'] = undefined;

/**
 * @member {Number} siteMaxDepth
 */
SitePolicyInfo.prototype['siteMaxDepth'] = undefined;

/**
 * @member {module:model/PolicyIconSetting} iconSetting
 */
SitePolicyInfo.prototype['iconSetting'] = undefined;

/**
 * @member {module:model/PolicyDaoSetting} daoSetting
 */
SitePolicyInfo.prototype['daoSetting'] = undefined;

/**
 * @member {module:model/PolicyExpirationSetting} leasePeriodSetting
 */
SitePolicyInfo.prototype['leasePeriodSetting'] = undefined;

/**
 * @member {module:model/PolicyExpirationSetting} inactivitySetting
 */
SitePolicyInfo.prototype['inactivitySetting'] = undefined;

/**
 * @member {module:model/PolicyLifecycleSetting} lifecycleSetting
 */
SitePolicyInfo.prototype['lifecycleSetting'] = undefined;

/**
 * @member {module:model/PolicyRecertificationSetting} recertificationSetting
 */
SitePolicyInfo.prototype['recertificationSetting'] = undefined;

/**
 * @member {module:model/PolicyRecertificationSetting} renewalSetting
 */
SitePolicyInfo.prototype['renewalSetting'] = undefined;

/**
 * @member {module:model/PolicyElectionSetting} electionSetting
 */
SitePolicyInfo.prototype['electionSetting'] = undefined;

/**
 * @member {module:model/PolicyQuotaThresholdSetting} quotaThresholdSetting
 */
SitePolicyInfo.prototype['quotaThresholdSetting'] = undefined;

/**
 * @member {String} id
 */
SitePolicyInfo.prototype['id'] = undefined;

/**
 * @member {String} name
 */
SitePolicyInfo.prototype['name'] = undefined;

/**
 * @member {String} description
 */
SitePolicyInfo.prototype['description'] = undefined;

/**
 * @member {String} category
 */
SitePolicyInfo.prototype['category'] = undefined;

/**
 * @member {String} detail
 */
SitePolicyInfo.prototype['detail'] = undefined;

/**
 * @member {module:model/PolicyType} type
 */
SitePolicyInfo.prototype['type'] = undefined;

/**
 * @member {String} farmId
 */
SitePolicyInfo.prototype['farmId'] = undefined;

/**
 * @member {Date} createdTime
 */
SitePolicyInfo.prototype['createdTime'] = undefined;

/**
 * @member {String} createdBy
 */
SitePolicyInfo.prototype['createdBy'] = undefined;

/**
 * @member {Boolean} isDeleted
 */
SitePolicyInfo.prototype['isDeleted'] = undefined;

/**
 * @member {Date} modifiedTime
 */
SitePolicyInfo.prototype['modifiedTime'] = undefined;

/**
 * @member {String} modifiedBy
 */
SitePolicyInfo.prototype['modifiedBy'] = undefined;

/**
 * @member {module:model/CommonStatus} status
 */
SitePolicyInfo.prototype['status'] = undefined;

/**
 * @member {Boolean} isReferenced
 */
SitePolicyInfo.prototype['isReferenced'] = undefined;

/**
 * @member {module:model/ReapplyPolicySetting} reapplyPolicySetting
 */
SitePolicyInfo.prototype['reapplyPolicySetting'] = undefined;






export default SitePolicyInfo;


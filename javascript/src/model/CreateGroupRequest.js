/**
 * Cloud Governance Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiUser from './ApiUser';
import DynamicGroupRuleInfo from './DynamicGroupRuleInfo';
import GeoLocationBase from './GeoLocationBase';
import GroupLeasePeriodSettings from './GroupLeasePeriodSettings';
import GroupLinks from './GroupLinks';
import HubSiteActionType from './HubSiteActionType';
import RequestMetadata from './RequestMetadata';
import RequestStatus from './RequestStatus';
import RequestTeamsSettings from './RequestTeamsSettings';
import ServiceType from './ServiceType';
import TeamsTemplateSettings from './TeamsTemplateSettings';

/**
 * The CreateGroupRequest model module.
 * @module model/CreateGroupRequest
 * @version 1.0
 */
class CreateGroupRequest {
    /**
     * Constructs a new <code>CreateGroupRequest</code>.
     * @alias module:model/CreateGroupRequest
     */
    constructor() { 
        
        CreateGroupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateGroupRequest} The populated <code>CreateGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateGroupRequest();

            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'String');
            }
            if (data.hasOwnProperty('groupIdWithoutPrefixSuffix')) {
                obj['groupIdWithoutPrefixSuffix'] = ApiClient.convertToType(data['groupIdWithoutPrefixSuffix'], 'String');
            }
            if (data.hasOwnProperty('groupName')) {
                obj['groupName'] = ApiClient.convertToType(data['groupName'], 'String');
            }
            if (data.hasOwnProperty('groupNameWithoutPrefixSuffix')) {
                obj['groupNameWithoutPrefixSuffix'] = ApiClient.convertToType(data['groupNameWithoutPrefixSuffix'], 'String');
            }
            if (data.hasOwnProperty('groupEmail')) {
                obj['groupEmail'] = ApiClient.convertToType(data['groupEmail'], 'String');
            }
            if (data.hasOwnProperty('policy')) {
                obj['policy'] = ApiClient.convertToType(data['policy'], 'String');
            }
            if (data.hasOwnProperty('groupDescription')) {
                obj['groupDescription'] = ApiClient.convertToType(data['groupDescription'], 'String');
            }
            if (data.hasOwnProperty('owners')) {
                obj['owners'] = ApiClient.convertToType(data['owners'], [ApiUser]);
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [ApiUser]);
            }
            if (data.hasOwnProperty('privacy')) {
                obj['privacy'] = ApiClient.convertToType(data['privacy'], 'Boolean');
            }
            if (data.hasOwnProperty('subscribe')) {
                obj['subscribe'] = ApiClient.convertToType(data['subscribe'], 'Boolean');
            }
            if (data.hasOwnProperty('outsideSender')) {
                obj['outsideSender'] = ApiClient.convertToType(data['outsideSender'], 'Boolean');
            }
            if (data.hasOwnProperty('enableTeamCollaboration')) {
                obj['enableTeamCollaboration'] = ApiClient.convertToType(data['enableTeamCollaboration'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('classification')) {
                obj['classification'] = ApiClient.convertToType(data['classification'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = GroupLinks.constructFromObject(data['links']);
            }
            if (data.hasOwnProperty('leasePeriodSettings')) {
                obj['leasePeriodSettings'] = GroupLeasePeriodSettings.constructFromObject(data['leasePeriodSettings']);
            }
            if (data.hasOwnProperty('teamsSettings')) {
                obj['teamsSettings'] = RequestTeamsSettings.constructFromObject(data['teamsSettings']);
            }
            if (data.hasOwnProperty('appliedSiteDesignId')) {
                obj['appliedSiteDesignId'] = ApiClient.convertToType(data['appliedSiteDesignId'], 'String');
            }
            if (data.hasOwnProperty('primaryContact')) {
                obj['primaryContact'] = ApiUser.constructFromObject(data['primaryContact']);
            }
            if (data.hasOwnProperty('secondaryContact')) {
                obj['secondaryContact'] = ApiUser.constructFromObject(data['secondaryContact']);
            }
            if (data.hasOwnProperty('enableGroupMembershipHidden')) {
                obj['enableGroupMembershipHidden'] = ApiClient.convertToType(data['enableGroupMembershipHidden'], 'Boolean');
            }
            if (data.hasOwnProperty('enableAssignedMembership')) {
                obj['enableAssignedMembership'] = ApiClient.convertToType(data['enableAssignedMembership'], 'Boolean');
            }
            if (data.hasOwnProperty('enableDynamicMembership')) {
                obj['enableDynamicMembership'] = ApiClient.convertToType(data['enableDynamicMembership'], 'Boolean');
            }
            if (data.hasOwnProperty('enableHubSite')) {
                obj['enableHubSite'] = ApiClient.convertToType(data['enableHubSite'], 'Boolean');
            }
            if (data.hasOwnProperty('hubSiteActionType')) {
                obj['hubSiteActionType'] = HubSiteActionType.constructFromObject(data['hubSiteActionType']);
            }
            if (data.hasOwnProperty('associateHubSiteId')) {
                obj['associateHubSiteId'] = ApiClient.convertToType(data['associateHubSiteId'], 'String');
            }
            if (data.hasOwnProperty('associateHubSiteTitle')) {
                obj['associateHubSiteTitle'] = ApiClient.convertToType(data['associateHubSiteTitle'], 'String');
            }
            if (data.hasOwnProperty('templateSettings')) {
                obj['templateSettings'] = TeamsTemplateSettings.constructFromObject(data['templateSettings']);
            }
            if (data.hasOwnProperty('dynamicMembershipRules')) {
                obj['dynamicMembershipRules'] = ApiClient.convertToType(data['dynamicMembershipRules'], [DynamicGroupRuleInfo]);
            }
            if (data.hasOwnProperty('multiGeoLocation')) {
                obj['multiGeoLocation'] = GeoLocationBase.constructFromObject(data['multiGeoLocation']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('department')) {
                obj['department'] = ApiClient.convertToType(data['department'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('notesToApprovers')) {
                obj['notesToApprovers'] = ApiClient.convertToType(data['notesToApprovers'], 'String');
            }
            if (data.hasOwnProperty('questionnaireId')) {
                obj['questionnaireId'] = ApiClient.convertToType(data['questionnaireId'], 'String');
            }
            if (data.hasOwnProperty('metadatas')) {
                obj['metadatas'] = ApiClient.convertToType(data['metadatas'], [RequestMetadata]);
            }
            if (data.hasOwnProperty('ticketNumber')) {
                obj['ticketNumber'] = ApiClient.convertToType(data['ticketNumber'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ServiceType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('typeDescription')) {
                obj['typeDescription'] = ApiClient.convertToType(data['typeDescription'], 'String');
            }
            if (data.hasOwnProperty('requester')) {
                obj['requester'] = ApiClient.convertToType(data['requester'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = RequestStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('progressStatus')) {
                obj['progressStatus'] = ApiClient.convertToType(data['progressStatus'], 'Number');
            }
            if (data.hasOwnProperty('progressStatusDescription')) {
                obj['progressStatusDescription'] = ApiClient.convertToType(data['progressStatusDescription'], 'String');
            }
            if (data.hasOwnProperty('submittedTime')) {
                obj['submittedTime'] = ApiClient.convertToType(data['submittedTime'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('createdTime')) {
                obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Date');
            }
            if (data.hasOwnProperty('assignTo')) {
                obj['assignTo'] = ApiClient.convertToType(data['assignTo'], 'String');
            }
            if (data.hasOwnProperty('fullPath')) {
                obj['fullPath'] = ApiClient.convertToType(data['fullPath'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} groupId
 */
CreateGroupRequest.prototype['groupId'] = undefined;

/**
 * @member {String} groupIdWithoutPrefixSuffix
 */
CreateGroupRequest.prototype['groupIdWithoutPrefixSuffix'] = undefined;

/**
 * @member {String} groupName
 */
CreateGroupRequest.prototype['groupName'] = undefined;

/**
 * @member {String} groupNameWithoutPrefixSuffix
 */
CreateGroupRequest.prototype['groupNameWithoutPrefixSuffix'] = undefined;

/**
 * @member {String} groupEmail
 */
CreateGroupRequest.prototype['groupEmail'] = undefined;

/**
 * @member {String} policy
 */
CreateGroupRequest.prototype['policy'] = undefined;

/**
 * @member {String} groupDescription
 */
CreateGroupRequest.prototype['groupDescription'] = undefined;

/**
 * @member {Array.<module:model/ApiUser>} owners
 */
CreateGroupRequest.prototype['owners'] = undefined;

/**
 * @member {Array.<module:model/ApiUser>} members
 */
CreateGroupRequest.prototype['members'] = undefined;

/**
 * @member {Boolean} privacy
 */
CreateGroupRequest.prototype['privacy'] = undefined;

/**
 * @member {Boolean} subscribe
 */
CreateGroupRequest.prototype['subscribe'] = undefined;

/**
 * @member {Boolean} outsideSender
 */
CreateGroupRequest.prototype['outsideSender'] = undefined;

/**
 * @member {Boolean} enableTeamCollaboration
 */
CreateGroupRequest.prototype['enableTeamCollaboration'] = undefined;

/**
 * @member {String} language
 */
CreateGroupRequest.prototype['language'] = undefined;

/**
 * @member {String} classification
 */
CreateGroupRequest.prototype['classification'] = undefined;

/**
 * @member {module:model/GroupLinks} links
 */
CreateGroupRequest.prototype['links'] = undefined;

/**
 * @member {module:model/GroupLeasePeriodSettings} leasePeriodSettings
 */
CreateGroupRequest.prototype['leasePeriodSettings'] = undefined;

/**
 * @member {module:model/RequestTeamsSettings} teamsSettings
 */
CreateGroupRequest.prototype['teamsSettings'] = undefined;

/**
 * @member {String} appliedSiteDesignId
 */
CreateGroupRequest.prototype['appliedSiteDesignId'] = undefined;

/**
 * @member {module:model/ApiUser} primaryContact
 */
CreateGroupRequest.prototype['primaryContact'] = undefined;

/**
 * @member {module:model/ApiUser} secondaryContact
 */
CreateGroupRequest.prototype['secondaryContact'] = undefined;

/**
 * @member {Boolean} enableGroupMembershipHidden
 */
CreateGroupRequest.prototype['enableGroupMembershipHidden'] = undefined;

/**
 * @member {Boolean} enableAssignedMembership
 */
CreateGroupRequest.prototype['enableAssignedMembership'] = undefined;

/**
 * @member {Boolean} enableDynamicMembership
 */
CreateGroupRequest.prototype['enableDynamicMembership'] = undefined;

/**
 * @member {Boolean} enableHubSite
 */
CreateGroupRequest.prototype['enableHubSite'] = undefined;

/**
 * @member {module:model/HubSiteActionType} hubSiteActionType
 */
CreateGroupRequest.prototype['hubSiteActionType'] = undefined;

/**
 * @member {String} associateHubSiteId
 */
CreateGroupRequest.prototype['associateHubSiteId'] = undefined;

/**
 * @member {String} associateHubSiteTitle
 */
CreateGroupRequest.prototype['associateHubSiteTitle'] = undefined;

/**
 * @member {module:model/TeamsTemplateSettings} templateSettings
 */
CreateGroupRequest.prototype['templateSettings'] = undefined;

/**
 * @member {Array.<module:model/DynamicGroupRuleInfo>} dynamicMembershipRules
 */
CreateGroupRequest.prototype['dynamicMembershipRules'] = undefined;

/**
 * @member {module:model/GeoLocationBase} multiGeoLocation
 */
CreateGroupRequest.prototype['multiGeoLocation'] = undefined;

/**
 * @member {String} id
 */
CreateGroupRequest.prototype['id'] = undefined;

/**
 * @member {String} serviceId
 */
CreateGroupRequest.prototype['serviceId'] = undefined;

/**
 * @member {String} department
 */
CreateGroupRequest.prototype['department'] = undefined;

/**
 * @member {String} summary
 */
CreateGroupRequest.prototype['summary'] = undefined;

/**
 * @member {String} notesToApprovers
 */
CreateGroupRequest.prototype['notesToApprovers'] = undefined;

/**
 * @member {String} questionnaireId
 */
CreateGroupRequest.prototype['questionnaireId'] = undefined;

/**
 * @member {Array.<module:model/RequestMetadata>} metadatas
 */
CreateGroupRequest.prototype['metadatas'] = undefined;

/**
 * @member {Number} ticketNumber
 */
CreateGroupRequest.prototype['ticketNumber'] = undefined;

/**
 * @member {module:model/ServiceType} type
 */
CreateGroupRequest.prototype['type'] = undefined;

/**
 * @member {String} typeDescription
 */
CreateGroupRequest.prototype['typeDescription'] = undefined;

/**
 * @member {String} requester
 */
CreateGroupRequest.prototype['requester'] = undefined;

/**
 * @member {module:model/RequestStatus} status
 */
CreateGroupRequest.prototype['status'] = undefined;

/**
 * @member {Number} progressStatus
 */
CreateGroupRequest.prototype['progressStatus'] = undefined;

/**
 * @member {String} progressStatusDescription
 */
CreateGroupRequest.prototype['progressStatusDescription'] = undefined;

/**
 * @member {Date} submittedTime
 */
CreateGroupRequest.prototype['submittedTime'] = undefined;

/**
 * @member {Date} lastUpdated
 */
CreateGroupRequest.prototype['lastUpdated'] = undefined;

/**
 * @member {Date} createdTime
 */
CreateGroupRequest.prototype['createdTime'] = undefined;

/**
 * @member {String} assignTo
 */
CreateGroupRequest.prototype['assignTo'] = undefined;

/**
 * @member {String} fullPath
 */
CreateGroupRequest.prototype['fullPath'] = undefined;






export default CreateGroupRequest;

